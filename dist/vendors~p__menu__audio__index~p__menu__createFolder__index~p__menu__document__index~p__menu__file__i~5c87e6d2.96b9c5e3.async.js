(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[2],{"+QRC":function(t,e,n){"use strict";var r=n("E9nw"),i={"text/plain":"Text","text/html":"Url",default:"Text"},a="Copy to clipboard: #{key}, Enter";function s(t){var e=(/mac os x/i.test(navigator.userAgent)?"\u2318":"Ctrl")+"+C";return t.replace(/#{\s*key\s*}/g,e)}function o(t,e){var n,o,l,c,u,h,d=!1;e||(e={}),n=e.debug||!1;try{l=r(),c=document.createRange(),u=document.getSelection(),h=document.createElement("span"),h.textContent=t,h.style.all="unset",h.style.position="fixed",h.style.top=0,h.style.clip="rect(0, 0, 0, 0)",h.style.whiteSpace="pre",h.style.webkitUserSelect="text",h.style.MozUserSelect="text",h.style.msUserSelect="text",h.style.userSelect="text",h.addEventListener("copy",(function(r){if(r.stopPropagation(),e.format)if(r.preventDefault(),"undefined"===typeof r.clipboardData){n&&console.warn("unable to use e.clipboardData"),n&&console.warn("trying IE specific stuff"),window.clipboardData.clearData();var a=i[e.format]||i["default"];window.clipboardData.setData(a,t)}else r.clipboardData.clearData(),r.clipboardData.setData(e.format,t);e.onCopy&&(r.preventDefault(),e.onCopy(r.clipboardData))})),document.body.appendChild(h),c.selectNodeContents(h),u.addRange(c);var p=document.execCommand("copy");if(!p)throw new Error("copy command was unsuccessful");d=!0}catch(f){n&&console.error("unable to copy using execCommand: ",f),n&&console.warn("trying IE specific stuff");try{window.clipboardData.setData(e.format||"text",t),e.onCopy&&e.onCopy(window.clipboardData),d=!0}catch(f){n&&console.error("unable to copy using clipboardData: ",f),n&&console.error("falling back to prompt"),o=s("message"in e?e.message:a),window.prompt(o,t)}}finally{u&&("function"==typeof u.removeRange?u.removeRange(c):u.removeAllRanges()),h&&document.body.removeChild(h),l()}return d}t.exports=o},DzJC:function(t,e,n){var r=n("sEfC"),i=n("GoyQ"),a="Expected a function";function s(t,e,n){var s=!0,o=!0;if("function"!=typeof t)throw new TypeError(a);return i(n)&&(s="leading"in n?!!n.leading:s,o="trailing"in n?!!n.trailing:o),r(t,e,{leading:s,maxWait:e,trailing:o})}t.exports=s},E9nw:function(t,e){t.exports=function(){var t=document.getSelection();if(!t.rangeCount)return function(){};for(var e=document.activeElement,n=[],r=0;r<t.rangeCount;r++)n.push(t.getRangeAt(r));switch(e.tagName.toUpperCase()){case"INPUT":case"TEXTAREA":e.blur();break;default:e=null;break}return t.removeAllRanges(),function(){"Caret"===t.type&&t.removeAllRanges(),t.rangeCount||n.forEach((function(e){t.addRange(e)})),e&&e.focus()}}},EgnG:function(t,e,n){"use strict";var r={update:null,begin:null,loopBegin:null,changeBegin:null,change:null,changeComplete:null,loopComplete:null,complete:null,loop:1,direction:"normal",autoplay:!0,timelineOffset:0},i={duration:1e3,delay:0,endDelay:0,easing:"easeOutElastic(1, .5)",round:0},a=["translateX","translateY","translateZ","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","perspective","matrix","matrix3d"],s={CSS:{},springs:{}};function o(t,e,n){return Math.min(Math.max(t,e),n)}function l(t,e){return t.indexOf(e)>-1}function c(t,e){return t.apply(null,e)}var u={arr:function(t){return Array.isArray(t)},obj:function(t){return l(Object.prototype.toString.call(t),"Object")},pth:function(t){return u.obj(t)&&t.hasOwnProperty("totalLength")},svg:function(t){return t instanceof SVGElement},inp:function(t){return t instanceof HTMLInputElement},dom:function(t){return t.nodeType||u.svg(t)},str:function(t){return"string"===typeof t},fnc:function(t){return"function"===typeof t},und:function(t){return"undefined"===typeof t},nil:function(t){return u.und(t)||null===t},hex:function(t){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(t)},rgb:function(t){return/^rgb/.test(t)},hsl:function(t){return/^hsl/.test(t)},col:function(t){return u.hex(t)||u.rgb(t)||u.hsl(t)},key:function(t){return!r.hasOwnProperty(t)&&!i.hasOwnProperty(t)&&"targets"!==t&&"keyframes"!==t}};function h(t){var e=/\(([^)]+)\)/.exec(t);return e?e[1].split(",").map((function(t){return parseFloat(t)})):[]}function d(t,e){var n=h(t),r=o(u.und(n[0])?1:n[0],.1,100),i=o(u.und(n[1])?100:n[1],.1,100),a=o(u.und(n[2])?10:n[2],.1,100),l=o(u.und(n[3])?0:n[3],.1,100),c=Math.sqrt(i/r),d=a/(2*Math.sqrt(i*r)),p=d<1?c*Math.sqrt(1-d*d):0,f=1,m=d<1?(d*c-l)/p:-l+c;function g(t){var n=e?e*t/1e3:t;return n=d<1?Math.exp(-n*d*c)*(f*Math.cos(p*n)+m*Math.sin(p*n)):(f+m*n)*Math.exp(-n*c),0===t||1===t?t:1-n}function v(){var e=s.springs[t];if(e)return e;var n=1/6,r=0,i=0;while(1)if(r+=n,1===g(r)){if(i++,i>=16)break}else i=0;var a=r*n*1e3;return s.springs[t]=a,a}return e?g:v}function p(t){return void 0===t&&(t=10),function(e){return Math.ceil(o(e,1e-6,1)*t)*(1/t)}}var f=function(){var t=11,e=1/(t-1);function n(t,e){return 1-3*e+3*t}function r(t,e){return 3*e-6*t}function i(t){return 3*t}function a(t,e,a){return((n(e,a)*t+r(e,a))*t+i(e))*t}function s(t,e,a){return 3*n(e,a)*t*t+2*r(e,a)*t+i(e)}function o(t,e,n,r,i){var s,o,l=0;do{o=e+(n-e)/2,s=a(o,r,i)-t,s>0?n=o:e=o}while(Math.abs(s)>1e-7&&++l<10);return o}function l(t,e,n,r){for(var i=0;i<4;++i){var o=s(e,n,r);if(0===o)return e;var l=a(e,n,r)-t;e-=l/o}return e}function c(n,r,i,c){if(0<=n&&n<=1&&0<=i&&i<=1){var u=new Float32Array(t);if(n!==r||i!==c)for(var h=0;h<t;++h)u[h]=a(h*e,n,i);return function(t){return n===r&&i===c||0===t||1===t?t:a(d(t),r,c)}}function d(r){for(var a=0,c=1,h=t-1;c!==h&&u[c]<=r;++c)a+=e;--c;var d=(r-u[c])/(u[c+1]-u[c]),p=a+d*e,f=s(p,n,i);return f>=.001?l(r,p,n,i):0===f?p:o(r,a,a+e,n,i)}}return c}(),m=function(){var t={linear:function(){return function(t){return t}}},e={Sine:function(){return function(t){return 1-Math.cos(t*Math.PI/2)}},Circ:function(){return function(t){return 1-Math.sqrt(1-t*t)}},Back:function(){return function(t){return t*t*(3*t-2)}},Bounce:function(){return function(t){var e,n=4;while(t<((e=Math.pow(2,--n))-1)/11);return 1/Math.pow(4,3-n)-7.5625*Math.pow((3*e-2)/22-t,2)}},Elastic:function(t,e){void 0===t&&(t=1),void 0===e&&(e=.5);var n=o(t,1,10),r=o(e,.1,2);return function(t){return 0===t||1===t?t:-n*Math.pow(2,10*(t-1))*Math.sin((t-1-r/(2*Math.PI)*Math.asin(1/n))*(2*Math.PI)/r)}}},n=["Quad","Cubic","Quart","Quint","Expo"];return n.forEach((function(t,n){e[t]=function(){return function(t){return Math.pow(t,n+2)}}})),Object.keys(e).forEach((function(n){var r=e[n];t["easeIn"+n]=r,t["easeOut"+n]=function(t,e){return function(n){return 1-r(t,e)(1-n)}},t["easeInOut"+n]=function(t,e){return function(n){return n<.5?r(t,e)(2*n)/2:1-r(t,e)(-2*n+2)/2}},t["easeOutIn"+n]=function(t,e){return function(n){return n<.5?(1-r(t,e)(1-2*n))/2:(r(t,e)(2*n-1)+1)/2}}})),t}();function g(t,e){if(u.fnc(t))return t;var n=t.split("(")[0],r=m[n],i=h(t);switch(n){case"spring":return d(t,e);case"cubicBezier":return c(f,i);case"steps":return c(p,i);default:return c(r,i)}}function v(t){try{var e=document.querySelectorAll(t);return e}catch(n){return}}function y(t,e){for(var n=t.length,r=arguments.length>=2?arguments[1]:void 0,i=[],a=0;a<n;a++)if(a in t){var s=t[a];e.call(r,s,a,t)&&i.push(s)}return i}function x(t){return t.reduce((function(t,e){return t.concat(u.arr(e)?x(e):e)}),[])}function b(t){return u.arr(t)?t:(u.str(t)&&(t=v(t)||t),t instanceof NodeList||t instanceof HTMLCollection?[].slice.call(t):[t])}function _(t,e){return t.some((function(t){return t===e}))}function w(t){var e={};for(var n in t)e[n]=t[n];return e}function M(t,e){var n=w(t);for(var r in t)n[r]=e.hasOwnProperty(r)?e[r]:t[r];return n}function S(t,e){var n=w(t);for(var r in e)n[r]=u.und(t[r])?e[r]:t[r];return n}function T(t){var e=/rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec(t);return e?"rgba("+e[1]+",1)":t}function E(t){var e=/^#?([a-f\d])([a-f\d])([a-f\d])$/i,n=t.replace(e,(function(t,e,n,r){return e+e+n+n+r+r})),r=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(n),i=parseInt(r[1],16),a=parseInt(r[2],16),s=parseInt(r[3],16);return"rgba("+i+","+a+","+s+",1)"}function A(t){var e,n,r,i=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(t)||/hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(t),a=parseInt(i[1],10)/360,s=parseInt(i[2],10)/100,o=parseInt(i[3],10)/100,l=i[4]||1;function c(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+(e-t)*(2/3-n)*6:t}if(0==s)e=n=r=o;else{var u=o<.5?o*(1+s):o+s-o*s,h=2*o-u;e=c(h,u,a+1/3),n=c(h,u,a),r=c(h,u,a-1/3)}return"rgba("+255*e+","+255*n+","+255*r+","+l+")"}function C(t){return u.rgb(t)?T(t):u.hex(t)?E(t):u.hsl(t)?A(t):void 0}function L(t){var e=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(t);if(e)return e[1]}function R(t){return l(t,"translate")||"perspective"===t?"px":l(t,"rotate")||l(t,"skew")?"deg":void 0}function P(t,e){return u.fnc(t)?t(e.target,e.id,e.total):t}function D(t,e){return t.getAttribute(e)}function I(t,e,n){var r=L(e);if(_([n,"deg","rad","turn"],r))return e;var i=s.CSS[e+n];if(!u.und(i))return i;var a=100,o=document.createElement(t.tagName),l=t.parentNode&&t.parentNode!==document?t.parentNode:document.body;l.appendChild(o),o.style.position="absolute",o.style.width=a+n;var c=a/o.offsetWidth;l.removeChild(o);var h=c*parseFloat(e);return s.CSS[e+n]=h,h}function O(t,e,n){if(e in t.style){var r=e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),i=t.style[e]||getComputedStyle(t).getPropertyValue(r)||"0";return n?I(t,i,n):i}}function N(t,e){return u.dom(t)&&!u.inp(t)&&(!u.nil(D(t,e))||u.svg(t)&&t[e])?"attribute":u.dom(t)&&_(a,e)?"transform":u.dom(t)&&"transform"!==e&&O(t,e)?"css":null!=t[e]?"object":void 0}function z(t){if(u.dom(t)){var e,n=t.style.transform||"",r=/(\w+)\(([^)]*)\)/g,i=new Map;while(e=r.exec(n))i.set(e[1],e[2]);return i}}function B(t,e,n,r){var i=l(e,"scale")?1:0+R(e),a=z(t).get(e)||i;return n&&(n.transforms.list.set(e,a),n.transforms["last"]=e),r?I(t,a,r):a}function F(t,e,n,r){switch(N(t,e)){case"transform":return B(t,e,r,n);case"css":return O(t,e,n);case"attribute":return D(t,e);default:return t[e]||0}}function U(t,e){var n=/^(\*=|\+=|-=)/.exec(t);if(!n)return t;var r=L(t)||0,i=parseFloat(e),a=parseFloat(t.replace(n[0],""));switch(n[0][0]){case"+":return i+a+r;case"-":return i-a+r;case"*":return i*a+r}}function H(t,e){if(u.col(t))return C(t);if(/\s/g.test(t))return t;var n=L(t),r=n?t.substr(0,t.length-n.length):t;return e?r+e:r}function k(t,e){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))}function G(t){return 2*Math.PI*D(t,"r")}function V(t){return 2*D(t,"width")+2*D(t,"height")}function W(t){return k({x:D(t,"x1"),y:D(t,"y1")},{x:D(t,"x2"),y:D(t,"y2")})}function j(t){for(var e,n=t.points,r=0,i=0;i<n.numberOfItems;i++){var a=n.getItem(i);i>0&&(r+=k(e,a)),e=a}return r}function q(t){var e=t.points;return j(t)+k(e.getItem(e.numberOfItems-1),e.getItem(0))}function X(t){if(t.getTotalLength)return t.getTotalLength();switch(t.tagName.toLowerCase()){case"circle":return G(t);case"rect":return V(t);case"line":return W(t);case"polyline":return j(t);case"polygon":return q(t)}}function Y(t){var e=X(t);return t.setAttribute("stroke-dasharray",e),e}function J(t){var e=t.parentNode;while(u.svg(e)){if(!u.svg(e.parentNode))break;e=e.parentNode}return e}function Z(t,e){var n=e||{},r=n.el||J(t),i=r.getBoundingClientRect(),a=D(r,"viewBox"),s=i.width,o=i.height,l=n.viewBox||(a?a.split(" "):[0,0,s,o]);return{el:r,viewBox:l,x:l[0]/1,y:l[1]/1,w:s,h:o,vW:l[2],vH:l[3]}}function K(t,e){var n=u.str(t)?v(t)[0]:t,r=e||100;return function(t){return{property:t,el:n,svg:Z(n),totalLength:X(n)*(r/100)}}}function Q(t,e,n){function r(n){void 0===n&&(n=0);var r=e+n>=1?e+n:0;return t.el.getPointAtLength(r)}var i=Z(t.el,t.svg),a=r(),s=r(-1),o=r(1),l=n?1:i.w/i.vW,c=n?1:i.h/i.vH;switch(t.property){case"x":return(a.x-i.x)*l;case"y":return(a.y-i.y)*c;case"angle":return 180*Math.atan2(o.y-s.y,o.x-s.x)/Math.PI}}function $(t,e){var n=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?/g,r=H(u.pth(t)?t.totalLength:t,e)+"";return{original:r,numbers:r.match(n)?r.match(n).map(Number):[0],strings:u.str(t)||e?r.split(n):[]}}function tt(t){var e=t?x(u.arr(t)?t.map(b):b(t)):[];return y(e,(function(t,e,n){return n.indexOf(t)===e}))}function et(t){var e=tt(t);return e.map((function(t,n){return{target:t,id:n,total:e.length,transforms:{list:z(t)}}}))}function nt(t,e){var n=w(e);if(/^spring/.test(n.easing)&&(n.duration=d(n.easing)),u.arr(t)){var r=t.length,i=2===r&&!u.obj(t[0]);i?t={value:t}:u.fnc(e.duration)||(n.duration=e.duration/r)}var a=u.arr(t)?t:[t];return a.map((function(t,n){var r=u.obj(t)&&!u.pth(t)?t:{value:t};return u.und(r.delay)&&(r.delay=n?0:e.delay),u.und(r.endDelay)&&(r.endDelay=n===a.length-1?e.endDelay:0),r})).map((function(t){return S(t,n)}))}function rt(t){for(var e=y(x(t.map((function(t){return Object.keys(t)}))),(function(t){return u.key(t)})).reduce((function(t,e){return t.indexOf(e)<0&&t.push(e),t}),[]),n={},r=function(r){var i=e[r];n[i]=t.map((function(t){var e={};for(var n in t)u.key(n)?n==i&&(e.value=t[n]):e[n]=t[n];return e}))},i=0;i<e.length;i++)r(i);return n}function it(t,e){var n=[],r=e.keyframes;for(var i in r&&(e=S(rt(r),e)),e)u.key(i)&&n.push({name:i,tweens:nt(e[i],t)});return n}function at(t,e){var n={};for(var r in t){var i=P(t[r],e);u.arr(i)&&(i=i.map((function(t){return P(t,e)})),1===i.length&&(i=i[0])),n[r]=i}return n.duration=parseFloat(n.duration),n.delay=parseFloat(n.delay),n}function st(t,e){var n;return t.tweens.map((function(r){var i=at(r,e),a=i.value,s=u.arr(a)?a[1]:a,o=L(s),l=F(e.target,t.name,o,e),c=n?n.to.original:l,h=u.arr(a)?a[0]:c,d=L(h)||L(l),p=o||d;return u.und(s)&&(s=c),i.from=$(h,p),i.to=$(U(s,h),p),i.start=n?n.end:0,i.end=i.start+i.delay+i.duration+i.endDelay,i.easing=g(i.easing,i.duration),i.isPath=u.pth(a),i.isPathTargetInsideSVG=i.isPath&&u.svg(e.target),i.isColor=u.col(i.from.original),i.isColor&&(i.round=1),n=i,i}))}var ot={css:function(t,e,n){return t.style[e]=n},attribute:function(t,e,n){return t.setAttribute(e,n)},object:function(t,e,n){return t[e]=n},transform:function(t,e,n,r,i){if(r.list.set(e,n),e===r.last||i){var a="";r.list.forEach((function(t,e){a+=e+"("+t+") "})),t.style.transform=a}}};function lt(t,e){var n=et(t);n.forEach((function(t){for(var n in e){var r=P(e[n],t),i=t.target,a=L(r),s=F(i,n,a,t),o=a||L(s),l=U(H(r,o),s),c=N(i,n);ot[c](i,n,l,t.transforms,!0)}}))}function ct(t,e){var n=N(t.target,e.name);if(n){var r=st(e,t),i=r[r.length-1];return{type:n,property:e.name,animatable:t,tweens:r,duration:i.end,delay:r[0].delay,endDelay:i.endDelay}}}function ut(t,e){return y(x(t.map((function(t){return e.map((function(e){return ct(t,e)}))}))),(function(t){return!u.und(t)}))}function ht(t,e){var n=t.length,r=function(t){return t.timelineOffset?t.timelineOffset:0},i={};return i.duration=n?Math.max.apply(Math,t.map((function(t){return r(t)+t.duration}))):e.duration,i.delay=n?Math.min.apply(Math,t.map((function(t){return r(t)+t.delay}))):e.delay,i.endDelay=n?i.duration-Math.max.apply(Math,t.map((function(t){return r(t)+t.duration-t.endDelay}))):e.endDelay,i}var dt=0;function pt(t){var e=M(r,t),n=M(i,t),a=it(n,t),s=et(t.targets),o=ut(s,a),l=ht(o,n),c=dt;return dt++,S(e,{id:c,children:[],animatables:s,animations:o,duration:l.duration,delay:l.delay,endDelay:l.endDelay})}var ft=[],mt=function(){var t;function e(){t||gt()&&vt.suspendWhenDocumentHidden||!(ft.length>0)||(t=requestAnimationFrame(n))}function n(e){var r=ft.length,i=0;while(i<r){var a=ft[i];a.paused?(ft.splice(i,1),r--):(a.tick(e),i++)}t=i>0?requestAnimationFrame(n):void 0}function r(){vt.suspendWhenDocumentHidden&&(gt()?t=cancelAnimationFrame(t):(ft.forEach((function(t){return t._onDocumentVisibility()})),mt()))}return"undefined"!==typeof document&&document.addEventListener("visibilitychange",r),e}();function gt(){return!!document&&document.hidden}function vt(t){void 0===t&&(t={});var e,n=0,r=0,i=0,a=0,s=null;function l(t){var e=window.Promise&&new Promise((function(t){return s=t}));return t.finished=e,e}var c=pt(t);l(c);function u(){var t=c.direction;"alternate"!==t&&(c.direction="normal"!==t?"normal":"reverse"),c.reversed=!c.reversed,e.forEach((function(t){return t.reversed=c.reversed}))}function h(t){return c.reversed?c.duration-t:t}function d(){n=0,r=h(c.currentTime)*(1/vt.speed)}function p(t,e){e&&e.seek(t-e.timelineOffset)}function f(t){if(c.reversePlayback)for(var n=a;n--;)p(t,e[n]);else for(var r=0;r<a;r++)p(t,e[r])}function m(t){var e=0,n=c.animations,r=n.length;while(e<r){var i=n[e],a=i.animatable,s=i.tweens,l=s.length-1,u=s[l];l&&(u=y(s,(function(e){return t<e.end}))[0]||u);for(var h=o(t-u.start-u.delay,0,u.duration)/u.duration,d=isNaN(h)?1:u.easing(h),p=u.to.strings,f=u.round,m=[],g=u.to.numbers.length,v=void 0,x=0;x<g;x++){var b=void 0,_=u.to.numbers[x],w=u.from.numbers[x]||0;b=u.isPath?Q(u.value,d*_,u.isPathTargetInsideSVG):w+d*(_-w),f&&(u.isColor&&x>2||(b=Math.round(b*f)/f)),m.push(b)}var M=p.length;if(M){v=p[0];for(var S=0;S<M;S++){p[S];var T=p[S+1],E=m[S];isNaN(E)||(v+=T?E+T:E+" ")}}else v=m[0];ot[i.type](a.target,i.property,v,a.transforms),i.currentValue=v,e++}}function g(t){c[t]&&!c.passThrough&&c[t](c)}function v(){c.remaining&&!0!==c.remaining&&c.remaining--}function x(t){var a=c.duration,d=c.delay,p=a-c.endDelay,y=h(t);c.progress=o(y/a*100,0,100),c.reversePlayback=y<c.currentTime,e&&f(y),!c.began&&c.currentTime>0&&(c.began=!0,g("begin")),!c.loopBegan&&c.currentTime>0&&(c.loopBegan=!0,g("loopBegin")),y<=d&&0!==c.currentTime&&m(0),(y>=p&&c.currentTime!==a||!a)&&m(a),y>d&&y<p?(c.changeBegan||(c.changeBegan=!0,c.changeCompleted=!1,g("changeBegin")),g("change"),m(y)):c.changeBegan&&(c.changeCompleted=!0,c.changeBegan=!1,g("changeComplete")),c.currentTime=o(y,0,a),c.began&&g("update"),t>=a&&(r=0,v(),c.remaining?(n=i,g("loopComplete"),c.loopBegan=!1,"alternate"===c.direction&&u()):(c.paused=!0,c.completed||(c.completed=!0,g("loopComplete"),g("complete"),!c.passThrough&&"Promise"in window&&(s(),l(c)))))}return c.reset=function(){var t=c.direction;c.passThrough=!1,c.currentTime=0,c.progress=0,c.paused=!0,c.began=!1,c.loopBegan=!1,c.changeBegan=!1,c.completed=!1,c.changeCompleted=!1,c.reversePlayback=!1,c.reversed="reverse"===t,c.remaining=c.loop,e=c.children,a=e.length;for(var n=a;n--;)c.children[n].reset();(c.reversed&&!0!==c.loop||"alternate"===t&&1===c.loop)&&c.remaining++,m(c.reversed?c.duration:0)},c._onDocumentVisibility=d,c.set=function(t,e){return lt(t,e),c},c.tick=function(t){i=t,n||(n=i),x((i+(r-n))*vt.speed)},c.seek=function(t){x(h(t))},c.pause=function(){c.paused=!0,d()},c.play=function(){c.paused&&(c.completed&&c.reset(),c.paused=!1,ft.push(c),d(),mt())},c.reverse=function(){u(),c.completed=!c.reversed,d()},c.restart=function(){c.reset(),c.play()},c.remove=function(t){var e=tt(t);xt(e,c)},c.reset(),c.autoplay&&c.play(),c}function yt(t,e){for(var n=e.length;n--;)_(t,e[n].animatable.target)&&e.splice(n,1)}function xt(t,e){var n=e.animations,r=e.children;yt(t,n);for(var i=r.length;i--;){var a=r[i],s=a.animations;yt(t,s),s.length||a.children.length||r.splice(i,1)}n.length||r.length||e.pause()}function bt(t){for(var e=tt(t),n=ft.length;n--;){var r=ft[n];xt(e,r)}}function _t(t,e){void 0===e&&(e={});var n=e.direction||"normal",r=e.easing?g(e.easing):null,i=e.grid,a=e.axis,s=e.from||0,o="first"===s,l="center"===s,c="last"===s,h=u.arr(t),d=h?parseFloat(t[0]):parseFloat(t),p=h?parseFloat(t[1]):0,f=L(h?t[1]:t)||0,m=e.start||0+(h?d:0),v=[],y=0;return function(t,e,u){if(o&&(s=0),l&&(s=(u-1)/2),c&&(s=u-1),!v.length){for(var g=0;g<u;g++){if(i){var x=l?(i[0]-1)/2:s%i[0],b=l?(i[1]-1)/2:Math.floor(s/i[0]),_=g%i[0],w=Math.floor(g/i[0]),M=x-_,S=b-w,T=Math.sqrt(M*M+S*S);"x"===a&&(T=-M),"y"===a&&(T=-S),v.push(T)}else v.push(Math.abs(s-g));y=Math.max.apply(Math,v)}r&&(v=v.map((function(t){return r(t/y)*y}))),"reverse"===n&&(v=v.map((function(t){return a?t<0?-1*t:-t:Math.abs(y-t)})))}var E=h?(p-d)/y:d;return m+E*(Math.round(100*v[e])/100)+f}}function wt(t){void 0===t&&(t={});var e=vt(t);return e.duration=0,e.add=function(n,r){var a=ft.indexOf(e),s=e.children;function o(t){t.passThrough=!0}a>-1&&ft.splice(a,1);for(var l=0;l<s.length;l++)o(s[l]);var c=S(n,M(i,t));c.targets=c.targets||t.targets;var h=e.duration;c.autoplay=!1,c.direction=e.direction,c.timelineOffset=u.und(r)?h:U(r,h),o(e),e.seek(c.timelineOffset);var d=vt(c);o(d),s.push(d);var p=ht(s,t);return e.delay=p.delay,e.endDelay=p.endDelay,e.duration=p.duration,e.seek(0),e.reset(),e.autoplay&&e.play(),e},e}vt.version="3.2.1",vt.speed=1,vt.suspendWhenDocumentHidden=!0,vt.running=ft,vt.remove=bt,vt.get=F,vt.set=lt,vt.convertPx=I,vt.path=K,vt.setDashoffset=Y,vt.stagger=_t,vt.timeline=wt,vt.easing=g,vt.penner=m,vt.random=function(t,e){return Math.floor(Math.random()*(e-t+1))+t},e["a"]=vt},KCY9:function(t,e,n){},NEHW:function(t,e,n){"use strict";var r=n("q1tI"),i=function(t){return function(e,n){var i=Object(r["useRef"])(!1);t((function(){return function(){i.current=!1}}),[]),t((function(){if(i.current)return e();i.current=!0}),n)}};e["a"]=i(r["useEffect"])},P5Jw:function(t,e,n){"use strict";var r=n("rHrb"),i=r.CopyToClipboard;i.CopyToClipboard=i,t.exports=i},Q9mQ:function(t,e,n){"use strict";n("EFp3"),n("UADf")},SDlg:function(t,e,n){"use strict";var r=n("q1tI");function i(t){var e=Object(r["useRef"])(t);return e.current=t,e}e["a"]=i},UADf:function(t,e,n){},VmGg:function(t,e,n){"use strict";var r=n("q1tI"),i=n("NEHW"),a=function(t,e){var n="function"===typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),s=[];try{while((void 0===e||e-- >0)&&!(r=a.next()).done)s.push(r.value)}catch(o){i={error:o}}finally{try{r&&!r.done&&(n=a["return"])&&n.call(a)}finally{if(i)throw i.error}}return s},s=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(a(arguments[e]));return t},o=function(t,e){var n=e.manual,a=e.ready,o=void 0===a||a,l=e.defaultParams,c=void 0===l?[]:l,u=e.refreshDeps,h=void 0===u?[]:u,d=e.refreshDepsAction,p=Object(r["useRef"])(!1);return p.current=!1,Object(i["a"])((function(){!n&&o&&(p.current=!0,t.run.apply(t,s(c)))}),[o]),Object(i["a"])((function(){p.current||n||(p.current=!0,d?d():t.refresh())}),s(h)),{onBefore:function(){if(!o)return{stopNow:!0}}}};o.onInit=function(t){var e=t.ready,n=void 0===e||e,r=t.manual;return{loading:!r&&n}};var l=o;function c(t,e){if(t===e)return!0;for(var n=0;n<t.length;n++)if(!Object.is(t[n],e[n]))return!1;return!0}function u(t,e){var n=Object(r["useRef"])({deps:e,obj:void 0,initialized:!1}).current;return!1!==n.initialized&&c(n.deps,e)||(n.deps=e,n.obj=t(),n.initialized=!0),n.obj}var h=n("kMsK"),d=function(){return d=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n],e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},d.apply(this,arguments)},p=new Map,f=function(t,e,n){var r=p.get(t);(null===r||void 0===r?void 0:r.timer)&&clearTimeout(r.timer);var i=void 0;e>-1&&(i=setTimeout((function(){p["delete"](t)}),e)),p.set(t,d(d({},n),{timer:i}))},m=function(t){return p.get(t)},g=new Map,v=function(t){return g.get(t)},y=function(t,e){g.set(t,e),e.then((function(e){return g["delete"](t),e}))["catch"]((function(e){throw g["delete"](t),e}))},x={},b=function(t,e){x[t]&&x[t].forEach((function(t){return t(e)}))},_=function(t,e){return x[t]||(x[t]=[]),x[t].push(e),function(){var n=x[t].indexOf(e);x[t].splice(n,1)}},w=function(t,e){var n="function"===typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),s=[];try{while((void 0===e||e-- >0)&&!(r=a.next()).done)s.push(r.value)}catch(o){i={error:o}}finally{try{r&&!r.done&&(n=a["return"])&&n.call(a)}finally{if(i)throw i.error}}return s},M=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(w(arguments[e]));return t},S=function(t,e){var n=e.cacheKey,i=e.cacheTime,a=void 0===i?3e5:i,s=e.staleTime,o=void 0===s?0:s,l=e.setCache,c=e.getCache,d=Object(r["useRef"])(),p=Object(r["useRef"])(),g=function(t,e){l?l(e):f(t,a,e),b(t,e.data)},x=function(t,e){return void 0===e&&(e=[]),c?c(e):m(t)};return u((function(){if(n){var e=x(n);e&&Object.hasOwnProperty.call(e,"data")&&(t.state.data=e.data,t.state.params=e.params,(-1===o||(new Date).getTime()-e.time<=o)&&(t.state.loading=!1)),d.current=_(n,(function(e){t.setState({data:e})}))}}),[]),Object(h["a"])((function(){var t;null===(t=d.current)||void 0===t||t.call(d)})),n?{onBefore:function(t){var e=x(n,t);return e&&Object.hasOwnProperty.call(e,"data")?-1===o||(new Date).getTime()-e.time<=o?{loading:!1,data:null===e||void 0===e?void 0:e.data,returnNow:!0}:{data:null===e||void 0===e?void 0:e.data}:{}},onRequest:function(t,e){var r=v(n);return r&&r!==p.current||(r=t.apply(void 0,M(e)),p.current=r,y(n,r)),{servicePromise:r}},onSuccess:function(e,r){var i;n&&(null===(i=d.current)||void 0===i||i.call(d),g(n,{data:e,params:r,time:(new Date).getTime()}),d.current=_(n,(function(e){t.setState({data:e})})))},onMutate:function(e){var r;n&&(null===(r=d.current)||void 0===r||r.call(d),g(n,{data:e,params:t.state.params,time:(new Date).getTime()}),d.current=_(n,(function(e){t.setState({data:e})})))}}:{}},T=S,E=n("sEfC"),A=n.n(E),C=function(t,e){var n="function"===typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),s=[];try{while((void 0===e||e-- >0)&&!(r=a.next()).done)s.push(r.value)}catch(o){i={error:o}}finally{try{r&&!r.done&&(n=a["return"])&&n.call(a)}finally{if(i)throw i.error}}return s},L=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(C(arguments[e]));return t},R=function(t,e){var n=e.debounceWait,i=e.debounceLeading,a=e.debounceTrailing,s=e.debounceMaxWait,o=Object(r["useRef"])(),l=Object(r["useMemo"])((function(){var t={};return void 0!==i&&(t.leading=i),void 0!==a&&(t.trailing=a),void 0!==s&&(t.maxWait=s),t}),[i,a,s]);return Object(r["useEffect"])((function(){if(n){var e=t.runAsync.bind(t);return o.current=A()((function(t){t()}),n,l),t.runAsync=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new Promise((function(n,r){var i;null===(i=o.current)||void 0===i||i.call(o,(function(){e.apply(void 0,L(t)).then(n)["catch"](r)}))}))},function(){var n;null===(n=o.current)||void 0===n||n.cancel(),t.runAsync=e}}}),[n,l]),n?{onCancel:function(){var t;null===(t=o.current)||void 0===t||t.cancel()}}:{}},P=R,D=function(t,e){var n=e.loadingDelay,i=Object(r["useRef"])();if(!n)return{};var a=function(){i.current&&clearTimeout(i.current)};return{onBefore:function(){return a(),i.current=setTimeout((function(){t.setState({loading:!0})}),n),{loading:!1}},onFinally:function(){a()},onCancel:function(){a()}}},I=D;function O(){return!("undefined"===typeof window||!window.document||!window.document.createElement)}function N(){return!O()||"hidden"!==document.visibilityState}var z=[];function B(t){return z.push(t),function(){var e=z.indexOf(t);z.splice(e,1)}}if(O()){var F=function(){if(N())for(var t=0;t<z.length;t++){var e=z[t];e()}};window.addEventListener("visibilitychange",F,!1)}var U=B,H=function(t,e){var n=e.pollingInterval,a=e.pollingWhenHidden,s=void 0===a||a,o=Object(r["useRef"])(),l=Object(r["useRef"])(),c=function(){var t;o.current&&clearTimeout(o.current),null===(t=l.current)||void 0===t||t.call(l)};return Object(i["a"])((function(){n||c()}),[n]),n?{onBefore:function(){c()},onFinally:function(){s||N()?o.current=setTimeout((function(){t.refresh()}),n):l.current=U((function(){t.refresh()}))},onCancel:function(){c()}}:{}},k=H,G=function(t,e){var n="function"===typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),s=[];try{while((void 0===e||e-- >0)&&!(r=a.next()).done)s.push(r.value)}catch(o){i={error:o}}finally{try{r&&!r.done&&(n=a["return"])&&n.call(a)}finally{if(i)throw i.error}}return s},V=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(G(arguments[e]));return t};function W(t,e){var n=!1;return function(){for(var r=[],i=0;i<arguments.length;i++)r[i]=arguments[i];n||(n=!0,t.apply(void 0,V(r)),setTimeout((function(){n=!1}),e))}}function j(){return!O()||"undefined"===typeof navigator.onLine||navigator.onLine}var q=[];function X(t){return q.push(t),function(){var e=q.indexOf(t);q.splice(e,1)}}if(O()){var Y=function(){if(N()&&j())for(var t=0;t<q.length;t++){var e=q[t];e()}};window.addEventListener("visibilitychange",Y,!1),window.addEventListener("focus",Y,!1)}var J=X,Z=function(t,e){var n=e.refreshOnWindowFocus,i=e.focusTimespan,a=void 0===i?5e3:i,s=Object(r["useRef"])(),o=function(){var t;null===(t=s.current)||void 0===t||t.call(s)};return Object(r["useEffect"])((function(){if(n){var e=W(t.refresh.bind(t),a);s.current=J((function(){e()}))}return function(){o()}}),[n,a]),Object(h["a"])((function(){o()})),{}},K=Z,Q=function(t,e){var n=e.retryInterval,i=e.retryCount,a=Object(r["useRef"])(),s=Object(r["useRef"])(0),o=Object(r["useRef"])(!1);return i?{onBefore:function(){o.current||(s.current=0),o.current=!1,a.current&&clearTimeout(a.current)},onSuccess:function(){s.current=0},onError:function(){if(s.current+=1,-1===i||s.current<=i){var e=null!==n&&void 0!==n?n:Math.min(1e3*Math.pow(2,s.current),3e4);a.current=setTimeout((function(){o.current=!0,t.refresh()}),e)}else s.current=0},onCancel:function(){s.current=0,a.current&&clearTimeout(a.current)}}:{}},$=Q,tt=n("DzJC"),et=n.n(tt),nt=function(t,e){var n="function"===typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),s=[];try{while((void 0===e||e-- >0)&&!(r=a.next()).done)s.push(r.value)}catch(o){i={error:o}}finally{try{r&&!r.done&&(n=a["return"])&&n.call(a)}finally{if(i)throw i.error}}return s},rt=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(nt(arguments[e]));return t},it=function(t,e){var n=e.throttleWait,i=e.throttleLeading,a=e.throttleTrailing,s=Object(r["useRef"])(),o={};return void 0!==i&&(o.leading=i),void 0!==a&&(o.trailing=a),Object(r["useEffect"])((function(){if(n){var e=t.runAsync.bind(t);return s.current=et()((function(t){t()}),n,o),t.runAsync=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new Promise((function(n,r){var i;null===(i=s.current)||void 0===i||i.call(s,(function(){e.apply(void 0,rt(t)).then(n)["catch"](r)}))}))},function(){var n;t.runAsync=e,null===(n=s.current)||void 0===n||n.cancel()}}}),[n,i,a]),n?{onCancel:function(){var t;null===(t=s.current)||void 0===t||t.cancel()}}:{}},at=it,st=n("SDlg"),ot=function(t,e){var n="function"===typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),s=[];try{while((void 0===e||e-- >0)&&!(r=a.next()).done)s.push(r.value)}catch(o){i={error:o}}finally{try{r&&!r.done&&(n=a["return"])&&n.call(a)}finally{if(i)throw i.error}}return s},lt=function(){var t=ot(Object(r["useState"])({}),2),e=t[1];return Object(r["useCallback"])((function(){return e({})}),[])},ct=lt,ut=function(t){Object(r["useEffect"])((function(){null===t||void 0===t||t()}),[])},ht=ut;function dt(t){var e=Object(r["useRef"])(t);e.current=Object(r["useMemo"])((function(){return t}),[t]);var n=Object(r["useRef"])();return n.current||(n.current=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return e.current.apply(this,t)}),n.current}var pt=dt,ft=function(){return ft=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n],e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},ft.apply(this,arguments)},mt=function(t,e,n,r){function i(t){return t instanceof n?t:new n((function(e){e(t)}))}return new(n||(n=Promise))((function(n,a){function s(t){try{l(r.next(t))}catch(e){a(e)}}function o(t){try{l(r["throw"](t))}catch(e){a(e)}}function l(t){t.done?n(t.value):i(t.value).then(s,o)}l((r=r.apply(t,e||[])).next())}))},gt=function(t,e){var n,r,i,a,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"===typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(t){return function(e){return l([t,e])}}function l(a){if(n)throw new TypeError("Generator is already executing.");while(s)try{if(n=1,r&&(i=2&a[0]?r["return"]:a[0]?r["throw"]||((i=r["return"])&&i.call(r),0):r.next)&&!(i=i.call(r,a[1])).done)return i;switch(r=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,r=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(i=s.trys,!(i=i.length>0&&i[i.length-1])&&(6===a[0]||2===a[0])){s=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){s.label=a[1];break}if(6===a[0]&&s.label<i[1]){s.label=i[1],i=a;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(a);break}i[2]&&s.ops.pop(),s.trys.pop();continue}a=e.call(t,s)}catch(o){a=[6,o],r=0}finally{n=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}},vt=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(t);i<r.length;i++)e.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(t,r[i])&&(n[r[i]]=t[r[i]])}return n},yt=function(t,e){var n="function"===typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),s=[];try{while((void 0===e||e-- >0)&&!(r=a.next()).done)s.push(r.value)}catch(o){i={error:o}}finally{try{r&&!r.done&&(n=a["return"])&&n.call(a)}finally{if(i)throw i.error}}return s},xt=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(yt(arguments[e]));return t},bt=function(){function t(t,e,n,r){void 0===r&&(r={}),this.serviceRef=t,this.options=e,this.subscribe=n,this.initState=r,this.count=0,this.state={loading:!1,params:void 0,data:void 0,error:void 0},this.state=ft(ft(ft({},this.state),{loading:!e.manual}),r)}return t.prototype.setState=function(t){void 0===t&&(t={}),this.state=ft(ft({},this.state),t),this.subscribe()},t.prototype.runPluginHandler=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];var r=this.pluginImpls.map((function(n){var r;return null===(r=n[t])||void 0===r?void 0:r.call.apply(r,xt([n],e))})).filter(Boolean);return Object.assign.apply(Object,xt([{}],r))},t.prototype.runAsync=function(){for(var t,e,n,r,i,a,s,o,l,c,u=[],h=0;h<arguments.length;h++)u[h]=arguments[h];return mt(this,void 0,void 0,(function(){var h,d,p,f,m,g,v,y,x,b,_;return gt(this,(function(w){switch(w.label){case 0:if(this.count+=1,h=this.count,d=this.runPluginHandler("onBefore",u),p=d.stopNow,f=void 0!==p&&p,m=d.returnNow,g=void 0!==m&&m,v=vt(d,["stopNow","returnNow"]),f)return[2,new Promise((function(){}))];if(this.setState(ft({loading:!0,params:u},v)),g)return[2,Promise.resolve(v.data)];null===(e=(t=this.options).onBefore)||void 0===e||e.call(t,u),w.label=1;case 1:return w.trys.push([1,3,,4]),y=this.runPluginHandler("onRequest",this.serviceRef.current,u).servicePromise,y||(y=(_=this.serviceRef).current.apply(_,xt(u))),[4,y];case 2:return x=w.sent(),h!==this.count?[2,new Promise((function(){}))]:(this.setState({data:x,error:void 0,loading:!1}),null===(r=(n=this.options).onSuccess)||void 0===r||r.call(n,x,u),this.runPluginHandler("onSuccess",x,u),null===(a=(i=this.options).onFinally)||void 0===a||a.call(i,u,x,void 0),h===this.count&&this.runPluginHandler("onFinally",u,x,void 0),[2,x]);case 3:if(b=w.sent(),h!==this.count)return[2,new Promise((function(){}))];throw this.setState({error:b,loading:!1}),null===(o=(s=this.options).onError)||void 0===o||o.call(s,b,u),this.runPluginHandler("onError",b,u),null===(c=(l=this.options).onFinally)||void 0===c||c.call(l,u,void 0,b),h===this.count&&this.runPluginHandler("onFinally",u,void 0,b),b;case 4:return[2]}}))}))},t.prototype.run=function(){for(var t=this,e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];this.runAsync.apply(this,xt(e))["catch"]((function(e){t.options.onError||console.error(e)}))},t.prototype.cancel=function(){this.count+=1,this.setState({loading:!1}),this.runPluginHandler("onCancel")},t.prototype.refresh=function(){this.run.apply(this,xt(this.state.params||[]))},t.prototype.refreshAsync=function(){return this.runAsync.apply(this,xt(this.state.params||[]))},t.prototype.mutate=function(t){var e;e="function"===typeof t?t(this.state.data):t,this.runPluginHandler("onMutate",e),this.setState({data:e})},t}(),_t=bt,wt=function(){return wt=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n],e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},wt.apply(this,arguments)},Mt=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(t);i<r.length;i++)e.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(t,r[i])&&(n[r[i]]=t[r[i]])}return n},St=function(t,e){var n="function"===typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),s=[];try{while((void 0===e||e-- >0)&&!(r=a.next()).done)s.push(r.value)}catch(o){i={error:o}}finally{try{r&&!r.done&&(n=a["return"])&&n.call(a)}finally{if(i)throw i.error}}return s},Tt=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(St(arguments[e]));return t};function Et(t,e,n){void 0===e&&(e={}),void 0===n&&(n=[]);var r=e.manual,i=void 0!==r&&r,a=Mt(e,["manual"]),s=wt({manual:i},a),o=Object(st["a"])(t),l=ct(),c=u((function(){var t=n.map((function(t){var e;return null===(e=null===t||void 0===t?void 0:t.onInit)||void 0===e?void 0:e.call(t,s)})).filter(Boolean);return new _t(o,s,l,Object.assign.apply(Object,Tt([{}],t)))}),[]);return c.options=s,c.pluginImpls=n.map((function(t){return t(c,s)})),ht((function(){if(!i){var t=c.state.params||e.defaultParams||[];c.run.apply(c,Tt(t))}})),Object(h["a"])((function(){c.cancel()})),{loading:c.state.loading,data:c.state.data,error:c.state.error,params:c.state.params||[],cancel:pt(c.cancel.bind(c)),refresh:pt(c.refresh.bind(c)),refreshAsync:pt(c.refreshAsync.bind(c)),run:pt(c.run.bind(c)),runAsync:pt(c.runAsync.bind(c)),mutate:pt(c.mutate.bind(c))}}var At=Et,Ct=function(t,e){var n="function"===typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),s=[];try{while((void 0===e||e-- >0)&&!(r=a.next()).done)s.push(r.value)}catch(o){i={error:o}}finally{try{r&&!r.done&&(n=a["return"])&&n.call(a)}finally{if(i)throw i.error}}return s},Lt=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(Ct(arguments[e]));return t};function Rt(t,e,n){return At(t,e,Lt(n||[],[P,I,k,K,at,l,T,$]))}var Pt=Rt,Dt=Pt,It=!("undefined"===typeof window||!window.document||!window.document.createElement),Ot=It;function Nt(t,e){var n;if(Ot)return t?(n="function"===typeof t?t():"current"in t?t.current:t,n):e}var zt=function(t){var e=function(e,n,i){var a=Object(r["useRef"])(!1),s=Object(r["useRef"])([]),o=Object(r["useRef"])([]),l=Object(r["useRef"])();t((function(){var t,r=Array.isArray(i)?i:[i],u=r.map((function(t){return Nt(t)}));a.current||(a.current=!0,s.current=u,o.current=n,l.current=e()),u.length===s.current.length&&c(u,s.current)&&c(n,o.current)||(null===(t=l.current)||void 0===t||t.call(l),s.current=u,o.current=n,l.current=e())})),Object(h["a"])((function(){var t;null===(t=l.current)||void 0===t||t.call(l),a.current=!1}))};return e},Bt=zt,Ft=Bt(r["useEffect"]),Ut=Ft;function Ht(t,e,n){void 0===n&&(n={});var r=Object(st["a"])(e);Ut((function(){var e=Nt(n.target,window);if(null===e||void 0===e?void 0:e.addEventListener){var i=function(t){return r.current(t)};return e.addEventListener(t,i,{capture:n.capture,once:n.once,passive:n.passive}),function(){e.removeEventListener(t,i,{capture:n.capture})}}}),[t,n.capture,n.once,n.passive],n.target)}var kt=Ht,Gt=function(t){return t===document||t===document.body?Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop):t.scrollTop},Vt=function(t){return t.scrollHeight||Math.max(document.documentElement.scrollHeight,document.body.scrollHeight)},Wt=function(t){return t.clientHeight||Math.max(document.documentElement.clientHeight,document.body.clientHeight)},jt=function(){return jt=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n],e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},jt.apply(this,arguments)},qt=function(t,e,n,r){function i(t){return t instanceof n?t:new n((function(e){e(t)}))}return new(n||(n=Promise))((function(n,a){function s(t){try{l(r.next(t))}catch(e){a(e)}}function o(t){try{l(r["throw"](t))}catch(e){a(e)}}function l(t){t.done?n(t.value):i(t.value).then(s,o)}l((r=r.apply(t,e||[])).next())}))},Xt=function(t,e){var n,r,i,a,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"===typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(t){return function(e){return l([t,e])}}function l(a){if(n)throw new TypeError("Generator is already executing.");while(s)try{if(n=1,r&&(i=2&a[0]?r["return"]:a[0]?r["throw"]||((i=r["return"])&&i.call(r),0):r.next)&&!(i=i.call(r,a[1])).done)return i;switch(r=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return s.label++,{value:a[1],done:!1};case 5:s.label++,r=a[1],a=[0];continue;case 7:a=s.ops.pop(),s.trys.pop();continue;default:if(i=s.trys,!(i=i.length>0&&i[i.length-1])&&(6===a[0]||2===a[0])){s=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){s.label=a[1];break}if(6===a[0]&&s.label<i[1]){s.label=i[1],i=a;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(a);break}i[2]&&s.ops.pop(),s.trys.pop();continue}a=e.call(t,s)}catch(o){a=[6,o],r=0}finally{n=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}},Yt=function(t,e){var n="function"===typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),s=[];try{while((void 0===e||e-- >0)&&!(r=a.next()).done)s.push(r.value)}catch(o){i={error:o}}finally{try{r&&!r.done&&(n=a["return"])&&n.call(a)}finally{if(i)throw i.error}}return s},Jt=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(Yt(arguments[e]));return t},Zt=function(t,e){void 0===e&&(e={});var n=e.target,a=e.isNoMore,s=e.threshold,o=void 0===s?100:s,l=e.reloadDeps,c=void 0===l?[]:l,u=e.manual,h=e.onBefore,d=e.onSuccess,p=e.onError,f=e.onFinally,m=Yt(Object(r["useState"])(),2),g=m[0],v=m[1],y=Yt(Object(r["useState"])(!1),2),x=y[0],b=y[1],_=Object(r["useMemo"])((function(){return!!a&&a(g)}),[g]),w=Dt((function(e){return qt(void 0,void 0,void 0,(function(){var n;return Xt(this,(function(r){switch(r.label){case 0:return[4,t(e)];case 1:return n=r.sent(),v(e?jt(jt({},n),{list:Jt(e.list,n.list)}):n),[2,n]}}))}))}),{manual:u,onFinally:function(t,e,n){b(!1),null===f||void 0===f||f(e,n)},onBefore:function(){return null===h||void 0===h?void 0:h()},onSuccess:function(t){setTimeout((function(){P()})),null===d||void 0===d||d(t)},onError:function(t){return null===p||void 0===p?void 0:p(t)}}),M=w.loading,S=w.run,T=w.runAsync,E=w.cancel,A=function(){_||(b(!0),S(g))},C=function(){if(!_)return b(!0),T(g)},L=function(){return S()},R=function(){return T()},P=function(){var t=Nt(n);if(t){var e=Gt(t),r=Vt(t),i=Wt(t);r-e<=i+o&&A()}};return kt("scroll",(function(){M||x||P()}),{target:n}),Object(i["a"])((function(){S()}),Jt(c)),{data:g,loading:!x&&M,loadingMore:x,noMore:_,loadMore:pt(A),loadMoreAsync:pt(C),reload:pt(L),reloadAsync:pt(R),mutate:v,cancel:E}};e["a"]=Zt},Womt:function(t,e,n){"use strict";n.r(e),n.d(e,"ACESFilmicToneMapping",(function(){return nt})),n.d(e,"AddEquation",(function(){return T})),n.d(e,"AddOperation",(function(){return K})),n.d(e,"AdditiveAnimationBlendMode",(function(){return je})),n.d(e,"AdditiveBlending",(function(){return _})),n.d(e,"AlphaFormat",(function(){return zt})),n.d(e,"AlwaysDepth",(function(){return G})),n.d(e,"AlwaysStencilFunc",(function(){return vn})),n.d(e,"AmbientLight",(function(){return Am})),n.d(e,"AmbientLightProbe",(function(){return Wm})),n.d(e,"AnimationClip",(function(){return Kf})),n.d(e,"AnimationLoader",(function(){return sm})),n.d(e,"AnimationMixer",(function(){return Sg})),n.d(e,"AnimationObjectGroup",(function(){return wg})),n.d(e,"AnimationUtils",(function(){return Ff})),n.d(e,"ArcCurve",(function(){return ep})),n.d(e,"ArrayCamera",(function(){return Mh})),n.d(e,"ArrowHelper",(function(){return pv})),n.d(e,"Audio",(function(){return ng})),n.d(e,"AudioAnalyser",(function(){return lg})),n.d(e,"AudioContext",(function(){return km})),n.d(e,"AudioListener",(function(){return eg})),n.d(e,"AudioLoader",(function(){return Gm})),n.d(e,"AxesHelper",(function(){return fv})),n.d(e,"AxisHelper",(function(){return Vv})),n.d(e,"BackSide",(function(){return m})),n.d(e,"BasicDepthPacking",(function(){return Ke})),n.d(e,"BasicShadowMap",(function(){return u})),n.d(e,"BinaryTextureLoader",(function(){return Yv})),n.d(e,"Bone",(function(){return ud})),n.d(e,"BooleanKeyframeTrack",(function(){return Wf})),n.d(e,"BoundingBoxHelper",(function(){return Wv})),n.d(e,"Box2",(function(){return Og})),n.d(e,"Box3",(function(){return br})),n.d(e,"Box3Helper",(function(){return lv})),n.d(e,"BoxBufferGeometry",(function(){return Ca})),n.d(e,"BoxGeometry",(function(){return Ca})),n.d(e,"BoxHelper",(function(){return ov})),n.d(e,"BufferAttribute",(function(){return Vi})),n.d(e,"BufferGeometry",(function(){return oa})),n.d(e,"BufferGeometryLoader",(function(){return Om})),n.d(e,"ByteType",(function(){return Tt})),n.d(e,"Cache",(function(){return tm})),n.d(e,"Camera",(function(){return Na})),n.d(e,"CameraHelper",(function(){return iv})),n.d(e,"CanvasRenderer",(function(){return Zv})),n.d(e,"CanvasTexture",(function(){return Gd})),n.d(e,"CatmullRomCurve3",(function(){return op})),n.d(e,"CineonToneMapping",(function(){return et})),n.d(e,"CircleBufferGeometry",(function(){return Vd})),n.d(e,"CircleGeometry",(function(){return Vd})),n.d(e,"ClampToEdgeWrapping",(function(){return dt})),n.d(e,"Clock",(function(){return Jm})),n.d(e,"Color",(function(){return Ui})),n.d(e,"ColorKeyframeTrack",(function(){return jf})),n.d(e,"CompressedTexture",(function(){return kd})),n.d(e,"CompressedTextureLoader",(function(){return om})),n.d(e,"ConeBufferGeometry",(function(){return jd})),n.d(e,"ConeGeometry",(function(){return jd})),n.d(e,"CubeCamera",(function(){return Ua})),n.d(e,"CubeReflectionMapping",(function(){return at})),n.d(e,"CubeRefractionMapping",(function(){return st})),n.d(e,"CubeTexture",(function(){return Ha})),n.d(e,"CubeTextureLoader",(function(){return cm})),n.d(e,"CubeUVReflectionMapping",(function(){return ct})),n.d(e,"CubeUVRefractionMapping",(function(){return ut})),n.d(e,"CubicBezierCurve",(function(){return yp})),n.d(e,"CubicBezierCurve3",(function(){return xp})),n.d(e,"CubicInterpolant",(function(){return Hf})),n.d(e,"CullFaceBack",(function(){return o})),n.d(e,"CullFaceFront",(function(){return l})),n.d(e,"CullFaceFrontBack",(function(){return c})),n.d(e,"CullFaceNone",(function(){return s})),n.d(e,"Curve",(function(){return $d})),n.d(e,"CurvePath",(function(){return Ep})),n.d(e,"CustomBlending",(function(){return S})),n.d(e,"CustomToneMapping",(function(){return rt})),n.d(e,"CylinderBufferGeometry",(function(){return Wd})),n.d(e,"CylinderGeometry",(function(){return Wd})),n.d(e,"Cylindrical",(function(){return Dg})),n.d(e,"DataTexture",(function(){return hd})),n.d(e,"DataTexture2DArray",(function(){return dc})),n.d(e,"DataTexture3D",(function(){return yc})),n.d(e,"DataTextureLoader",(function(){return um})),n.d(e,"DataUtils",(function(){return yv})),n.d(e,"DecrementStencilOp",(function(){return sn})),n.d(e,"DecrementWrapStencilOp",(function(){return ln})),n.d(e,"DefaultLoadingManager",(function(){return nm})),n.d(e,"DepthFormat",(function(){return kt})),n.d(e,"DepthStencilFormat",(function(){return Gt})),n.d(e,"DepthTexture",(function(){return Ah})),n.d(e,"DirectionalLight",(function(){return Em})),n.d(e,"DirectionalLightHelper",(function(){return ev})),n.d(e,"DiscreteInterpolant",(function(){return Gf})),n.d(e,"DodecahedronBufferGeometry",(function(){return Xd})),n.d(e,"DodecahedronGeometry",(function(){return Xd})),n.d(e,"DoubleSide",(function(){return g})),n.d(e,"DstAlphaFactor",(function(){return z})),n.d(e,"DstColorFactor",(function(){return F})),n.d(e,"DynamicBufferAttribute",(function(){return Iv})),n.d(e,"DynamicCopyUsage",(function(){return Tn})),n.d(e,"DynamicDrawUsage",(function(){return xn})),n.d(e,"DynamicReadUsage",(function(){return wn})),n.d(e,"EdgesGeometry",(function(){return Qd})),n.d(e,"EdgesHelper",(function(){return jv})),n.d(e,"EllipseCurve",(function(){return tp})),n.d(e,"EqualDepth",(function(){return j})),n.d(e,"EqualStencilFunc",(function(){return dn})),n.d(e,"EquirectangularReflectionMapping",(function(){return ot})),n.d(e,"EquirectangularRefractionMapping",(function(){return lt})),n.d(e,"Euler",(function(){return ii})),n.d(e,"EventDispatcher",(function(){return Ln})),n.d(e,"ExtrudeBufferGeometry",(function(){return hf})),n.d(e,"ExtrudeGeometry",(function(){return hf})),n.d(e,"FaceColors",(function(){return wv})),n.d(e,"FileLoader",(function(){return am})),n.d(e,"FlatShading",(function(){return v})),n.d(e,"Float16BufferAttribute",(function(){return Ki})),n.d(e,"Float32Attribute",(function(){return kv})),n.d(e,"Float32BufferAttribute",(function(){return Qi})),n.d(e,"Float64Attribute",(function(){return Gv})),n.d(e,"Float64BufferAttribute",(function(){return $i})),n.d(e,"FloatType",(function(){return Rt})),n.d(e,"Fog",(function(){return Oh})),n.d(e,"FogExp2",(function(){return Ih})),n.d(e,"Font",(function(){return ry})),n.d(e,"FontLoader",(function(){return ny})),n.d(e,"FramebufferTexture",(function(){return Hd})),n.d(e,"FrontSide",(function(){return f})),n.d(e,"Frustum",(function(){return Ya})),n.d(e,"GLBufferAttribute",(function(){return Ag})),n.d(e,"GLSL1",(function(){return An})),n.d(e,"GLSL3",(function(){return Cn})),n.d(e,"GreaterDepth",(function(){return X})),n.d(e,"GreaterEqualDepth",(function(){return q})),n.d(e,"GreaterEqualStencilFunc",(function(){return gn})),n.d(e,"GreaterStencilFunc",(function(){return fn})),n.d(e,"GridHelper",(function(){return Zg})),n.d(e,"Group",(function(){return Sh})),n.d(e,"HalfFloatType",(function(){return Pt})),n.d(e,"HemisphereLight",(function(){return pm})),n.d(e,"HemisphereLightHelper",(function(){return Jg})),n.d(e,"HemisphereLightProbe",(function(){return Vm})),n.d(e,"IcosahedronBufferGeometry",(function(){return ff})),n.d(e,"IcosahedronGeometry",(function(){return ff})),n.d(e,"ImageBitmapLoader",(function(){return Um})),n.d(e,"ImageLoader",(function(){return lm})),n.d(e,"ImageUtils",(function(){return lr})),n.d(e,"ImmediateRenderObject",(function(){return iy})),n.d(e,"IncrementStencilOp",(function(){return an})),n.d(e,"IncrementWrapStencilOp",(function(){return on})),n.d(e,"InstancedBufferAttribute",(function(){return md})),n.d(e,"InstancedBufferGeometry",(function(){return Im})),n.d(e,"InstancedInterleavedBuffer",(function(){return Eg})),n.d(e,"InstancedMesh",(function(){return bd})),n.d(e,"Int16Attribute",(function(){return Bv})),n.d(e,"Int16BufferAttribute",(function(){return Xi})),n.d(e,"Int32Attribute",(function(){return Uv})),n.d(e,"Int32BufferAttribute",(function(){return Ji})),n.d(e,"Int8Attribute",(function(){return Ov})),n.d(e,"Int8BufferAttribute",(function(){return Wi})),n.d(e,"IntType",(function(){return Ct})),n.d(e,"InterleavedBuffer",(function(){return zh})),n.d(e,"InterleavedBufferAttribute",(function(){return Fh})),n.d(e,"Interpolant",(function(){return Uf})),n.d(e,"InterpolateDiscrete",(function(){return Fe})),n.d(e,"InterpolateLinear",(function(){return Ue})),n.d(e,"InterpolateSmooth",(function(){return He})),n.d(e,"InvertStencilOp",(function(){return cn})),n.d(e,"JSONLoader",(function(){return Kv})),n.d(e,"KeepStencilOp",(function(){return nn})),n.d(e,"KeyframeTrack",(function(){return Vf})),n.d(e,"LOD",(function(){return rd})),n.d(e,"LatheBufferGeometry",(function(){return mf})),n.d(e,"LatheGeometry",(function(){return mf})),n.d(e,"Layers",(function(){return ai})),n.d(e,"LensFlare",(function(){return $v})),n.d(e,"LessDepth",(function(){return V})),n.d(e,"LessEqualDepth",(function(){return W})),n.d(e,"LessEqualStencilFunc",(function(){return pn})),n.d(e,"LessStencilFunc",(function(){return hn})),n.d(e,"Light",(function(){return dm})),n.d(e,"LightProbe",(function(){return Rm})),n.d(e,"Line",(function(){return Ad})),n.d(e,"Line3",(function(){return Bg})),n.d(e,"LineBasicMaterial",(function(){return _d})),n.d(e,"LineCurve",(function(){return bp})),n.d(e,"LineCurve3",(function(){return _p})),n.d(e,"LineDashedMaterial",(function(){return zf})),n.d(e,"LineLoop",(function(){return Pd})),n.d(e,"LinePieces",(function(){return bv})),n.d(e,"LineSegments",(function(){return Rd})),n.d(e,"LineStrip",(function(){return xv})),n.d(e,"LinearEncoding",(function(){return Je})),n.d(e,"LinearFilter",(function(){return xt})),n.d(e,"LinearInterpolant",(function(){return kf})),n.d(e,"LinearMipMapLinearFilter",(function(){return Mt})),n.d(e,"LinearMipMapNearestFilter",(function(){return _t})),n.d(e,"LinearMipmapLinearFilter",(function(){return wt})),n.d(e,"LinearMipmapNearestFilter",(function(){return bt})),n.d(e,"LinearToneMapping",(function(){return $})),n.d(e,"Loader",(function(){return rm})),n.d(e,"LoaderUtils",(function(){return Dm})),n.d(e,"LoadingManager",(function(){return em})),n.d(e,"LoopOnce",(function(){return Ne})),n.d(e,"LoopPingPong",(function(){return Be})),n.d(e,"LoopRepeat",(function(){return ze})),n.d(e,"LuminanceAlphaFormat",(function(){return Ht})),n.d(e,"LuminanceFormat",(function(){return Ut})),n.d(e,"MOUSE",(function(){return i})),n.d(e,"Material",(function(){return Di})),n.d(e,"MaterialLoader",(function(){return Pm})),n.d(e,"Math",(function(){return tr})),n.d(e,"MathUtils",(function(){return tr})),n.d(e,"Matrix3",(function(){return nr})),n.d(e,"Matrix4",(function(){return Yr})),n.d(e,"MaxEquation",(function(){return L})),n.d(e,"Mesh",(function(){return Ta})),n.d(e,"MeshBasicMaterial",(function(){return Hi})),n.d(e,"MeshDepthMaterial",(function(){return mh})),n.d(e,"MeshDistanceMaterial",(function(){return gh})),n.d(e,"MeshFaceMaterial",(function(){return Sv})),n.d(e,"MeshLambertMaterial",(function(){return Of})),n.d(e,"MeshMatcapMaterial",(function(){return Nf})),n.d(e,"MeshNormalMaterial",(function(){return If})),n.d(e,"MeshPhongMaterial",(function(){return Pf})),n.d(e,"MeshPhysicalMaterial",(function(){return Rf})),n.d(e,"MeshStandardMaterial",(function(){return Lf})),n.d(e,"MeshToonMaterial",(function(){return Df})),n.d(e,"MinEquation",(function(){return C})),n.d(e,"MirroredRepeatWrapping",(function(){return pt})),n.d(e,"MixOperation",(function(){return Z})),n.d(e,"MultiMaterial",(function(){return Tv})),n.d(e,"MultiplyBlending",(function(){return M})),n.d(e,"MultiplyOperation",(function(){return J})),n.d(e,"NearestFilter",(function(){return ft})),n.d(e,"NearestMipMapLinearFilter",(function(){return yt})),n.d(e,"NearestMipMapNearestFilter",(function(){return gt})),n.d(e,"NearestMipmapLinearFilter",(function(){return vt})),n.d(e,"NearestMipmapNearestFilter",(function(){return mt})),n.d(e,"NeverDepth",(function(){return k})),n.d(e,"NeverStencilFunc",(function(){return un})),n.d(e,"NoBlending",(function(){return x})),n.d(e,"NoColors",(function(){return _v})),n.d(e,"NoToneMapping",(function(){return Q})),n.d(e,"NormalAnimationBlendMode",(function(){return We})),n.d(e,"NormalBlending",(function(){return b})),n.d(e,"NotEqualDepth",(function(){return Y})),n.d(e,"NotEqualStencilFunc",(function(){return mn})),n.d(e,"NumberKeyframeTrack",(function(){return qf})),n.d(e,"Object3D",(function(){return xi})),n.d(e,"ObjectLoader",(function(){return Nm})),n.d(e,"ObjectSpaceNormalMap",(function(){return tn})),n.d(e,"OctahedronBufferGeometry",(function(){return gf})),n.d(e,"OctahedronGeometry",(function(){return gf})),n.d(e,"OneFactor",(function(){return P})),n.d(e,"OneMinusDstAlphaFactor",(function(){return B})),n.d(e,"OneMinusDstColorFactor",(function(){return U})),n.d(e,"OneMinusSrcAlphaFactor",(function(){return N})),n.d(e,"OneMinusSrcColorFactor",(function(){return I})),n.d(e,"OrthographicCamera",(function(){return Ol})),n.d(e,"PCFShadowMap",(function(){return h})),n.d(e,"PCFSoftShadowMap",(function(){return d})),n.d(e,"PMREMGenerator",(function(){return Ql})),n.d(e,"ParametricGeometry",(function(){return ty})),n.d(e,"Particle",(function(){return Av})),n.d(e,"ParticleBasicMaterial",(function(){return Rv})),n.d(e,"ParticleSystem",(function(){return Cv})),n.d(e,"ParticleSystemMaterial",(function(){return Pv})),n.d(e,"Path",(function(){return Ap})),n.d(e,"PerspectiveCamera",(function(){return za})),n.d(e,"Plane",(function(){return ja})),n.d(e,"PlaneBufferGeometry",(function(){return Ka})),n.d(e,"PlaneGeometry",(function(){return Ka})),n.d(e,"PlaneHelper",(function(){return cv})),n.d(e,"PointCloud",(function(){return Ev})),n.d(e,"PointCloudMaterial",(function(){return Lv})),n.d(e,"PointLight",(function(){return Sm})),n.d(e,"PointLightHelper",(function(){return jg})),n.d(e,"Points",(function(){return Bd})),n.d(e,"PointsMaterial",(function(){return Dd})),n.d(e,"PolarGridHelper",(function(){return Kg})),n.d(e,"PolyhedronBufferGeometry",(function(){return qd})),n.d(e,"PolyhedronGeometry",(function(){return qd})),n.d(e,"PositionalAudio",(function(){return og})),n.d(e,"PropertyBinding",(function(){return _g})),n.d(e,"PropertyMixer",(function(){return cg})),n.d(e,"QuadraticBezierCurve",(function(){return wp})),n.d(e,"QuadraticBezierCurve3",(function(){return Mp})),n.d(e,"Quaternion",(function(){return gr})),n.d(e,"QuaternionKeyframeTrack",(function(){return Yf})),n.d(e,"QuaternionLinearInterpolant",(function(){return Xf})),n.d(e,"REVISION",(function(){return r})),n.d(e,"RGBADepthPacking",(function(){return Qe})),n.d(e,"RGBAFormat",(function(){return Ft})),n.d(e,"RGBAIntegerFormat",(function(){return Yt})),n.d(e,"RGBA_ASTC_10x10_Format",(function(){return ve})),n.d(e,"RGBA_ASTC_10x5_Format",(function(){return fe})),n.d(e,"RGBA_ASTC_10x6_Format",(function(){return me})),n.d(e,"RGBA_ASTC_10x8_Format",(function(){return ge})),n.d(e,"RGBA_ASTC_12x10_Format",(function(){return ye})),n.d(e,"RGBA_ASTC_12x12_Format",(function(){return xe})),n.d(e,"RGBA_ASTC_4x4_Format",(function(){return se})),n.d(e,"RGBA_ASTC_5x4_Format",(function(){return oe})),n.d(e,"RGBA_ASTC_5x5_Format",(function(){return le})),n.d(e,"RGBA_ASTC_6x5_Format",(function(){return ce})),n.d(e,"RGBA_ASTC_6x6_Format",(function(){return ue})),n.d(e,"RGBA_ASTC_8x5_Format",(function(){return he})),n.d(e,"RGBA_ASTC_8x6_Format",(function(){return de})),n.d(e,"RGBA_ASTC_8x8_Format",(function(){return pe})),n.d(e,"RGBA_BPTC_Format",(function(){return be})),n.d(e,"RGBA_ETC2_EAC_Format",(function(){return ae})),n.d(e,"RGBA_PVRTC_2BPPV1_Format",(function(){return ne})),n.d(e,"RGBA_PVRTC_4BPPV1_Format",(function(){return ee})),n.d(e,"RGBA_S3TC_DXT1_Format",(function(){return Zt})),n.d(e,"RGBA_S3TC_DXT3_Format",(function(){return Kt})),n.d(e,"RGBA_S3TC_DXT5_Format",(function(){return Qt})),n.d(e,"RGBFormat",(function(){return Bt})),n.d(e,"RGBIntegerFormat",(function(){return Xt})),n.d(e,"RGB_ETC1_Format",(function(){return re})),n.d(e,"RGB_ETC2_Format",(function(){return ie})),n.d(e,"RGB_PVRTC_2BPPV1_Format",(function(){return te})),n.d(e,"RGB_PVRTC_4BPPV1_Format",(function(){return $t})),n.d(e,"RGB_S3TC_DXT1_Format",(function(){return Jt})),n.d(e,"RGFormat",(function(){return jt})),n.d(e,"RGIntegerFormat",(function(){return qt})),n.d(e,"RawShaderMaterial",(function(){return Nl})),n.d(e,"Ray",(function(){return Xr})),n.d(e,"Raycaster",(function(){return Cg})),n.d(e,"RectAreaLight",(function(){return Cm})),n.d(e,"RedFormat",(function(){return Vt})),n.d(e,"RedIntegerFormat",(function(){return Wt})),n.d(e,"ReinhardToneMapping",(function(){return tt})),n.d(e,"RepeatWrapping",(function(){return ht})),n.d(e,"ReplaceStencilOp",(function(){return rn})),n.d(e,"ReverseSubtractEquation",(function(){return A})),n.d(e,"RingBufferGeometry",(function(){return vf})),n.d(e,"RingGeometry",(function(){return vf})),n.d(e,"SRGB8_ALPHA8_ASTC_10x10_Format",(function(){return De})),n.d(e,"SRGB8_ALPHA8_ASTC_10x5_Format",(function(){return Le})),n.d(e,"SRGB8_ALPHA8_ASTC_10x6_Format",(function(){return Re})),n.d(e,"SRGB8_ALPHA8_ASTC_10x8_Format",(function(){return Pe})),n.d(e,"SRGB8_ALPHA8_ASTC_12x10_Format",(function(){return Ie})),n.d(e,"SRGB8_ALPHA8_ASTC_12x12_Format",(function(){return Oe})),n.d(e,"SRGB8_ALPHA8_ASTC_4x4_Format",(function(){return _e})),n.d(e,"SRGB8_ALPHA8_ASTC_5x4_Format",(function(){return we})),n.d(e,"SRGB8_ALPHA8_ASTC_5x5_Format",(function(){return Me})),n.d(e,"SRGB8_ALPHA8_ASTC_6x5_Format",(function(){return Se})),n.d(e,"SRGB8_ALPHA8_ASTC_6x6_Format",(function(){return Te})),n.d(e,"SRGB8_ALPHA8_ASTC_8x5_Format",(function(){return Ee})),n.d(e,"SRGB8_ALPHA8_ASTC_8x6_Format",(function(){return Ae})),n.d(e,"SRGB8_ALPHA8_ASTC_8x8_Format",(function(){return Ce})),n.d(e,"Scene",(function(){return Nh})),n.d(e,"SceneUtils",(function(){return Qv})),n.d(e,"ShaderChunk",(function(){return Tl})),n.d(e,"ShaderLib",(function(){return Al})),n.d(e,"ShaderMaterial",(function(){return Oa})),n.d(e,"ShadowMaterial",(function(){return Cf})),n.d(e,"Shape",(function(){return Cp})),n.d(e,"ShapeBufferGeometry",(function(){return yf})),n.d(e,"ShapeGeometry",(function(){return yf})),n.d(e,"ShapePath",(function(){return mv})),n.d(e,"ShapeUtils",(function(){return lf})),n.d(e,"ShortType",(function(){return Et})),n.d(e,"Skeleton",(function(){return fd})),n.d(e,"SkeletonHelper",(function(){return Vg})),n.d(e,"SkinnedMesh",(function(){return cd})),n.d(e,"SmoothShading",(function(){return y})),n.d(e,"Sphere",(function(){return Ur})),n.d(e,"SphereBufferGeometry",(function(){return bf})),n.d(e,"SphereGeometry",(function(){return bf})),n.d(e,"Spherical",(function(){return Pg})),n.d(e,"SphericalHarmonics3",(function(){return Lm})),n.d(e,"SplineCurve",(function(){return Sp})),n.d(e,"SpotLight",(function(){return xm})),n.d(e,"SpotLightHelper",(function(){return Ug})),n.d(e,"Sprite",(function(){return $h})),n.d(e,"SpriteMaterial",(function(){return Uh})),n.d(e,"SrcAlphaFactor",(function(){return O})),n.d(e,"SrcAlphaSaturateFactor",(function(){return H})),n.d(e,"SrcColorFactor",(function(){return D})),n.d(e,"StaticCopyUsage",(function(){return Sn})),n.d(e,"StaticDrawUsage",(function(){return yn})),n.d(e,"StaticReadUsage",(function(){return _n})),n.d(e,"StereoCamera",(function(){return Ym})),n.d(e,"StreamCopyUsage",(function(){return En})),n.d(e,"StreamDrawUsage",(function(){return bn})),n.d(e,"StreamReadUsage",(function(){return Mn})),n.d(e,"StringKeyframeTrack",(function(){return Jf})),n.d(e,"SubtractEquation",(function(){return E})),n.d(e,"SubtractiveBlending",(function(){return w})),n.d(e,"TOUCH",(function(){return a})),n.d(e,"TangentSpaceNormalMap",(function(){return $e})),n.d(e,"TetrahedronBufferGeometry",(function(){return _f})),n.d(e,"TetrahedronGeometry",(function(){return _f})),n.d(e,"TextGeometry",(function(){return ey})),n.d(e,"Texture",(function(){return ur})),n.d(e,"TextureLoader",(function(){return hm})),n.d(e,"TorusBufferGeometry",(function(){return wf})),n.d(e,"TorusGeometry",(function(){return wf})),n.d(e,"TorusKnotBufferGeometry",(function(){return Mf})),n.d(e,"TorusKnotGeometry",(function(){return Mf})),n.d(e,"Triangle",(function(){return Ri})),n.d(e,"TriangleFanDrawMode",(function(){return Ye})),n.d(e,"TriangleStripDrawMode",(function(){return Xe})),n.d(e,"TrianglesDrawMode",(function(){return qe})),n.d(e,"TubeBufferGeometry",(function(){return Sf})),n.d(e,"TubeGeometry",(function(){return Sf})),n.d(e,"UVMapping",(function(){return it})),n.d(e,"Uint16Attribute",(function(){return Fv})),n.d(e,"Uint16BufferAttribute",(function(){return Yi})),n.d(e,"Uint32Attribute",(function(){return Hv})),n.d(e,"Uint32BufferAttribute",(function(){return Zi})),n.d(e,"Uint8Attribute",(function(){return Nv})),n.d(e,"Uint8BufferAttribute",(function(){return ji})),n.d(e,"Uint8ClampedAttribute",(function(){return zv})),n.d(e,"Uint8ClampedBufferAttribute",(function(){return qi})),n.d(e,"Uniform",(function(){return Tg})),n.d(e,"UniformsLib",(function(){return El})),n.d(e,"UniformsUtils",(function(){return Pa})),n.d(e,"UnsignedByteType",(function(){return St})),n.d(e,"UnsignedInt248Type",(function(){return Nt})),n.d(e,"UnsignedIntType",(function(){return Lt})),n.d(e,"UnsignedShort4444Type",(function(){return Dt})),n.d(e,"UnsignedShort5551Type",(function(){return It})),n.d(e,"UnsignedShort565Type",(function(){return Ot})),n.d(e,"UnsignedShortType",(function(){return At})),n.d(e,"VSMShadowMap",(function(){return p})),n.d(e,"Vector2",(function(){return er})),n.d(e,"Vector3",(function(){return vr})),n.d(e,"Vector4",(function(){return dr})),n.d(e,"VectorKeyframeTrack",(function(){return Zf})),n.d(e,"Vertex",(function(){return Dv})),n.d(e,"VertexColors",(function(){return Mv})),n.d(e,"VideoTexture",(function(){return Ud})),n.d(e,"WebGL1Renderer",(function(){return Dh})),n.d(e,"WebGLCubeRenderTarget",(function(){return ka})),n.d(e,"WebGLMultipleRenderTargets",(function(){return fr})),n.d(e,"WebGLMultisampleRenderTarget",(function(){return mr})),n.d(e,"WebGLRenderTarget",(function(){return pr})),n.d(e,"WebGLRenderTargetCube",(function(){return Jv})),n.d(e,"WebGLRenderer",(function(){return Ph})),n.d(e,"WebGLUtils",(function(){return wh})),n.d(e,"WireframeGeometry",(function(){return Tf})),n.d(e,"WireframeHelper",(function(){return qv})),n.d(e,"WrapAroundEnding",(function(){return Ve})),n.d(e,"XHRLoader",(function(){return Xv})),n.d(e,"ZeroCurvatureEnding",(function(){return ke})),n.d(e,"ZeroFactor",(function(){return R})),n.d(e,"ZeroSlopeEnding",(function(){return Ge})),n.d(e,"ZeroStencilOp",(function(){return en})),n.d(e,"sRGBEncoding",(function(){return Ze}));const r="136",i={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},a={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},s=0,o=1,l=2,c=3,u=0,h=1,d=2,p=3,f=0,m=1,g=2,v=1,y=2,x=0,b=1,_=2,w=3,M=4,S=5,T=100,E=101,A=102,C=103,L=104,R=200,P=201,D=202,I=203,O=204,N=205,z=206,B=207,F=208,U=209,H=210,k=0,G=1,V=2,W=3,j=4,q=5,X=6,Y=7,J=0,Z=1,K=2,Q=0,$=1,tt=2,et=3,nt=4,rt=5,it=300,at=301,st=302,ot=303,lt=304,ct=306,ut=307,ht=1e3,dt=1001,pt=1002,ft=1003,mt=1004,gt=1004,vt=1005,yt=1005,xt=1006,bt=1007,_t=1007,wt=1008,Mt=1008,St=1009,Tt=1010,Et=1011,At=1012,Ct=1013,Lt=1014,Rt=1015,Pt=1016,Dt=1017,It=1018,Ot=1019,Nt=1020,zt=1021,Bt=1022,Ft=1023,Ut=1024,Ht=1025,kt=1026,Gt=1027,Vt=1028,Wt=1029,jt=1030,qt=1031,Xt=1032,Yt=1033,Jt=33776,Zt=33777,Kt=33778,Qt=33779,$t=35840,te=35841,ee=35842,ne=35843,re=36196,ie=37492,ae=37496,se=37808,oe=37809,le=37810,ce=37811,ue=37812,he=37813,de=37814,pe=37815,fe=37816,me=37817,ge=37818,ve=37819,ye=37820,xe=37821,be=36492,_e=37840,we=37841,Me=37842,Se=37843,Te=37844,Ee=37845,Ae=37846,Ce=37847,Le=37848,Re=37849,Pe=37850,De=37851,Ie=37852,Oe=37853,Ne=2200,ze=2201,Be=2202,Fe=2300,Ue=2301,He=2302,ke=2400,Ge=2401,Ve=2402,We=2500,je=2501,qe=0,Xe=1,Ye=2,Je=3e3,Ze=3001,Ke=3200,Qe=3201,$e=0,tn=1,en=0,nn=7680,rn=7681,an=7682,sn=7683,on=34055,ln=34056,cn=5386,un=512,hn=513,dn=514,pn=515,fn=516,mn=517,gn=518,vn=519,yn=35044,xn=35048,bn=35040,_n=35045,wn=35049,Mn=35041,Sn=35046,Tn=35050,En=35042,An="100",Cn="300 es";class Ln{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners,r=n[t];if(void 0!==r){const t=r.indexOf(e);-1!==t&&r.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners,n=e[t.type];if(void 0!==n){t.target=this;const e=n.slice(0);for(let n=0,r=e.length;n<r;n++)e[n].call(this,t);t.target=null}}}const Rn=[];for(let ay=0;ay<256;ay++)Rn[ay]=(ay<16?"0":"")+ay.toString(16);let Pn=1234567;const Dn=Math.PI/180,In=180/Math.PI;function On(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0,i=Rn[255&t]+Rn[t>>8&255]+Rn[t>>16&255]+Rn[t>>24&255]+"-"+Rn[255&e]+Rn[e>>8&255]+"-"+Rn[e>>16&15|64]+Rn[e>>24&255]+"-"+Rn[63&n|128]+Rn[n>>8&255]+"-"+Rn[n>>16&255]+Rn[n>>24&255]+Rn[255&r]+Rn[r>>8&255]+Rn[r>>16&255]+Rn[r>>24&255];return i.toUpperCase()}function Nn(t,e,n){return Math.max(e,Math.min(n,t))}function zn(t,e){return(t%e+e)%e}function Bn(t,e,n,r,i){return r+(t-e)*(i-r)/(n-e)}function Fn(t,e,n){return t!==e?(n-t)/(e-t):0}function Un(t,e,n){return(1-n)*t+n*e}function Hn(t,e,n,r){return Un(t,e,1-Math.exp(-n*r))}function kn(t,e=1){return e-Math.abs(zn(t,2*e)-e)}function Gn(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*(3-2*t))}function Vn(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*t*(t*(6*t-15)+10))}function Wn(t,e){return t+Math.floor(Math.random()*(e-t+1))}function jn(t,e){return t+Math.random()*(e-t)}function qn(t){return t*(.5-Math.random())}function Xn(t){return void 0!==t&&(Pn=t%2147483647),Pn=16807*Pn%2147483647,(Pn-1)/2147483646}function Yn(t){return t*Dn}function Jn(t){return t*In}function Zn(t){return 0===(t&t-1)&&0!==t}function Kn(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function Qn(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}function $n(t,e,n,r,i){const a=Math.cos,s=Math.sin,o=a(n/2),l=s(n/2),c=a((e+r)/2),u=s((e+r)/2),h=a((e-r)/2),d=s((e-r)/2),p=a((r-e)/2),f=s((r-e)/2);switch(i){case"XYX":t.set(o*u,l*h,l*d,o*c);break;case"YZY":t.set(l*d,o*u,l*h,o*c);break;case"ZXZ":t.set(l*h,l*d,o*u,o*c);break;case"XZX":t.set(o*u,l*f,l*p,o*c);break;case"YXY":t.set(l*p,o*u,l*f,o*c);break;case"ZYZ":t.set(l*f,l*p,o*u,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}var tr=Object.freeze({__proto__:null,DEG2RAD:Dn,RAD2DEG:In,generateUUID:On,clamp:Nn,euclideanModulo:zn,mapLinear:Bn,inverseLerp:Fn,lerp:Un,damp:Hn,pingpong:kn,smoothstep:Gn,smootherstep:Vn,randInt:Wn,randFloat:jn,randFloatSpread:qn,seededRandom:Xn,degToRad:Yn,radToDeg:Jn,isPowerOfTwo:Zn,ceilPowerOfTwo:Kn,floorPowerOfTwo:Qn,setQuaternionFromProperEuler:$n});class er{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6],this.y=r[1]*e+r[4]*n+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){const t=Math.atan2(-this.y,-this.x)+Math.PI;return t}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),r=Math.sin(e),i=this.x-t.x,a=this.y-t.y;return this.x=i*n-a*r+t.x,this.y=i*r+a*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}er.prototype.isVector2=!0;class nr{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,i,a,s,o,l){const c=this.elements;return c[0]=t,c[1]=r,c[2]=s,c[3]=e,c[4]=i,c[5]=o,c[6]=n,c[7]=a,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,a=n[0],s=n[3],o=n[6],l=n[1],c=n[4],u=n[7],h=n[2],d=n[5],p=n[8],f=r[0],m=r[3],g=r[6],v=r[1],y=r[4],x=r[7],b=r[2],_=r[5],w=r[8];return i[0]=a*f+s*v+o*b,i[3]=a*m+s*y+o*_,i[6]=a*g+s*x+o*w,i[1]=l*f+c*v+u*b,i[4]=l*m+c*y+u*_,i[7]=l*g+c*x+u*w,i[2]=h*f+d*v+p*b,i[5]=h*m+d*y+p*_,i[8]=h*g+d*x+p*w,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8];return e*a*c-e*s*l-n*i*c+n*s*o+r*i*l-r*a*o}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8],u=c*a-s*l,h=s*o-c*i,d=l*i-a*o,p=e*u+n*h+r*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=u*f,t[1]=(r*l-c*n)*f,t[2]=(s*n-r*a)*f,t[3]=h*f,t[4]=(c*e-r*o)*f,t[5]=(r*i-s*e)*f,t[6]=d*f,t[7]=(n*o-l*e)*f,t[8]=(a*e-n*i)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,r,i,a,s){const o=Math.cos(i),l=Math.sin(i);return this.set(n*o,n*l,-n*(o*a+l*s)+a+t,-r*l,r*o,-r*(-l*a+o*s)+s+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),r=this.elements,i=r[0],a=r[3],s=r[6],o=r[1],l=r[4],c=r[7];return r[0]=e*i+n*o,r[3]=e*a+n*l,r[6]=e*s+n*c,r[1]=-n*i+e*o,r[4]=-n*a+e*l,r[7]=-n*s+e*c,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let r=0;r<9;r++)if(e[r]!==n[r])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}function rr(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,r=t.length;n<r;++n)t[n]>e&&(e=t[n]);return e}nr.prototype.isMatrix3=!0;const ir={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function ar(t,e){return new ir[t](e)}function sr(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}let or;class lr{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===or&&(or=sr("canvas")),or.width=t.width,or.height=t.height;const n=or.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=or}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}}let cr=0;class ur extends Ln{constructor(t=ur.DEFAULT_IMAGE,e=ur.DEFAULT_MAPPING,n=dt,r=dt,i=xt,a=wt,s=Ft,o=St,l=1,c=Je){super(),Object.defineProperty(this,"id",{value:cr++}),this.uuid=On(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new er(0,0),this.repeat=new er(1,1),this.center=new er(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new nr,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this}toJSON(t){const e=void 0===t||"string"===typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const r=this.image;if(void 0===r.uuid&&(r.uuid=On()),!e&&void 0===t.images[r.uuid]){let e;if(Array.isArray(r)){e=[];for(let t=0,n=r.length;t<n;t++)r[t].isDataTexture?e.push(hr(r[t].image)):e.push(hr(r[t]))}else e=hr(r);t.images[r.uuid]={uuid:r.uuid,url:e}}n.image=r.uuid}return"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==it)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case ht:t.x=t.x-Math.floor(t.x);break;case dt:t.x=t.x<0?0:1;break;case pt:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case ht:t.y=t.y-Math.floor(t.y);break;case dt:t.y=t.y<0?0:1;break;case pt:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function hr(t){return"undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap?lr.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}ur.DEFAULT_IMAGE=void 0,ur.DEFAULT_MAPPING=it,ur.prototype.isTexture=!0;class dr{constructor(t=0,e=0,n=0,r=1){this.x=t,this.y=e,this.z=n,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,r){return this.x=t,this.y=e,this.z=n,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*r+a[12]*i,this.y=a[1]*e+a[5]*n+a[9]*r+a[13]*i,this.z=a[2]*e+a[6]*n+a[10]*r+a[14]*i,this.w=a[3]*e+a[7]*n+a[11]*r+a[15]*i,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,r,i;const a=.01,s=.1,o=t.elements,l=o[0],c=o[4],u=o[8],h=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(c-h)<a&&Math.abs(u-f)<a&&Math.abs(p-m)<a){if(Math.abs(c+h)<s&&Math.abs(u+f)<s&&Math.abs(p+m)<s&&Math.abs(l+d+g-3)<s)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(d+1)/2,v=(g+1)/2,y=(c+h)/4,x=(u+f)/4,b=(p+m)/4;return t>o&&t>v?t<a?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(t),r=y/n,i=x/n):o>v?o<a?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(o),n=y/r,i=b/r):v<a?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(v),n=x/i,r=b/i),this.set(n,r,i,e),this}let v=Math.sqrt((m-p)*(m-p)+(u-f)*(u-f)+(h-c)*(h-c));return Math.abs(v)<.001&&(v=1),this.x=(m-p)/v,this.y=(u-f)/v,this.z=(h-c)/v,this.w=Math.acos((l+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}dr.prototype.isVector4=!0;class pr extends Ln{constructor(t,e,n={}){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new dr(0,0,t,e),this.scissorTest=!1,this.viewport=new dr(0,0,t,e),this.texture=new ur(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:t,height:e,depth:1},this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:xt,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}pr.prototype.isWebGLRenderTarget=!0;class fr extends pr{constructor(t,e,n){super(t,e);const r=this.texture;this.texture=[];for(let i=0;i<n;i++)this.texture[i]=r.clone()}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let r=0,i=this.texture.length;r<i;r++)this.texture[r].image.width=t,this.texture[r].image.height=e,this.texture[r].image.depth=n;this.dispose()}return this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e),this}copy(t){this.dispose(),this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this.texture.length=0;for(let e=0,n=t.texture.length;e<n;e++)this.texture[e]=t.texture[e].clone();return this}}fr.prototype.isWebGLMultipleRenderTargets=!0;class mr extends pr{constructor(t,e,n={}){super(t,e,n),this.samples=4,this.ignoreDepthForMultisampleCopy=void 0===n.ignoreDepth||n.ignoreDepth,this.useRenderToTexture=void 0!==n.useRenderToTexture&&n.useRenderToTexture,this.useRenderbuffer=!1===this.useRenderToTexture}copy(t){return super.copy.call(this,t),this.samples=t.samples,this.useRenderToTexture=t.useRenderToTexture,this.useRenderbuffer=t.useRenderbuffer,this}}mr.prototype.isWebGLMultisampleRenderTarget=!0;class gr{constructor(t=0,e=0,n=0,r=1){this._x=t,this._y=e,this._z=n,this._w=r}static slerp(t,e,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,r)}static slerpFlat(t,e,n,r,i,a,s){let o=n[r+0],l=n[r+1],c=n[r+2],u=n[r+3];const h=i[a+0],d=i[a+1],p=i[a+2],f=i[a+3];if(0===s)return t[e+0]=o,t[e+1]=l,t[e+2]=c,void(t[e+3]=u);if(1===s)return t[e+0]=h,t[e+1]=d,t[e+2]=p,void(t[e+3]=f);if(u!==f||o!==h||l!==d||c!==p){let t=1-s;const e=o*h+l*d+c*p+u*f,n=e>=0?1:-1,r=1-e*e;if(r>Number.EPSILON){const i=Math.sqrt(r),a=Math.atan2(i,e*n);t=Math.sin(t*a)/i,s=Math.sin(s*a)/i}const i=s*n;if(o=o*t+h*i,l=l*t+d*i,c=c*t+p*i,u=u*t+f*i,t===1-s){const t=1/Math.sqrt(o*o+l*l+c*c+u*u);o*=t,l*=t,c*=t,u*=t}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,r,i,a){const s=n[r],o=n[r+1],l=n[r+2],c=n[r+3],u=i[a],h=i[a+1],d=i[a+2],p=i[a+3];return t[e]=s*p+c*u+o*d-l*h,t[e+1]=o*p+c*h+l*u-s*d,t[e+2]=l*p+c*d+s*h-o*u,t[e+3]=c*p-s*u-o*h-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,r=t._y,i=t._z,a=t._order,s=Math.cos,o=Math.sin,l=s(n/2),c=s(r/2),u=s(i/2),h=o(n/2),d=o(r/2),p=o(i/2);switch(a){case"XYZ":this._x=h*c*u+l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u-h*d*p;break;case"YXZ":this._x=h*c*u+l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u+h*d*p;break;case"ZXY":this._x=h*c*u-l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u-h*d*p;break;case"ZYX":this._x=h*c*u-l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u+h*d*p;break;case"YZX":this._x=h*c*u+l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u-h*d*p;break;case"XZY":this._x=h*c*u-l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u+h*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,r=Math.sin(n);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],r=e[4],i=e[8],a=e[1],s=e[5],o=e[9],l=e[2],c=e[6],u=e[10],h=n+s+u;if(h>0){const t=.5/Math.sqrt(h+1);this._w=.25/t,this._x=(c-o)*t,this._y=(i-l)*t,this._z=(a-r)*t}else if(n>s&&n>u){const t=2*Math.sqrt(1+n-s-u);this._w=(c-o)/t,this._x=.25*t,this._y=(r+a)/t,this._z=(i+l)/t}else if(s>u){const t=2*Math.sqrt(1+s-n-u);this._w=(i-l)/t,this._x=(r+a)/t,this._y=.25*t,this._z=(o+c)/t}else{const t=2*Math.sqrt(1+u-n-s);this._w=(a-r)/t,this._x=(i+l)/t,this._y=(o+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Nn(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const r=Math.min(1,e/n);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,r=t._y,i=t._z,a=t._w,s=e._x,o=e._y,l=e._z,c=e._w;return this._x=n*c+a*s+r*l-i*o,this._y=r*c+a*o+i*s-n*l,this._z=i*c+a*l+n*o-r*s,this._w=a*c-n*s-r*o-i*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,r=this._y,i=this._z,a=this._w;let s=a*t._w+n*t._x+r*t._y+i*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=a,this._x=n,this._y=r,this._z=i,this;const o=1-s*s;if(o<=Number.EPSILON){const t=1-e;return this._w=t*a+e*this._w,this._x=t*n+e*this._x,this._y=t*r+e*this._y,this._z=t*i+e*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),c=Math.atan2(l,s),u=Math.sin((1-e)*c)/l,h=Math.sin(e*c)/l;return this._w=a*u+this._w*h,this._x=n*u+this._x*h,this._y=r*u+this._y*h,this._z=i*u+this._z*h,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),r=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(e*Math.cos(r),n*Math.sin(i),n*Math.cos(i),e*Math.sin(r))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}gr.prototype.isQuaternion=!0;class vr{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(xr.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(xr.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6]*r,this.y=i[1]*e+i[4]*n+i[7]*r,this.z=i[2]*e+i[5]*n+i[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=t.elements,a=1/(i[3]*e+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*e+i[4]*n+i[8]*r+i[12])*a,this.y=(i[1]*e+i[5]*n+i[9]*r+i[13])*a,this.z=(i[2]*e+i[6]*n+i[10]*r+i[14])*a,this}applyQuaternion(t){const e=this.x,n=this.y,r=this.z,i=t.x,a=t.y,s=t.z,o=t.w,l=o*e+a*r-s*n,c=o*n+s*e-i*r,u=o*r+i*n-a*e,h=-i*e-a*n-s*r;return this.x=l*o+h*-i+c*-s-u*-a,this.y=c*o+h*-a+u*-i-l*-s,this.z=u*o+h*-s+l*-a-c*-i,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*r,this.y=i[1]*e+i[5]*n+i[9]*r,this.z=i[2]*e+i[6]*n+i[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,r=t.y,i=t.z,a=e.x,s=e.y,o=e.z;return this.x=r*o-i*s,this.y=i*a-n*o,this.z=n*s-r*a,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return yr.copy(this).projectOnVector(t),this.sub(yr)}reflect(t){return this.sub(yr.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Nn(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const r=Math.sin(e)*t;return this.x=r*Math.sin(n),this.y=Math.cos(e)*t,this.z=r*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=r,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}vr.prototype.isVector3=!0;const yr=new vr,xr=new gr;class br{constructor(t=new vr(1/0,1/0,1/0),e=new vr(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,s=-1/0;for(let o=0,l=t.length;o<l;o+=3){const l=t[o],c=t[o+1],u=t[o+2];l<e&&(e=l),c<n&&(n=c),u<r&&(r=u),l>i&&(i=l),c>a&&(a=c),u>s&&(s=u)}return this.min.set(e,n,r),this.max.set(i,a,s),this}setFromBufferAttribute(t){let e=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,s=-1/0;for(let o=0,l=t.count;o<l;o++){const l=t.getX(o),c=t.getY(o),u=t.getZ(o);l<e&&(e=l),c<n&&(n=c),u<r&&(r=u),l>i&&(i=l),c>a&&(a=c),u>s&&(s=u)}return this.min.set(e,n,r),this.max.set(i,a,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=wr.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),Mr.copy(e.boundingBox),Mr.applyMatrix4(t.matrixWorld),this.union(Mr));const n=t.children;for(let r=0,i=n.length;r<i;r++)this.expandByObject(n[r]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,wr),wr.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Rr),Pr.subVectors(this.max,Rr),Sr.subVectors(t.a,Rr),Tr.subVectors(t.b,Rr),Er.subVectors(t.c,Rr),Ar.subVectors(Tr,Sr),Cr.subVectors(Er,Tr),Lr.subVectors(Sr,Er);let e=[0,-Ar.z,Ar.y,0,-Cr.z,Cr.y,0,-Lr.z,Lr.y,Ar.z,0,-Ar.x,Cr.z,0,-Cr.x,Lr.z,0,-Lr.x,-Ar.y,Ar.x,0,-Cr.y,Cr.x,0,-Lr.y,Lr.x,0];return!!Or(e,Sr,Tr,Er,Pr)&&(e=[1,0,0,0,1,0,0,0,1],!!Or(e,Sr,Tr,Er,Pr)&&(Dr.crossVectors(Ar,Cr),e=[Dr.x,Dr.y,Dr.z],Or(e,Sr,Tr,Er,Pr)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){const e=wr.copy(t).clamp(this.min,this.max);return e.sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(wr).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(_r[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),_r[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),_r[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),_r[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),_r[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),_r[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),_r[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),_r[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(_r)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}br.prototype.isBox3=!0;const _r=[new vr,new vr,new vr,new vr,new vr,new vr,new vr,new vr],wr=new vr,Mr=new br,Sr=new vr,Tr=new vr,Er=new vr,Ar=new vr,Cr=new vr,Lr=new vr,Rr=new vr,Pr=new vr,Dr=new vr,Ir=new vr;function Or(t,e,n,r,i){for(let a=0,s=t.length-3;a<=s;a+=3){Ir.fromArray(t,a);const s=i.x*Math.abs(Ir.x)+i.y*Math.abs(Ir.y)+i.z*Math.abs(Ir.z),o=e.dot(Ir),l=n.dot(Ir),c=r.dot(Ir);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>s)return!1}return!0}const Nr=new br,zr=new vr,Br=new vr,Fr=new vr;class Ur{constructor(t=new vr,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):Nr.setFromPoints(t).getCenter(n);let r=0;for(let i=0,a=t.length;i<a;i++)r=Math.max(r,n.distanceToSquared(t[i]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Fr.subVectors(t,this.center);const e=Fr.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(Fr.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return!0===this.center.equals(t.center)?Br.set(0,0,1).multiplyScalar(t.radius):Br.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(zr.copy(t.center).add(Br)),this.expandByPoint(zr.copy(t.center).sub(Br)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Hr=new vr,kr=new vr,Gr=new vr,Vr=new vr,Wr=new vr,jr=new vr,qr=new vr;class Xr{constructor(t=new vr,e=new vr(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Hr)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Hr.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Hr.copy(this.direction).multiplyScalar(e).add(this.origin),Hr.distanceToSquared(t))}distanceSqToSegment(t,e,n,r){kr.copy(t).add(e).multiplyScalar(.5),Gr.copy(e).sub(t).normalize(),Vr.copy(this.origin).sub(kr);const i=.5*t.distanceTo(e),a=-this.direction.dot(Gr),s=Vr.dot(this.direction),o=-Vr.dot(Gr),l=Vr.lengthSq(),c=Math.abs(1-a*a);let u,h,d,p;if(c>0)if(u=a*o-s,h=a*s-o,p=i*c,u>=0)if(h>=-p)if(h<=p){const t=1/c;u*=t,h*=t,d=u*(u+a*h+2*s)+h*(a*u+h+2*o)+l}else h=i,u=Math.max(0,-(a*h+s)),d=-u*u+h*(h+2*o)+l;else h=-i,u=Math.max(0,-(a*h+s)),d=-u*u+h*(h+2*o)+l;else h<=-p?(u=Math.max(0,-(-a*i+s)),h=u>0?-i:Math.min(Math.max(-i,-o),i),d=-u*u+h*(h+2*o)+l):h<=p?(u=0,h=Math.min(Math.max(-i,-o),i),d=h*(h+2*o)+l):(u=Math.max(0,-(a*i+s)),h=u>0?i:Math.min(Math.max(-i,-o),i),d=-u*u+h*(h+2*o)+l);else h=a>0?-i:i,u=Math.max(0,-(a*h+s)),d=-u*u+h*(h+2*o)+l;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy(Gr).multiplyScalar(h).add(kr),d}intersectSphere(t,e){Hr.subVectors(t.center,this.origin);const n=Hr.dot(this.direction),r=Hr.dot(Hr)-n*n,i=t.radius*t.radius;if(r>i)return null;const a=Math.sqrt(i-r),s=n-a,o=n+a;return s<0&&o<0?null:s<0?this.at(o,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;const n=t.normal.dot(this.direction);return n*e<0}intersectBox(t,e){let n,r,i,a,s,o;const l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,h=this.origin;return l>=0?(n=(t.min.x-h.x)*l,r=(t.max.x-h.x)*l):(n=(t.max.x-h.x)*l,r=(t.min.x-h.x)*l),c>=0?(i=(t.min.y-h.y)*c,a=(t.max.y-h.y)*c):(i=(t.max.y-h.y)*c,a=(t.min.y-h.y)*c),n>a||i>r?null:((i>n||n!==n)&&(n=i),(a<r||r!==r)&&(r=a),u>=0?(s=(t.min.z-h.z)*u,o=(t.max.z-h.z)*u):(s=(t.max.z-h.z)*u,o=(t.min.z-h.z)*u),n>o||s>r?null:((s>n||n!==n)&&(n=s),(o<r||r!==r)&&(r=o),r<0?null:this.at(n>=0?n:r,e)))}intersectsBox(t){return null!==this.intersectBox(t,Hr)}intersectTriangle(t,e,n,r,i){Wr.subVectors(e,t),jr.subVectors(n,t),qr.crossVectors(Wr,jr);let a,s=this.direction.dot(qr);if(s>0){if(r)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}Vr.subVectors(this.origin,t);const o=a*this.direction.dot(jr.crossVectors(Vr,jr));if(o<0)return null;const l=a*this.direction.dot(Wr.cross(Vr));if(l<0)return null;if(o+l>s)return null;const c=-a*Vr.dot(qr);return c<0?null:this.at(c/s,i)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Yr{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,i,a,s,o,l,c,u,h,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=r,g[1]=i,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=c,g[10]=u,g[14]=h,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Yr).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,r=1/Jr.setFromMatrixColumn(t,0).length(),i=1/Jr.setFromMatrixColumn(t,1).length(),a=1/Jr.setFromMatrixColumn(t,2).length();return e[0]=n[0]*r,e[1]=n[1]*r,e[2]=n[2]*r,e[3]=0,e[4]=n[4]*i,e[5]=n[5]*i,e[6]=n[6]*i,e[7]=0,e[8]=n[8]*a,e[9]=n[9]*a,e[10]=n[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,r=t.y,i=t.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(r),l=Math.sin(r),c=Math.cos(i),u=Math.sin(i);if("XYZ"===t.order){const t=a*c,n=a*u,r=s*c,i=s*u;e[0]=o*c,e[4]=-o*u,e[8]=l,e[1]=n+r*l,e[5]=t-i*l,e[9]=-s*o,e[2]=i-t*l,e[6]=r+n*l,e[10]=a*o}else if("YXZ"===t.order){const t=o*c,n=o*u,r=l*c,i=l*u;e[0]=t+i*s,e[4]=r*s-n,e[8]=a*l,e[1]=a*u,e[5]=a*c,e[9]=-s,e[2]=n*s-r,e[6]=i+t*s,e[10]=a*o}else if("ZXY"===t.order){const t=o*c,n=o*u,r=l*c,i=l*u;e[0]=t-i*s,e[4]=-a*u,e[8]=r+n*s,e[1]=n+r*s,e[5]=a*c,e[9]=i-t*s,e[2]=-a*l,e[6]=s,e[10]=a*o}else if("ZYX"===t.order){const t=a*c,n=a*u,r=s*c,i=s*u;e[0]=o*c,e[4]=r*l-n,e[8]=t*l+i,e[1]=o*u,e[5]=i*l+t,e[9]=n*l-r,e[2]=-l,e[6]=s*o,e[10]=a*o}else if("YZX"===t.order){const t=a*o,n=a*l,r=s*o,i=s*l;e[0]=o*c,e[4]=i-t*u,e[8]=r*u+n,e[1]=u,e[5]=a*c,e[9]=-s*c,e[2]=-l*c,e[6]=n*u+r,e[10]=t-i*u}else if("XZY"===t.order){const t=a*o,n=a*l,r=s*o,i=s*l;e[0]=o*c,e[4]=-u,e[8]=l*c,e[1]=t*u+i,e[5]=a*c,e[9]=n*u-r,e[2]=r*u-n,e[6]=s*c,e[10]=i*u+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Kr,t,Qr)}lookAt(t,e,n){const r=this.elements;return ei.subVectors(t,e),0===ei.lengthSq()&&(ei.z=1),ei.normalize(),$r.crossVectors(n,ei),0===$r.lengthSq()&&(1===Math.abs(n.z)?ei.x+=1e-4:ei.z+=1e-4,ei.normalize(),$r.crossVectors(n,ei)),$r.normalize(),ti.crossVectors(ei,$r),r[0]=$r.x,r[4]=ti.x,r[8]=ei.x,r[1]=$r.y,r[5]=ti.y,r[9]=ei.y,r[2]=$r.z,r[6]=ti.z,r[10]=ei.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,a=n[0],s=n[4],o=n[8],l=n[12],c=n[1],u=n[5],h=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],y=n[7],x=n[11],b=n[15],_=r[0],w=r[4],M=r[8],S=r[12],T=r[1],E=r[5],A=r[9],C=r[13],L=r[2],R=r[6],P=r[10],D=r[14],I=r[3],O=r[7],N=r[11],z=r[15];return i[0]=a*_+s*T+o*L+l*I,i[4]=a*w+s*E+o*R+l*O,i[8]=a*M+s*A+o*P+l*N,i[12]=a*S+s*C+o*D+l*z,i[1]=c*_+u*T+h*L+d*I,i[5]=c*w+u*E+h*R+d*O,i[9]=c*M+u*A+h*P+d*N,i[13]=c*S+u*C+h*D+d*z,i[2]=p*_+f*T+m*L+g*I,i[6]=p*w+f*E+m*R+g*O,i[10]=p*M+f*A+m*P+g*N,i[14]=p*S+f*C+m*D+g*z,i[3]=v*_+y*T+x*L+b*I,i[7]=v*w+y*E+x*R+b*O,i[11]=v*M+y*A+x*P+b*N,i[15]=v*S+y*C+x*D+b*z,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],r=t[8],i=t[12],a=t[1],s=t[5],o=t[9],l=t[13],c=t[2],u=t[6],h=t[10],d=t[14],p=t[3],f=t[7],m=t[11],g=t[15];return p*(+i*o*u-r*l*u-i*s*h+n*l*h+r*s*d-n*o*d)+f*(+e*o*d-e*l*h+i*a*h-r*a*d+r*l*c-i*o*c)+m*(+e*l*u-e*s*d-i*a*u+n*a*d+i*s*c-n*l*c)+g*(-r*s*c-e*o*u+e*s*h+r*a*u-n*a*h+n*o*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8],u=t[9],h=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],v=u*m*l-f*h*l+f*o*d-s*m*d-u*o*g+s*h*g,y=p*h*l-c*m*l-p*o*d+a*m*d+c*o*g-a*h*g,x=c*f*l-p*u*l+p*s*d-a*f*d-c*s*g+a*u*g,b=p*u*o-c*f*o-p*s*h+a*f*h+c*s*m-a*u*m,_=e*v+n*y+r*x+i*b;if(0===_)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/_;return t[0]=v*w,t[1]=(f*h*i-u*m*i-f*r*d+n*m*d+u*r*g-n*h*g)*w,t[2]=(s*m*i-f*o*i+f*r*l-n*m*l-s*r*g+n*o*g)*w,t[3]=(u*o*i-s*h*i-u*r*l+n*h*l+s*r*d-n*o*d)*w,t[4]=y*w,t[5]=(c*m*i-p*h*i+p*r*d-e*m*d-c*r*g+e*h*g)*w,t[6]=(p*o*i-a*m*i-p*r*l+e*m*l+a*r*g-e*o*g)*w,t[7]=(a*h*i-c*o*i+c*r*l-e*h*l-a*r*d+e*o*d)*w,t[8]=x*w,t[9]=(p*u*i-c*f*i-p*n*d+e*f*d+c*n*g-e*u*g)*w,t[10]=(a*f*i-p*s*i+p*n*l-e*f*l-a*n*g+e*s*g)*w,t[11]=(c*s*i-a*u*i-c*n*l+e*u*l+a*n*d-e*s*d)*w,t[12]=b*w,t[13]=(c*f*r-p*u*r+p*n*h-e*f*h-c*n*m+e*u*m)*w,t[14]=(p*s*r-a*f*r-p*n*o+e*f*o+a*n*m-e*s*m)*w,t[15]=(a*u*r-c*s*r+c*n*o-e*u*o-a*n*h+e*s*h)*w,this}scale(t){const e=this.elements,n=t.x,r=t.y,i=t.z;return e[0]*=n,e[4]*=r,e[8]*=i,e[1]*=n,e[5]*=r,e[9]*=i,e[2]*=n,e[6]*=r,e[10]*=i,e[3]*=n,e[7]*=r,e[11]*=i,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,r))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),r=Math.sin(e),i=1-n,a=t.x,s=t.y,o=t.z,l=i*a,c=i*s;return this.set(l*a+n,l*s-r*o,l*o+r*s,0,l*s+r*o,c*s+n,c*o-r*a,0,l*o-r*s,c*o+r*a,i*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,r,i,a){return this.set(1,n,i,0,t,1,a,0,e,r,1,0,0,0,0,1),this}compose(t,e,n){const r=this.elements,i=e._x,a=e._y,s=e._z,o=e._w,l=i+i,c=a+a,u=s+s,h=i*l,d=i*c,p=i*u,f=a*c,m=a*u,g=s*u,v=o*l,y=o*c,x=o*u,b=n.x,_=n.y,w=n.z;return r[0]=(1-(f+g))*b,r[1]=(d+x)*b,r[2]=(p-y)*b,r[3]=0,r[4]=(d-x)*_,r[5]=(1-(h+g))*_,r[6]=(m+v)*_,r[7]=0,r[8]=(p+y)*w,r[9]=(m-v)*w,r[10]=(1-(h+f))*w,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,n){const r=this.elements;let i=Jr.set(r[0],r[1],r[2]).length();const a=Jr.set(r[4],r[5],r[6]).length(),s=Jr.set(r[8],r[9],r[10]).length(),o=this.determinant();o<0&&(i=-i),t.x=r[12],t.y=r[13],t.z=r[14],Zr.copy(this);const l=1/i,c=1/a,u=1/s;return Zr.elements[0]*=l,Zr.elements[1]*=l,Zr.elements[2]*=l,Zr.elements[4]*=c,Zr.elements[5]*=c,Zr.elements[6]*=c,Zr.elements[8]*=u,Zr.elements[9]*=u,Zr.elements[10]*=u,e.setFromRotationMatrix(Zr),n.x=i,n.y=a,n.z=s,this}makePerspective(t,e,n,r,i,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,o=2*i/(e-t),l=2*i/(n-r),c=(e+t)/(e-t),u=(n+r)/(n-r),h=-(a+i)/(a-i),d=-2*a*i/(a-i);return s[0]=o,s[4]=0,s[8]=c,s[12]=0,s[1]=0,s[5]=l,s[9]=u,s[13]=0,s[2]=0,s[6]=0,s[10]=h,s[14]=d,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,n,r,i,a){const s=this.elements,o=1/(e-t),l=1/(n-r),c=1/(a-i),u=(e+t)*o,h=(n+r)*l,d=(a+i)*c;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-u,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-h,s[2]=0,s[6]=0,s[10]=-2*c,s[14]=-d,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let r=0;r<16;r++)if(e[r]!==n[r])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}Yr.prototype.isMatrix4=!0;const Jr=new vr,Zr=new Yr,Kr=new vr(0,0,0),Qr=new vr(1,1,1),$r=new vr,ti=new vr,ei=new vr,ni=new Yr,ri=new gr;class ii{constructor(t=0,e=0,n=0,r=ii.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,r=this._order){return this._x=t,this._y=e,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const r=t.elements,i=r[0],a=r[4],s=r[8],o=r[1],l=r[5],c=r[9],u=r[2],h=r[6],d=r[10];switch(e){case"XYZ":this._y=Math.asin(Nn(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-a,i)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Nn(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(s,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-u,i),this._z=0);break;case"ZXY":this._x=Math.asin(Nn(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,i));break;case"ZYX":this._y=Math.asin(-Nn(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(o,i)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(Nn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-u,i)):(this._x=0,this._y=Math.atan2(s,d));break;case"XZY":this._z=Math.asin(-Nn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(s,i)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return ni.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ni,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return ri.setFromEuler(this),this.setFromQuaternion(ri,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new vr(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}ii.prototype.isEuler=!0,ii.DefaultOrder="XYZ",ii.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class ai{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!==(this.mask&t.mask)}isEnabled(t){return 0!==(this.mask&(1<<t|0))}}let si=0;const oi=new vr,li=new gr,ci=new Yr,ui=new vr,hi=new vr,di=new vr,pi=new gr,fi=new vr(1,0,0),mi=new vr(0,1,0),gi=new vr(0,0,1),vi={type:"added"},yi={type:"removed"};class xi extends Ln{constructor(){super(),Object.defineProperty(this,"id",{value:si++}),this.uuid=On(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=xi.DefaultUp.clone();const t=new vr,e=new ii,n=new gr,r=new vr(1,1,1);function i(){n.setFromEuler(e,!1)}function a(){e.setFromQuaternion(n,void 0,!1)}e._onChange(i),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Yr},normalMatrix:{value:new nr}}),this.matrix=new Yr,this.matrixWorld=new Yr,this.matrixAutoUpdate=xi.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ai,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return li.setFromAxisAngle(t,e),this.quaternion.multiply(li),this}rotateOnWorldAxis(t,e){return li.setFromAxisAngle(t,e),this.quaternion.premultiply(li),this}rotateX(t){return this.rotateOnAxis(fi,t)}rotateY(t){return this.rotateOnAxis(mi,t)}rotateZ(t){return this.rotateOnAxis(gi,t)}translateOnAxis(t,e){return oi.copy(t).applyQuaternion(this.quaternion),this.position.add(oi.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(fi,t)}translateY(t){return this.translateOnAxis(mi,t)}translateZ(t){return this.translateOnAxis(gi,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(ci.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?ui.copy(t):ui.set(t,e,n);const r=this.parent;this.updateWorldMatrix(!0,!1),hi.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ci.lookAt(hi,ui,this.up):ci.lookAt(ui,hi,this.up),this.quaternion.setFromRotationMatrix(ci),r&&(ci.extractRotation(r.matrixWorld),li.setFromRotationMatrix(ci),this.quaternion.premultiply(li.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(vi)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(yi)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(yi)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),ci.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),ci.multiply(t.parent.matrixWorld)),t.applyMatrix4(ci),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n],i=r.getObjectByProperty(t,e);if(void 0!==i)return i}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(hi,t,di),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(hi,pi,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"===typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};function i(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(r.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=i(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,r=n.length;e<r;e++){const r=n[e];i(t.shapes,r)}else i(t.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(t.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,r=this.material.length;n<r;n++)e.push(i(t.materials,this.material[n]));r.material=e}else r.material=i(t.materials,this.material);if(this.children.length>0){r.children=[];for(let e=0;e<this.children.length;e++)r.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){r.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];r.animations.push(i(t.animations,n))}}if(e){const e=a(t.geometries),r=a(t.materials),i=a(t.textures),s=a(t.images),o=a(t.shapes),l=a(t.skeletons),c=a(t.animations);e.length>0&&(n.geometries=e),r.length>0&&(n.materials=r),i.length>0&&(n.textures=i),s.length>0&&(n.images=s),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c)}return n.object=r,n;function a(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let n=0;n<t.children.length;n++){const e=t.children[n];this.add(e.clone())}return this}}xi.DefaultUp=new vr(0,1,0),xi.DefaultMatrixAutoUpdate=!0,xi.prototype.isObject3D=!0;const bi=new vr,_i=new vr,wi=new vr,Mi=new vr,Si=new vr,Ti=new vr,Ei=new vr,Ai=new vr,Ci=new vr,Li=new vr;class Ri{constructor(t=new vr,e=new vr,n=new vr){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,r){r.subVectors(n,e),bi.subVectors(t,e),r.cross(bi);const i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(t,e,n,r,i){bi.subVectors(r,e),_i.subVectors(n,e),wi.subVectors(t,e);const a=bi.dot(bi),s=bi.dot(_i),o=bi.dot(wi),l=_i.dot(_i),c=_i.dot(wi),u=a*l-s*s;if(0===u)return i.set(-2,-1,-1);const h=1/u,d=(l*o-s*c)*h,p=(a*c-s*o)*h;return i.set(1-d-p,p,d)}static containsPoint(t,e,n,r){return this.getBarycoord(t,e,n,r,Mi),Mi.x>=0&&Mi.y>=0&&Mi.x+Mi.y<=1}static getUV(t,e,n,r,i,a,s,o){return this.getBarycoord(t,e,n,r,Mi),o.set(0,0),o.addScaledVector(i,Mi.x),o.addScaledVector(a,Mi.y),o.addScaledVector(s,Mi.z),o}static isFrontFacing(t,e,n,r){return bi.subVectors(n,e),_i.subVectors(t,e),bi.cross(_i).dot(r)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,r){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[r]),this}setFromAttributeAndIndices(t,e,n,r){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,r),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return bi.subVectors(this.c,this.b),_i.subVectors(this.a,this.b),.5*bi.cross(_i).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Ri.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Ri.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,r,i){return Ri.getUV(t,this.a,this.b,this.c,e,n,r,i)}containsPoint(t){return Ri.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Ri.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,r=this.b,i=this.c;let a,s;Si.subVectors(r,n),Ti.subVectors(i,n),Ai.subVectors(t,n);const o=Si.dot(Ai),l=Ti.dot(Ai);if(o<=0&&l<=0)return e.copy(n);Ci.subVectors(t,r);const c=Si.dot(Ci),u=Ti.dot(Ci);if(c>=0&&u<=c)return e.copy(r);const h=o*u-c*l;if(h<=0&&o>=0&&c<=0)return a=o/(o-c),e.copy(n).addScaledVector(Si,a);Li.subVectors(t,i);const d=Si.dot(Li),p=Ti.dot(Li);if(p>=0&&d<=p)return e.copy(i);const f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return s=l/(l-p),e.copy(n).addScaledVector(Ti,s);const m=c*p-d*u;if(m<=0&&u-c>=0&&d-p>=0)return Ei.subVectors(i,r),s=(u-c)/(u-c+(d-p)),e.copy(r).addScaledVector(Ei,s);const g=1/(m+f+h);return a=f*g,s=h*g,e.copy(n).addScaledVector(Si,a).addScaledVector(Ti,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Pi=0;class Di extends Ln{constructor(){super(),Object.defineProperty(this,"id",{value:Pi++}),this.uuid=On(),this.name="",this.type="Material",this.fog=!0,this.blending=b,this.side=f,this.vertexColors=!1,this.opacity=1,this.format=Ft,this.transparent=!1,this.blendSrc=O,this.blendDst=N,this.blendEquation=T,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=W,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=vn,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=nn,this.stencilZFail=nn,this.stencilZPass=nn,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!==t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===v;continue}const r=this[e];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}}toJSON(t){const e=void 0===t||"string"===typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==b&&(n.blending=this.blending),this.side!==f&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.format!==Ft&&(n.format=this.format),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=r(t.textures),i=r(t.images);e.length>0&&(n.textures=e),i.length>0&&(n.images=i)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.format=t.format,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let r=0;r!==t;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}Di.prototype.isMaterial=!0;const Ii={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Oi={h:0,s:0,l:0},Ni={h:0,s:0,l:0};function zi(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function Bi(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Fi(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class Ui{constructor(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"===typeof t?this.setHex(t):"string"===typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=zn(t,1),e=Nn(e,0,1),n=Nn(n,0,1),0===e)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,i=2*n-r;this.r=zi(i,r,t+1/3),this.g=zi(i,r,t),this.b=zi(i,r,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const r=n[1],i=n[2];switch(r){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i)){const n=parseFloat(t[1])/360,r=parseInt(t[2],10)/100,i=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(n,r,i)}break}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=Ii[t.toLowerCase()];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Bi(t.r),this.g=Bi(t.g),this.b=Bi(t.b),this}copyLinearToSRGB(t){return this.r=Fi(t.r),this.g=Fi(t.g),this.b=Fi(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){const e=this.r,n=this.g,r=this.b,i=Math.max(e,n,r),a=Math.min(e,n,r);let s,o;const l=(a+i)/2;if(a===i)s=0,o=0;else{const t=i-a;switch(o=l<=.5?t/(i+a):t/(2-i-a),i){case e:s=(n-r)/t+(n<r?6:0);break;case n:s=(r-e)/t+2;break;case r:s=(e-n)/t+4;break}s/=6}return t.h=s,t.s=o,t.l=l,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(Oi),Oi.h+=t,Oi.s+=e,Oi.l+=n,this.setHSL(Oi.h,Oi.s,Oi.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Oi),t.getHSL(Ni);const n=Un(Oi.h,Ni.h,e),r=Un(Oi.s,Ni.s,e),i=Un(Oi.l,Ni.l,e);return this.setHSL(n,r,i),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Ui.NAMES=Ii,Ui.prototype.isColor=!0,Ui.prototype.r=1,Ui.prototype.g=1,Ui.prototype.b=1;class Hi extends Di{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new Ui(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}Hi.prototype.isMeshBasicMaterial=!0;const ki=new vr,Gi=new er;class Vi{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=yn,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[t+r]=e.array[n+r];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),i=new Ui),e[n++]=i.r,e[n++]=i.g,e[n++]=i.b}return this}copyVector2sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),i=new er),e[n++]=i.x,e[n++]=i.y}return this}copyVector3sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),i=new vr),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z}return this}copyVector4sArray(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),i=new dr),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z,e[n++]=i.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)Gi.fromBufferAttribute(this,e),Gi.applyMatrix3(t),this.setXY(e,Gi.x,Gi.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)ki.fromBufferAttribute(this,e),ki.applyMatrix3(t),this.setXYZ(e,ki.x,ki.y,ki.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)ki.x=this.getX(e),ki.y=this.getY(e),ki.z=this.getZ(e),ki.applyMatrix4(t),this.setXYZ(e,ki.x,ki.y,ki.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)ki.x=this.getX(e),ki.y=this.getY(e),ki.z=this.getZ(e),ki.applyNormalMatrix(t),this.setXYZ(e,ki.x,ki.y,ki.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)ki.x=this.getX(e),ki.y=this.getY(e),ki.z=this.getZ(e),ki.transformDirection(t),this.setXYZ(e,ki.x,ki.y,ki.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this}setXYZW(t,e,n,r,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this.array[t+3]=i,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==yn&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}Vi.prototype.isBufferAttribute=!0;class Wi extends Vi{constructor(t,e,n){super(new Int8Array(t),e,n)}}class ji extends Vi{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class qi extends Vi{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class Xi extends Vi{constructor(t,e,n){super(new Int16Array(t),e,n)}}class Yi extends Vi{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Ji extends Vi{constructor(t,e,n){super(new Int32Array(t),e,n)}}class Zi extends Vi{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Ki extends Vi{constructor(t,e,n){super(new Uint16Array(t),e,n)}}Ki.prototype.isFloat16BufferAttribute=!0;class Qi extends Vi{constructor(t,e,n){super(new Float32Array(t),e,n)}}class $i extends Vi{constructor(t,e,n){super(new Float64Array(t),e,n)}}let ta=0;const ea=new Yr,na=new xi,ra=new vr,ia=new br,aa=new br,sa=new vr;class oa extends Ln{constructor(){super(),Object.defineProperty(this,"id",{value:ta++}),this.uuid=On(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(rr(t)>65535?Zi:Yi)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new nr).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(t),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return ea.makeRotationFromQuaternion(t),this.applyMatrix4(ea),this}rotateX(t){return ea.makeRotationX(t),this.applyMatrix4(ea),this}rotateY(t){return ea.makeRotationY(t),this.applyMatrix4(ea),this}rotateZ(t){return ea.makeRotationZ(t),this.applyMatrix4(ea),this}translate(t,e,n){return ea.makeTranslation(t,e,n),this.applyMatrix4(ea),this}scale(t,e,n){return ea.makeScale(t,e,n),this.applyMatrix4(ea),this}lookAt(t){return na.lookAt(t),na.updateMatrix(),this.applyMatrix4(na.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ra).negate(),this.translate(ra.x,ra.y,ra.z),this}setFromPoints(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Qi(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new br);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new vr(-1/0,-1/0,-1/0),new vr(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,r=e.length;n<r;n++){const t=e[n];ia.setFromBufferAttribute(t),this.morphTargetsRelative?(sa.addVectors(this.boundingBox.min,ia.min),this.boundingBox.expandByPoint(sa),sa.addVectors(this.boundingBox.max,ia.max),this.boundingBox.expandByPoint(sa)):(this.boundingBox.expandByPoint(ia.min),this.boundingBox.expandByPoint(ia.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Ur);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new vr,1/0);if(t){const n=this.boundingSphere.center;if(ia.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const n=e[t];aa.setFromBufferAttribute(n),this.morphTargetsRelative?(sa.addVectors(ia.min,aa.min),ia.expandByPoint(sa),sa.addVectors(ia.max,aa.max),ia.expandByPoint(sa)):(ia.expandByPoint(aa.min),ia.expandByPoint(aa.max))}ia.getCenter(n);let r=0;for(let e=0,i=t.count;e<i;e++)sa.fromBufferAttribute(t,e),r=Math.max(r,n.distanceToSquared(sa));if(e)for(let i=0,a=e.length;i<a;i++){const a=e[i],s=this.morphTargetsRelative;for(let e=0,i=a.count;e<i;e++)sa.fromBufferAttribute(a,e),s&&(ra.fromBufferAttribute(t,e),sa.add(ra)),r=Math.max(r,n.distanceToSquared(sa))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,r=e.position.array,i=e.normal.array,a=e.uv.array,s=r.length/3;void 0===e.tangent&&this.setAttribute("tangent",new Vi(new Float32Array(4*s),4));const o=e.tangent.array,l=[],c=[];for(let T=0;T<s;T++)l[T]=new vr,c[T]=new vr;const u=new vr,h=new vr,d=new vr,p=new er,f=new er,m=new er,g=new vr,v=new vr;function y(t,e,n){u.fromArray(r,3*t),h.fromArray(r,3*e),d.fromArray(r,3*n),p.fromArray(a,2*t),f.fromArray(a,2*e),m.fromArray(a,2*n),h.sub(u),d.sub(u),f.sub(p),m.sub(p);const i=1/(f.x*m.y-m.x*f.y);isFinite(i)&&(g.copy(h).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(i),v.copy(d).multiplyScalar(f.x).addScaledVector(h,-m.x).multiplyScalar(i),l[t].add(g),l[e].add(g),l[n].add(g),c[t].add(v),c[e].add(v),c[n].add(v))}let x=this.groups;0===x.length&&(x=[{start:0,count:n.length}]);for(let T=0,E=x.length;T<E;++T){const t=x[T],e=t.start,r=t.count;for(let i=e,a=e+r;i<a;i+=3)y(n[i+0],n[i+1],n[i+2])}const b=new vr,_=new vr,w=new vr,M=new vr;function S(t){w.fromArray(i,3*t),M.copy(w);const e=l[t];b.copy(e),b.sub(w.multiplyScalar(w.dot(e))).normalize(),_.crossVectors(M,e);const n=_.dot(c[t]),r=n<0?-1:1;o[4*t]=b.x,o[4*t+1]=b.y,o[4*t+2]=b.z,o[4*t+3]=r}for(let T=0,E=x.length;T<E;++T){const t=x[T],e=t.start,r=t.count;for(let i=e,a=e+r;i<a;i+=3)S(n[i+0]),S(n[i+1]),S(n[i+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Vi(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const r=new vr,i=new vr,a=new vr,s=new vr,o=new vr,l=new vr,c=new vr,u=new vr;if(t)for(let h=0,d=t.count;h<d;h+=3){const d=t.getX(h+0),p=t.getX(h+1),f=t.getX(h+2);r.fromBufferAttribute(e,d),i.fromBufferAttribute(e,p),a.fromBufferAttribute(e,f),c.subVectors(a,i),u.subVectors(r,i),c.cross(u),s.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,f),s.add(c),o.add(c),l.add(c),n.setXYZ(d,s.x,s.y,s.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let t=0,h=e.count;t<h;t+=3)r.fromBufferAttribute(e,t+0),i.fromBufferAttribute(e,t+1),a.fromBufferAttribute(e,t+2),c.subVectors(a,i),u.subVectors(r,i),c.cross(u),n.setXYZ(t+0,c.x,c.y,c.z),n.setXYZ(t+1,c.x,c.y,c.z),n.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(void 0===t.attributes[r])continue;const i=n[r],a=i.array,s=t.attributes[r],o=s.array,l=s.itemSize*e,c=Math.min(o.length,a.length-l);for(let t=0,e=l;t<c;t++,e++)a[e]=o[t]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)sa.fromBufferAttribute(t,e),sa.normalize(),t.setXYZ(e,sa.x,sa.y,sa.z)}toNonIndexed(){function t(t,e){const n=t.array,r=t.itemSize,i=t.normalized,a=new n.constructor(e.length*r);let s=0,o=0;for(let l=0,c=e.length;l<c;l++){s=t.isInterleavedBufferAttribute?e[l]*t.data.stride+t.offset:e[l]*r;for(let t=0;t<r;t++)a[o++]=n[s++]}return new Vi(a,r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new oa,n=this.index.array,r=this.attributes;for(const s in r){const i=r[s],a=t(i,n);e.setAttribute(s,a)}const i=this.morphAttributes;for(const s in i){const r=[],a=i[s];for(let e=0,i=a.length;e<i;e++){const i=a[e],s=t(i,n);r.push(s)}e.morphAttributes[s]=r}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let s=0,o=a.length;s<o;s++){const t=a[s];e.addGroup(t.start,t.count,t.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const o in n){const e=n[o];t.data.attributes[o]=e.toJSON(t.data)}const r={};let i=!1;for(const o in this.morphAttributes){const e=this.morphAttributes[o],n=[];for(let r=0,i=e.length;r<i;r++){const i=e[r];n.push(i.toJSON(t.data))}n.length>0&&(r[o]=n,i=!0)}i&&(t.data.morphAttributes=r,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const r=t.attributes;for(const l in r){const t=r[l];this.setAttribute(l,t.clone(e))}const i=t.morphAttributes;for(const l in i){const t=[],n=i[l];for(let r=0,i=n.length;r<i;r++)t.push(n[r].clone(e));this.morphAttributes[l]=t}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let l=0,c=a.length;l<c;l++){const t=a[l];this.addGroup(t.start,t.count,t.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,void 0!==t.parameters&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}oa.prototype.isBufferGeometry=!0;const la=new Yr,ca=new Xr,ua=new Ur,ha=new vr,da=new vr,pa=new vr,fa=new vr,ma=new vr,ga=new vr,va=new vr,ya=new vr,xa=new vr,ba=new er,_a=new er,wa=new er,Ma=new vr,Sa=new vr;class Ta extends xi{constructor(t=new oa,e=new Hi){super(),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(t,e){const n=this.geometry,r=this.material,i=this.matrixWorld;if(void 0===r)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),ua.copy(n.boundingSphere),ua.applyMatrix4(i),!1===t.ray.intersectsSphere(ua))return;if(la.copy(i).invert(),ca.copy(t.ray).applyMatrix4(la),null!==n.boundingBox&&!1===ca.intersectsBox(n.boundingBox))return;let a;if(n.isBufferGeometry){const i=n.index,s=n.attributes.position,o=n.morphAttributes.position,l=n.morphTargetsRelative,c=n.attributes.uv,u=n.attributes.uv2,h=n.groups,d=n.drawRange;if(null!==i)if(Array.isArray(r))for(let n=0,p=h.length;n<p;n++){const p=h[n],f=r[p.materialIndex],m=Math.max(p.start,d.start),g=Math.min(i.count,Math.min(p.start+p.count,d.start+d.count));for(let n=m,r=g;n<r;n+=3){const r=i.getX(n),h=i.getX(n+1),d=i.getX(n+2);a=Aa(this,f,t,ca,s,o,l,c,u,r,h,d),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=p.materialIndex,e.push(a))}}else{const n=Math.max(0,d.start),h=Math.min(i.count,d.start+d.count);for(let d=n,p=h;d<p;d+=3){const n=i.getX(d),h=i.getX(d+1),p=i.getX(d+2);a=Aa(this,r,t,ca,s,o,l,c,u,n,h,p),a&&(a.faceIndex=Math.floor(d/3),e.push(a))}}else if(void 0!==s)if(Array.isArray(r))for(let n=0,p=h.length;n<p;n++){const i=h[n],p=r[i.materialIndex],f=Math.max(i.start,d.start),m=Math.min(s.count,Math.min(i.start+i.count,d.start+d.count));for(let n=f,r=m;n<r;n+=3){const r=n,h=n+1,d=n+2;a=Aa(this,p,t,ca,s,o,l,c,u,r,h,d),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=i.materialIndex,e.push(a))}}else{const n=Math.max(0,d.start),i=Math.min(s.count,d.start+d.count);for(let h=n,d=i;h<d;h+=3){const n=h,i=h+1,d=h+2;a=Aa(this,r,t,ca,s,o,l,c,u,n,i,d),a&&(a.faceIndex=Math.floor(h/3),e.push(a))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function Ea(t,e,n,r,i,a,s,o){let l;if(l=e.side===m?r.intersectTriangle(s,a,i,!0,o):r.intersectTriangle(i,a,s,e.side!==g,o),null===l)return null;Sa.copy(o),Sa.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(Sa);return c<n.near||c>n.far?null:{distance:c,point:Sa.clone(),object:t}}function Aa(t,e,n,r,i,a,s,o,l,c,u,h){ha.fromBufferAttribute(i,c),da.fromBufferAttribute(i,u),pa.fromBufferAttribute(i,h);const d=t.morphTargetInfluences;if(a&&d){va.set(0,0,0),ya.set(0,0,0),xa.set(0,0,0);for(let t=0,e=a.length;t<e;t++){const e=d[t],n=a[t];0!==e&&(fa.fromBufferAttribute(n,c),ma.fromBufferAttribute(n,u),ga.fromBufferAttribute(n,h),s?(va.addScaledVector(fa,e),ya.addScaledVector(ma,e),xa.addScaledVector(ga,e)):(va.addScaledVector(fa.sub(ha),e),ya.addScaledVector(ma.sub(da),e),xa.addScaledVector(ga.sub(pa),e)))}ha.add(va),da.add(ya),pa.add(xa)}t.isSkinnedMesh&&(t.boneTransform(c,ha),t.boneTransform(u,da),t.boneTransform(h,pa));const p=Ea(t,e,n,r,ha,da,pa,Ma);if(p){o&&(ba.fromBufferAttribute(o,c),_a.fromBufferAttribute(o,u),wa.fromBufferAttribute(o,h),p.uv=Ri.getUV(Ma,ha,da,pa,ba,_a,wa,new er)),l&&(ba.fromBufferAttribute(l,c),_a.fromBufferAttribute(l,u),wa.fromBufferAttribute(l,h),p.uv2=Ri.getUV(Ma,ha,da,pa,ba,_a,wa,new er));const t={a:c,b:u,c:h,normal:new vr,materialIndex:0};Ri.getNormal(ha,da,pa,t.normal),p.face=t}return p}Ta.prototype.isMesh=!0;class Ca extends oa{constructor(t=1,e=1,n=1,r=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:i,depthSegments:a};const s=this;r=Math.floor(r),i=Math.floor(i),a=Math.floor(a);const o=[],l=[],c=[],u=[];let h=0,d=0;function p(t,e,n,r,i,a,p,f,m,g,v){const y=a/m,x=p/g,b=a/2,_=p/2,w=f/2,M=m+1,S=g+1;let T=0,E=0;const A=new vr;for(let s=0;s<S;s++){const a=s*x-_;for(let o=0;o<M;o++){const h=o*y-b;A[t]=h*r,A[e]=a*i,A[n]=w,l.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=f>0?1:-1,c.push(A.x,A.y,A.z),u.push(o/m),u.push(1-s/g),T+=1}}for(let s=0;s<g;s++)for(let t=0;t<m;t++){const e=h+t+M*s,n=h+t+M*(s+1),r=h+(t+1)+M*(s+1),i=h+(t+1)+M*s;o.push(e,n,i),o.push(n,r,i),E+=6}s.addGroup(d,E,v),d+=E,h+=T}p("z","y","x",-1,-1,n,e,t,a,i,0),p("z","y","x",1,-1,n,e,-t,a,i,1),p("x","z","y",1,1,t,n,e,r,a,2),p("x","z","y",1,-1,t,n,-e,r,a,3),p("x","y","z",1,-1,t,e,n,r,i,4),p("x","y","z",-1,-1,t,e,-n,r,i,5),this.setIndex(o),this.setAttribute("position",new Qi(l,3)),this.setAttribute("normal",new Qi(c,3)),this.setAttribute("uv",new Qi(u,2))}static fromJSON(t){return new Ca(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function La(t){const e={};for(const n in t){e[n]={};for(const r in t[n]){const i=t[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[n][r]=i.clone():Array.isArray(i)?e[n][r]=i.slice():e[n][r]=i}}return e}function Ra(t){const e={};for(let n=0;n<t.length;n++){const r=La(t[n]);for(const t in r)e[t]=r[t]}return e}const Pa={clone:La,merge:Ra};var Da="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",Ia="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";class Oa extends Di{constructor(t){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Da,this.fragmentShader=Ia,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=La(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const r in this.uniforms){const n=this.uniforms[r],i=n.value;i&&i.isTexture?e.uniforms[r]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[r]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[r]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[r]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[r]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[r]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[r]={type:"m4",value:i.toArray()}:e.uniforms[r]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const r in this.extensions)!0===this.extensions[r]&&(n[r]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}Oa.prototype.isShaderMaterial=!0;class Na extends xi{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Yr,this.projectionMatrix=new Yr,this.projectionMatrixInverse=new Yr}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}Na.prototype.isCamera=!0;class za extends Na{constructor(t=50,e=1,n=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*In*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*Dn*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*In*Math.atan(Math.tan(.5*Dn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,r,i,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*Dn*this.fov)/this.zoom,n=2*e,r=this.aspect*n,i=-.5*r;const a=this.view;if(null!==this.view&&this.view.enabled){const t=a.fullWidth,s=a.fullHeight;i+=a.offsetX*r/t,e-=a.offsetY*n/s,r*=a.width/t,n*=a.height/s}const s=this.filmOffset;0!==s&&(i+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}za.prototype.isPerspectiveCamera=!0;const Ba=90,Fa=1;class Ua extends xi{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const r=new za(Ba,Fa,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new vr(1,0,0)),this.add(r);const i=new za(Ba,Fa,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new vr(-1,0,0)),this.add(i);const a=new za(Ba,Fa,t,e);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new vr(0,1,0)),this.add(a);const s=new za(Ba,Fa,t,e);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new vr(0,-1,0)),this.add(s);const o=new za(Ba,Fa,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new vr(0,0,1)),this.add(o);const l=new za(Ba,Fa,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new vr(0,0,-1)),this.add(l)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[r,i,a,s,o,l]=this.children,c=t.xr.enabled,u=t.getRenderTarget();t.xr.enabled=!1;const h=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,r),t.setRenderTarget(n,1),t.render(e,i),t.setRenderTarget(n,2),t.render(e,a),t.setRenderTarget(n,3),t.render(e,s),t.setRenderTarget(n,4),t.render(e,o),n.texture.generateMipmaps=h,t.setRenderTarget(n,5),t.render(e,l),t.setRenderTarget(u),t.xr.enabled=c}}class Ha extends ur{constructor(t,e,n,r,i,a,s,o,l,c){t=void 0!==t?t:[],e=void 0!==e?e:at,super(t,e,n,r,i,a,s,o,l,c),this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}Ha.prototype.isCubeTexture=!0;class ka extends pr{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),super(t,t,e),e=e||{},this.texture=new Ha(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:xt,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=Ft,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},r=new Ca(5,5,5),i=new Oa({name:"CubemapFromEquirect",uniforms:La(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:m,blending:x});i.uniforms.tEquirect.value=e;const a=new Ta(r,i),s=e.minFilter;e.minFilter===wt&&(e.minFilter=xt);const o=new Ua(1,10,this);return o.update(t,a),e.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(t,e,n,r){const i=t.getRenderTarget();for(let a=0;a<6;a++)t.setRenderTarget(this,a),t.clear(e,n,r);t.setRenderTarget(i)}}ka.prototype.isWebGLCubeRenderTarget=!0;const Ga=new vr,Va=new vr,Wa=new nr;class ja{constructor(t=new vr(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const r=Ga.subVectors(n,e).cross(Va.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(Ga),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const i=-(t.start.dot(this.normal)+this.constant)/r;return i<0||i>1?null:e.copy(n).multiplyScalar(i).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Wa.getNormalMatrix(t),r=this.coplanarPoint(Ga).applyMatrix4(t),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}ja.prototype.isPlane=!0;const qa=new Ur,Xa=new vr;class Ya{constructor(t=new ja,e=new ja,n=new ja,r=new ja,i=new ja,a=new ja){this.planes=[t,e,n,r,i,a]}set(t,e,n,r,i,a){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(r),s[4].copy(i),s[5].copy(a),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,r=n[0],i=n[1],a=n[2],s=n[3],o=n[4],l=n[5],c=n[6],u=n[7],h=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],v=n[14],y=n[15];return e[0].setComponents(s-r,u-o,f-h,y-m).normalize(),e[1].setComponents(s+r,u+o,f+h,y+m).normalize(),e[2].setComponents(s+i,u+l,f+d,y+g).normalize(),e[3].setComponents(s-i,u-l,f-d,y-g).normalize(),e[4].setComponents(s-a,u-c,f-p,y-v).normalize(),e[5].setComponents(s+a,u+c,f+p,y+v).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),qa.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(qa)}intersectsSprite(t){return qa.center.set(0,0,0),qa.radius=.7071067811865476,qa.applyMatrix4(t.matrixWorld),this.intersectsSphere(qa)}intersectsSphere(t){const e=this.planes,n=t.center,r=-t.radius;for(let i=0;i<6;i++){const t=e[i].distanceToPoint(n);if(t<r)return!1}return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const r=e[n];if(Xa.x=r.normal.x>0?t.max.x:t.min.x,Xa.y=r.normal.y>0?t.max.y:t.min.y,Xa.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(Xa)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Ja(){let t=null,e=!1,n=null,r=null;function i(e,a){n(e,a),r=t.requestAnimationFrame(i)}return{start:function(){!0!==e&&null!==n&&(r=t.requestAnimationFrame(i),e=!0)},stop:function(){t.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function Za(t,e){const n=e.isWebGL2,r=new WeakMap;function i(e,r){const i=e.array,a=e.usage,s=t.createBuffer();t.bindBuffer(r,s),t.bufferData(r,i,a),e.onUploadCallback();let o=5126;return i instanceof Float32Array?o=5126:i instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):i instanceof Uint16Array?e.isFloat16BufferAttribute?n?o=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):o=5123:i instanceof Int16Array?o=5122:i instanceof Uint32Array?o=5125:i instanceof Int32Array?o=5124:i instanceof Int8Array?o=5120:(i instanceof Uint8Array||i instanceof Uint8ClampedArray)&&(o=5121),{buffer:s,type:o,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version}}function a(e,r,i){const a=r.array,s=r.updateRange;t.bindBuffer(i,e),-1===s.count?t.bufferSubData(i,0,a):(n?t.bufferSubData(i,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):t.bufferSubData(i,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1)}function s(t){return t.isInterleavedBufferAttribute&&(t=t.data),r.get(t)}function o(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=r.get(e);n&&(t.deleteBuffer(n.buffer),r.delete(e))}function l(t,e){if(t.isGLBufferAttribute){const e=r.get(t);return void((!e||e.version<t.version)&&r.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const n=r.get(t);void 0===n?r.set(t,i(t,e)):n.version<t.version&&(a(n.buffer,t,e),n.version=t.version)}return{get:s,remove:o,update:l}}class Ka extends oa{constructor(t=1,e=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r};const i=t/2,a=e/2,s=Math.floor(n),o=Math.floor(r),l=s+1,c=o+1,u=t/s,h=e/o,d=[],p=[],f=[],m=[];for(let g=0;g<c;g++){const t=g*h-a;for(let e=0;e<l;e++){const n=e*u-i;p.push(n,-t,0),f.push(0,0,1),m.push(e/s),m.push(1-g/o)}}for(let g=0;g<o;g++)for(let t=0;t<s;t++){const e=t+l*g,n=t+l*(g+1),r=t+1+l*(g+1),i=t+1+l*g;d.push(e,n,i),d.push(n,r,i)}this.setIndex(d),this.setAttribute("position",new Qi(p,3)),this.setAttribute("normal",new Qi(f,3)),this.setAttribute("uv",new Qi(m,2))}static fromJSON(t){return new Ka(t.width,t.height,t.widthSegments,t.heightSegments)}}var Qa="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",$a="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",ts="#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",es="#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",ns="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",rs="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",is="vec3 transformed = vec3( position );",as="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",ss="vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",os="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",ls="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",cs="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",us="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",hs="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",ds="#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",ps="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",fs="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",ms="#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",gs="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",vs="#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\treturn texture2D( envMap, uv ).rgb;\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",ys="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",xs="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",bs="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",_s="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",ws="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",Ms="gl_FragColor = linearToOutputTexel( gl_FragColor );",Ss="vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",Ts="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",Es="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",As="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",Cs="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",Ls="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",Rs="#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",Ps="#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",Ds="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",Is="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",Os="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",Ns="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tlightMapIrradiance *= PI;\n\t#endif\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",zs="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",Bs="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",Fs="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",Us="#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec;\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\t\treflectVec = reflect( - viewDir, normal );\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\t#else\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\t\t\t#endif\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",Hs="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",ks="varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",Gs="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",Vs="varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",Ws="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",js="struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",qs="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",Xs="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",Ys="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",Js="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",Zs="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",Ks="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",Qs="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",$s="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",to="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",eo="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",no="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",ro="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",io="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",ao="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",so="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform vec2 morphTargetsTextureSize;\n\t\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\n\t\t\tfloat texelIndex = float( vertexIndex * stride + offset );\n\t\t\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\n\t\t\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n\t\t\treturn texture( morphTargetsTexture, morphUV ).xyz;\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",oo="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\t#ifndef USE_MORPHNORMALS\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\n\t\t\t#else\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\n\t\t\t#endif\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",lo="float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",co="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",uo="#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",ho="#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",po="#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",fo="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",mo="#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",go="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",vo="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",yo="#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",xo="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",bo="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",_o="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",wo="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",Mo="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",So="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",To="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",Eo="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",Ao="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",Co="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",Lo="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",Ro="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",Po="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",Do="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",Io="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",Oo="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",No="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",zo="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",Bo="#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",Fo="#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",Uo="#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( float roughness, float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n\t\tvec3 attenuationColor, float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",Ho="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",ko="#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",Go="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",Vo="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",Wo="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",jo="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",qo="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif";const Xo="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",Yo="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",Jo="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",Zo="#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",Ko="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",Qo="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",$o="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",tl="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",el="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",nl="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",rl="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",il="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",al="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",sl="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",ol="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",ll="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",cl="#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",ul="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",hl="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",dl="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",pl="#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",fl="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",ml="#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",gl="#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",vl="#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",yl="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",xl="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",bl="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",_l="#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",wl="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",Ml="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",Sl="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",Tl={alphamap_fragment:Qa,alphamap_pars_fragment:$a,alphatest_fragment:ts,alphatest_pars_fragment:es,aomap_fragment:ns,aomap_pars_fragment:rs,begin_vertex:is,beginnormal_vertex:as,bsdfs:ss,bumpmap_pars_fragment:os,clipping_planes_fragment:ls,clipping_planes_pars_fragment:cs,clipping_planes_pars_vertex:us,clipping_planes_vertex:hs,color_fragment:ds,color_pars_fragment:ps,color_pars_vertex:fs,color_vertex:ms,common:gs,cube_uv_reflection_fragment:vs,defaultnormal_vertex:ys,displacementmap_pars_vertex:xs,displacementmap_vertex:bs,emissivemap_fragment:_s,emissivemap_pars_fragment:ws,encodings_fragment:Ms,encodings_pars_fragment:Ss,envmap_fragment:Ts,envmap_common_pars_fragment:Es,envmap_pars_fragment:As,envmap_pars_vertex:Cs,envmap_physical_pars_fragment:Us,envmap_vertex:Ls,fog_vertex:Rs,fog_pars_vertex:Ps,fog_fragment:Ds,fog_pars_fragment:Is,gradientmap_pars_fragment:Os,lightmap_fragment:Ns,lightmap_pars_fragment:zs,lights_lambert_vertex:Bs,lights_pars_begin:Fs,lights_toon_fragment:Hs,lights_toon_pars_fragment:ks,lights_phong_fragment:Gs,lights_phong_pars_fragment:Vs,lights_physical_fragment:Ws,lights_physical_pars_fragment:js,lights_fragment_begin:qs,lights_fragment_maps:Xs,lights_fragment_end:Ys,logdepthbuf_fragment:Js,logdepthbuf_pars_fragment:Zs,logdepthbuf_pars_vertex:Ks,logdepthbuf_vertex:Qs,map_fragment:$s,map_pars_fragment:to,map_particle_fragment:eo,map_particle_pars_fragment:no,metalnessmap_fragment:ro,metalnessmap_pars_fragment:io,morphnormal_vertex:ao,morphtarget_pars_vertex:so,morphtarget_vertex:oo,normal_fragment_begin:lo,normal_fragment_maps:co,normal_pars_fragment:uo,normal_pars_vertex:ho,normal_vertex:po,normalmap_pars_fragment:fo,clearcoat_normal_fragment_begin:mo,clearcoat_normal_fragment_maps:go,clearcoat_pars_fragment:vo,output_fragment:yo,packing:xo,premultiplied_alpha_fragment:bo,project_vertex:_o,dithering_fragment:wo,dithering_pars_fragment:Mo,roughnessmap_fragment:So,roughnessmap_pars_fragment:To,shadowmap_pars_fragment:Eo,shadowmap_pars_vertex:Ao,shadowmap_vertex:Co,shadowmask_pars_fragment:Lo,skinbase_vertex:Ro,skinning_pars_vertex:Po,skinning_vertex:Do,skinnormal_vertex:Io,specularmap_fragment:Oo,specularmap_pars_fragment:No,tonemapping_fragment:zo,tonemapping_pars_fragment:Bo,transmission_fragment:Fo,transmission_pars_fragment:Uo,uv_pars_fragment:Ho,uv_pars_vertex:ko,uv_vertex:Go,uv2_pars_fragment:Vo,uv2_pars_vertex:Wo,uv2_vertex:jo,worldpos_vertex:qo,background_vert:Xo,background_frag:Yo,cube_vert:Jo,cube_frag:Zo,depth_vert:Ko,depth_frag:Qo,distanceRGBA_vert:$o,distanceRGBA_frag:tl,equirect_vert:el,equirect_frag:nl,linedashed_vert:rl,linedashed_frag:il,meshbasic_vert:al,meshbasic_frag:sl,meshlambert_vert:ol,meshlambert_frag:ll,meshmatcap_vert:cl,meshmatcap_frag:ul,meshnormal_vert:hl,meshnormal_frag:dl,meshphong_vert:pl,meshphong_frag:fl,meshphysical_vert:ml,meshphysical_frag:gl,meshtoon_vert:vl,meshtoon_frag:yl,points_vert:xl,points_frag:bl,shadow_vert:_l,shadow_frag:wl,sprite_vert:Ml,sprite_frag:Sl},El={common:{diffuse:{value:new Ui(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new nr},uv2Transform:{value:new nr},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new er(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ui(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ui(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new nr}},sprite:{diffuse:{value:new Ui(16777215)},opacity:{value:1},center:{value:new er(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new nr}}},Al={basic:{uniforms:Ra([El.common,El.specularmap,El.envmap,El.aomap,El.lightmap,El.fog]),vertexShader:Tl.meshbasic_vert,fragmentShader:Tl.meshbasic_frag},lambert:{uniforms:Ra([El.common,El.specularmap,El.envmap,El.aomap,El.lightmap,El.emissivemap,El.fog,El.lights,{emissive:{value:new Ui(0)}}]),vertexShader:Tl.meshlambert_vert,fragmentShader:Tl.meshlambert_frag},phong:{uniforms:Ra([El.common,El.specularmap,El.envmap,El.aomap,El.lightmap,El.emissivemap,El.bumpmap,El.normalmap,El.displacementmap,El.fog,El.lights,{emissive:{value:new Ui(0)},specular:{value:new Ui(1118481)},shininess:{value:30}}]),vertexShader:Tl.meshphong_vert,fragmentShader:Tl.meshphong_frag},standard:{uniforms:Ra([El.common,El.envmap,El.aomap,El.lightmap,El.emissivemap,El.bumpmap,El.normalmap,El.displacementmap,El.roughnessmap,El.metalnessmap,El.fog,El.lights,{emissive:{value:new Ui(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Tl.meshphysical_vert,fragmentShader:Tl.meshphysical_frag},toon:{uniforms:Ra([El.common,El.aomap,El.lightmap,El.emissivemap,El.bumpmap,El.normalmap,El.displacementmap,El.gradientmap,El.fog,El.lights,{emissive:{value:new Ui(0)}}]),vertexShader:Tl.meshtoon_vert,fragmentShader:Tl.meshtoon_frag},matcap:{uniforms:Ra([El.common,El.bumpmap,El.normalmap,El.displacementmap,El.fog,{matcap:{value:null}}]),vertexShader:Tl.meshmatcap_vert,fragmentShader:Tl.meshmatcap_frag},points:{uniforms:Ra([El.points,El.fog]),vertexShader:Tl.points_vert,fragmentShader:Tl.points_frag},dashed:{uniforms:Ra([El.common,El.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Tl.linedashed_vert,fragmentShader:Tl.linedashed_frag},depth:{uniforms:Ra([El.common,El.displacementmap]),vertexShader:Tl.depth_vert,fragmentShader:Tl.depth_frag},normal:{uniforms:Ra([El.common,El.bumpmap,El.normalmap,El.displacementmap,{opacity:{value:1}}]),vertexShader:Tl.meshnormal_vert,fragmentShader:Tl.meshnormal_frag},sprite:{uniforms:Ra([El.sprite,El.fog]),vertexShader:Tl.sprite_vert,fragmentShader:Tl.sprite_frag},background:{uniforms:{uvTransform:{value:new nr},t2D:{value:null}},vertexShader:Tl.background_vert,fragmentShader:Tl.background_frag},cube:{uniforms:Ra([El.envmap,{opacity:{value:1}}]),vertexShader:Tl.cube_vert,fragmentShader:Tl.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Tl.equirect_vert,fragmentShader:Tl.equirect_frag},distanceRGBA:{uniforms:Ra([El.common,El.displacementmap,{referencePosition:{value:new vr},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Tl.distanceRGBA_vert,fragmentShader:Tl.distanceRGBA_frag},shadow:{uniforms:Ra([El.lights,El.fog,{color:{value:new Ui(0)},opacity:{value:1}}]),vertexShader:Tl.shadow_vert,fragmentShader:Tl.shadow_frag}};function Cl(t,e,n,r,i){const a=new Ui(0);let s,o,l=0,c=null,u=0,h=null;function d(n,i){let d=!1,g=!0===i.isScene?i.background:null;g&&g.isTexture&&(g=e.get(g));const v=t.xr,y=v.getSession&&v.getSession();y&&"additive"===y.environmentBlendMode&&(g=null),null===g?p(a,l):g&&g.isColor&&(p(g,1),d=!0),(t.autoClear||d)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),g&&(g.isCubeTexture||g.mapping===ct)?(void 0===o&&(o=new Ta(new Ca(1,1,1),new Oa({name:"BackgroundCubeMaterial",uniforms:La(Al.cube.uniforms),vertexShader:Al.cube.vertexShader,fragmentShader:Al.cube.fragmentShader,side:m,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(o)),o.material.uniforms.envMap.value=g,o.material.uniforms.flipEnvMap.value=g.isCubeTexture&&!1===g.isRenderTargetTexture?-1:1,c===g&&u===g.version&&h===t.toneMapping||(o.material.needsUpdate=!0,c=g,u=g.version,h=t.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null)):g&&g.isTexture&&(void 0===s&&(s=new Ta(new Ka(2,2),new Oa({name:"BackgroundMaterial",uniforms:La(Al.background.uniforms),vertexShader:Al.background.vertexShader,fragmentShader:Al.background.fragmentShader,side:f,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(s)),s.material.uniforms.t2D.value=g,!0===g.matrixAutoUpdate&&g.updateMatrix(),s.material.uniforms.uvTransform.value.copy(g.matrix),c===g&&u===g.version&&h===t.toneMapping||(s.material.needsUpdate=!0,c=g,u=g.version,h=t.toneMapping),n.unshift(s,s.geometry,s.material,0,0,null))}function p(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,i)}return{getClearColor:function(){return a},setClearColor:function(t,e=1){a.set(t),l=e,p(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(t){l=t,p(a,l)},render:d}}function Ll(t,e,n,r){const i=t.getParameter(34921),a=r.isWebGL2?null:e.get("OES_vertex_array_object"),s=r.isWebGL2||null!==a,o={},l=m(null);let c=l;function u(e,r,i,a,o){let l=!1;if(s){const t=f(a,i,r);c!==t&&(c=t,d(c.object)),l=g(a,o),l&&v(a,o)}else{const t=!0===r.wireframe;c.geometry===a.id&&c.program===i.id&&c.wireframe===t||(c.geometry=a.id,c.program=i.id,c.wireframe=t,l=!0)}!0===e.isInstancedMesh&&(l=!0),null!==o&&n.update(o,34963),l&&(M(e,r,i,a),null!==o&&t.bindBuffer(34963,n.get(o).buffer))}function h(){return r.isWebGL2?t.createVertexArray():a.createVertexArrayOES()}function d(e){return r.isWebGL2?t.bindVertexArray(e):a.bindVertexArrayOES(e)}function p(e){return r.isWebGL2?t.deleteVertexArray(e):a.deleteVertexArrayOES(e)}function f(t,e,n){const r=!0===n.wireframe;let i=o[t.id];void 0===i&&(i={},o[t.id]=i);let a=i[e.id];void 0===a&&(a={},i[e.id]=a);let s=a[r];return void 0===s&&(s=m(h()),a[r]=s),s}function m(t){const e=[],n=[],r=[];for(let a=0;a<i;a++)e[a]=0,n[a]=0,r[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:r,object:t,attributes:{},index:null}}function g(t,e){const n=c.attributes,r=t.attributes;let i=0;for(const a in r){const t=n[a],e=r[a];if(void 0===t)return!0;if(t.attribute!==e)return!0;if(t.data!==e.data)return!0;i++}return c.attributesNum!==i||c.index!==e}function v(t,e){const n={},r=t.attributes;let i=0;for(const a in r){const t=r[a],e={};e.attribute=t,t.data&&(e.data=t.data),n[a]=e,i++}c.attributes=n,c.attributesNum=i,c.index=e}function y(){const t=c.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function x(t){b(t,0)}function b(n,i){const a=c.newAttributes,s=c.enabledAttributes,o=c.attributeDivisors;if(a[n]=1,0===s[n]&&(t.enableVertexAttribArray(n),s[n]=1),o[n]!==i){const a=r.isWebGL2?t:e.get("ANGLE_instanced_arrays");a[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),o[n]=i}}function _(){const e=c.newAttributes,n=c.enabledAttributes;for(let r=0,i=n.length;r<i;r++)n[r]!==e[r]&&(t.disableVertexAttribArray(r),n[r]=0)}function w(e,n,i,a,s,o){!0!==r.isWebGL2||5124!==i&&5125!==i?t.vertexAttribPointer(e,n,i,a,s,o):t.vertexAttribIPointer(e,n,i,s,o)}function M(i,a,s,o){if(!1===r.isWebGL2&&(i.isInstancedMesh||o.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;y();const l=o.attributes,c=s.getAttributes(),u=a.defaultAttributeValues;for(const e in c){const r=c[e];if(r.location>=0){let a=l[e];if(void 0===a&&("instanceMatrix"===e&&i.instanceMatrix&&(a=i.instanceMatrix),"instanceColor"===e&&i.instanceColor&&(a=i.instanceColor)),void 0!==a){const e=a.normalized,s=a.itemSize,l=n.get(a);if(void 0===l)continue;const c=l.buffer,u=l.type,h=l.bytesPerElement;if(a.isInterleavedBufferAttribute){const n=a.data,l=n.stride,d=a.offset;if(n&&n.isInstancedInterleavedBuffer){for(let t=0;t<r.locationSize;t++)b(r.location+t,n.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let t=0;t<r.locationSize;t++)x(r.location+t);t.bindBuffer(34962,c);for(let t=0;t<r.locationSize;t++)w(r.location+t,s/r.locationSize,u,e,l*h,(d+s/r.locationSize*t)*h)}else{if(a.isInstancedBufferAttribute){for(let t=0;t<r.locationSize;t++)b(r.location+t,a.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=a.meshPerAttribute*a.count)}else for(let t=0;t<r.locationSize;t++)x(r.location+t);t.bindBuffer(34962,c);for(let t=0;t<r.locationSize;t++)w(r.location+t,s/r.locationSize,u,e,s*h,s/r.locationSize*t*h)}}else if(void 0!==u){const n=u[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(r.location,n);break;case 3:t.vertexAttrib3fv(r.location,n);break;case 4:t.vertexAttrib4fv(r.location,n);break;default:t.vertexAttrib1fv(r.location,n)}}}}_()}function S(){A();for(const t in o){const e=o[t];for(const t in e){const n=e[t];for(const t in n)p(n[t].object),delete n[t];delete e[t]}delete o[t]}}function T(t){if(void 0===o[t.id])return;const e=o[t.id];for(const n in e){const t=e[n];for(const e in t)p(t[e].object),delete t[e];delete e[n]}delete o[t.id]}function E(t){for(const e in o){const n=o[e];if(void 0===n[t.id])continue;const r=n[t.id];for(const t in r)p(r[t].object),delete r[t];delete n[t.id]}}function A(){C(),c!==l&&(c=l,d(c.object))}function C(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:A,resetDefaultState:C,dispose:S,releaseStatesOfGeometry:T,releaseStatesOfProgram:E,initAttributes:y,enableAttribute:x,disableUnusedAttributes:_}}function Rl(t,e,n,r){const i=r.isWebGL2;let a;function s(t){a=t}function o(e,r){t.drawArrays(a,e,r),n.update(r,a,1)}function l(r,s,o){if(0===o)return;let l,c;if(i)l=t,c="drawArraysInstanced";else if(l=e.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[c](a,r,s,o),n.update(s,a,o)}this.setMode=s,this.render=o,this.renderInstances=l}function Pl(t,e,n){let r;function i(){if(void 0!==r)return r;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");r=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function a(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s="undefined"!==typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!==typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let o=void 0!==n.precision?n.precision:"highp";const l=a(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=s||e.has("WEBGL_draw_buffers"),u=!0===n.logarithmicDepthBuffer,h=t.getParameter(34930),d=t.getParameter(35660),p=t.getParameter(3379),f=t.getParameter(34076),m=t.getParameter(34921),g=t.getParameter(36347),v=t.getParameter(36348),y=t.getParameter(36349),x=d>0,b=s||e.has("OES_texture_float"),_=x&&b,w=s?t.getParameter(36183):0;return{isWebGL2:s,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:a,precision:o,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:d,maxTextureSize:p,maxCubemapSize:f,maxAttributes:m,maxVertexUniforms:g,maxVaryings:v,maxFragmentUniforms:y,vertexTextures:x,floatFragmentTextures:b,floatVertexTextures:_,maxSamples:w}}function Dl(t){const e=this;let n=null,r=0,i=!1,a=!1;const s=new ja,o=new nr,l={value:null,needsUpdate:!1};function c(){l.value!==n&&(l.value=n,l.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function u(t,n,r,i){const a=null!==t?t.length:0;let c=null;if(0!==a){if(c=l.value,!0!==i||null===c){const e=r+4*a,i=n.matrixWorldInverse;o.getNormalMatrix(i),(null===c||c.length<e)&&(c=new Float32Array(e));for(let n=0,l=r;n!==a;++n,l+=4)s.copy(t[n]).applyMatrix4(i,o),s.normal.toArray(c,l),c[l+3]=s.constant}l.value=c,l.needsUpdate=!0}return e.numPlanes=a,e.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,a){const s=0!==t.length||e||0!==r||i;return i=e,n=u(t,a,0),r=t.length,s},this.beginShadows=function(){a=!0,u(null)},this.endShadows=function(){a=!1,c()},this.setState=function(e,s,o){const h=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,f=t.get(e);if(!i||null===h||0===h.length||a&&!p)a?u(null):c();else{const t=a?0:r,e=4*t;let i=f.clippingState||null;l.value=i,i=u(h,s,e,o);for(let r=0;r!==e;++r)i[r]=n[r];f.clippingState=i,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Il(t){let e=new WeakMap;function n(t,e){return e===ot?t.mapping=at:e===lt&&(t.mapping=st),t}function r(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){const a=r.mapping;if(a===ot||a===lt){if(e.has(r)){const t=e.get(r).texture;return n(t,r.mapping)}{const a=r.image;if(a&&a.height>0){const s=t.getRenderTarget(),o=new ka(a.height/2);return o.fromEquirectangularTexture(t,r),e.set(r,o),t.setRenderTarget(s),r.addEventListener("dispose",i),n(o.texture,r.mapping)}return null}}}return r}function i(t){const n=t.target;n.removeEventListener("dispose",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}function a(){e=new WeakMap}return{get:r,dispose:a}}Al.physical={uniforms:Ra([Al.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new er(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new Ui(0)},sheenColorMap:{value:null},sheenRoughness:{value:0},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new er},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Ui(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularColor:{value:new Ui(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Tl.meshphysical_vert,fragmentShader:Tl.meshphysical_frag};class Ol extends Na{constructor(t=-1,e=1,n=1,r=-1,i=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=r,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,r,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-t,a=n+t,s=r+e,o=r-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=t*this.view.offsetX,a=i+t*this.view.width,s-=e*this.view.offsetY,o=s-e*this.view.height}this.projectionMatrix.makeOrthographic(i,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}Ol.prototype.isOrthographicCamera=!0;class Nl extends Oa{constructor(t){super(t),this.type="RawShaderMaterial"}}Nl.prototype.isRawShaderMaterial=!0;const zl=4,Bl=8,Fl=Math.pow(2,Bl),Ul=[.125,.215,.35,.446,.526,.582],Hl=Bl-zl+1+Ul.length,kl=20,Gl={[Je]:0,[Ze]:1},Vl=new Ol,{_lodPlanes:Wl,_sizeLods:jl,_sigmas:ql}=$l(),Xl=new Ui;let Yl=null;const Jl=(1+Math.sqrt(5))/2,Zl=1/Jl,Kl=[new vr(1,1,1),new vr(-1,1,1),new vr(1,1,-1),new vr(-1,1,-1),new vr(0,Jl,Zl),new vr(0,Jl,-Zl),new vr(Zl,0,Jl),new vr(-Zl,0,Jl),new vr(Jl,Zl,0),new vr(-Jl,Zl,0)];class Ql{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=nc(kl),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,r=100){Yl=this._renderer.getRenderTarget();const i=this._allocateTargets();return this._sceneToCubeUV(t,n,r,i),e>0&&this._blur(i,0,0,e),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(t){return this._fromTexture(t)}fromCubemap(t){return this._fromTexture(t)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=ic(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=rc(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let t=0;t<Wl.length;t++)Wl[t].dispose()}_cleanup(t){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Yl),t.scissorTest=!1,ec(t,0,0,t.width,t.height)}_fromTexture(t){Yl=this._renderer.getRenderTarget();const e=this._allocateTargets(t);return this._textureToCubeUV(t,e),this._applyPMREM(e),this._cleanup(e),e}_allocateTargets(t){const e={magFilter:xt,minFilter:xt,generateMipmaps:!1,type:Pt,format:Ft,encoding:Je,depthBuffer:!1},n=tc(e);return n.depthBuffer=!t,this._pingPongRenderTarget=tc(e),n}_compileMaterial(t){const e=new Ta(Wl[0],t);this._renderer.compile(e,Vl)}_sceneToCubeUV(t,e,n,r){const i=90,a=1,s=new za(i,a,e,n),o=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],c=this._renderer,u=c.autoClear,h=c.toneMapping;c.getClearColor(Xl),c.toneMapping=Q,c.autoClear=!1;const d=new Hi({name:"PMREM.Background",side:m,depthWrite:!1,depthTest:!1}),p=new Ta(new Ca,d);let f=!1;const g=t.background;g?g.isColor&&(d.color.copy(g),t.background=null,f=!0):(d.color.copy(Xl),f=!0);for(let m=0;m<6;m++){const e=m%3;0==e?(s.up.set(0,o[m],0),s.lookAt(l[m],0,0)):1==e?(s.up.set(0,0,o[m]),s.lookAt(0,l[m],0)):(s.up.set(0,o[m],0),s.lookAt(0,0,l[m])),ec(r,e*Fl,m>2?Fl:0,Fl,Fl),c.setRenderTarget(r),f&&c.render(p,s),c.render(t,s)}p.geometry.dispose(),p.material.dispose(),c.toneMapping=h,c.autoClear=u,t.background=g}_setEncoding(t,e){!0===this._renderer.capabilities.isWebGL2&&e.format===Ft&&e.type===St&&e.encoding===Ze?t.value=Gl[Je]:t.value=Gl[e.encoding]}_textureToCubeUV(t,e){const n=this._renderer,r=t.mapping===at||t.mapping===st;r?null==this._cubemapShader&&(this._cubemapShader=ic()):null==this._equirectShader&&(this._equirectShader=rc());const i=r?this._cubemapShader:this._equirectShader,a=new Ta(Wl[0],i),s=i.uniforms;s["envMap"].value=t,r||s["texelSize"].value.set(1/t.image.width,1/t.image.height),this._setEncoding(s["inputEncoding"],t),ec(e,0,0,3*Fl,2*Fl),n.setRenderTarget(e),n.render(a,Vl)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let r=1;r<Hl;r++){const e=Math.sqrt(ql[r]*ql[r]-ql[r-1]*ql[r-1]),n=Kl[(r-1)%Kl.length];this._blur(t,r-1,r,e,n)}e.autoClear=n}_blur(t,e,n,r,i){const a=this._pingPongRenderTarget;this._halfBlur(t,a,e,n,r,"latitudinal",i),this._halfBlur(a,t,n,n,r,"longitudinal",i)}_halfBlur(t,e,n,r,i,a,s){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const c=3,u=new Ta(Wl[r],l),h=l.uniforms,d=jl[n]-1,p=isFinite(i)?Math.PI/(2*d):2*Math.PI/(2*kl-1),f=i/p,m=isFinite(i)?1+Math.floor(c*f):kl;m>kl&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${kl}`);const g=[];let v=0;for(let _=0;_<kl;++_){const t=_/f,e=Math.exp(-t*t/2);g.push(e),0==_?v+=e:_<m&&(v+=2*e)}for(let _=0;_<g.length;_++)g[_]=g[_]/v;h["envMap"].value=t.texture,h["samples"].value=m,h["weights"].value=g,h["latitudinal"].value="latitudinal"===a,s&&(h["poleAxis"].value=s),h["dTheta"].value=p,h["mipInt"].value=Bl-n;const y=jl[r],x=3*Math.max(0,Fl-2*y),b=(0===r?0:2*Fl)+2*y*(r>Bl-zl?r-Bl+zl:0);ec(e,x,b,3*y,2*y),o.setRenderTarget(e),o.render(u,Vl)}}function $l(){const t=[],e=[],n=[];let r=Bl;for(let i=0;i<Hl;i++){const a=Math.pow(2,r);e.push(a);let s=1/a;i>Bl-zl?s=Ul[i-Bl+zl-1]:0==i&&(s=0),n.push(s);const o=1/(a-1),l=-o/2,c=1+o/2,u=[l,l,c,l,c,c,l,l,c,c,l,c],h=6,d=6,p=3,f=2,m=1,g=new Float32Array(p*d*h),v=new Float32Array(f*d*h),y=new Float32Array(m*d*h);for(let t=0;t<h;t++){const e=t%3*2/3-1,n=t>2?0:-1,r=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];g.set(r,p*d*t),v.set(u,f*d*t);const i=[t,t,t,t,t,t];y.set(i,m*d*t)}const x=new oa;x.setAttribute("position",new Vi(g,p)),x.setAttribute("uv",new Vi(v,f)),x.setAttribute("faceIndex",new Vi(y,m)),t.push(x),r>zl&&r--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function tc(t){const e=new pr(3*Fl,3*Fl,t);return e.texture.mapping=ct,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function ec(t,e,n,r,i){t.viewport.set(e,n,r,i),t.scissor.set(e,n,r,i)}function nc(t){const e=new Float32Array(t),n=new vr(0,1,0),r=new Nl({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:ac(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${sc()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,blending:x,depthTest:!1,depthWrite:!1});return r}function rc(){const t=new er(1,1),e=new Nl({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:t},inputEncoding:{value:Gl[Je]}},vertexShader:ac(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${sc()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t}\n\t\t`,blending:x,depthTest:!1,depthWrite:!1});return e}function ic(){const t=new Nl({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Gl[Je]}},vertexShader:ac(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${sc()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) );\n\n\t\t\t}\n\t\t`,blending:x,depthTest:!1,depthWrite:!1});return t}function ac(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function sc(){return"\n\n\t\tuniform int inputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t"}function oc(t){let e=new WeakMap,n=null;function r(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){const s=r.mapping,o=s===ot||s===lt,l=s===at||s===st;if(o||l){if(e.has(r))return e.get(r).texture;{const s=r.image;if(o&&s&&s.height>0||l&&s&&i(s)){const i=t.getRenderTarget();null===n&&(n=new Ql(t));const s=o?n.fromEquirectangular(r):n.fromCubemap(r);return e.set(r,s),t.setRenderTarget(i),r.addEventListener("dispose",a),s.texture}return null}}}return r}function i(t){let e=0;const n=6;for(let r=0;r<n;r++)void 0!==t[r]&&e++;return e===n}function a(t){const n=t.target;n.removeEventListener("dispose",a);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}function s(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}return{get:r,dispose:s}}function lc(t){const e={};function n(n){if(void 0!==e[n])return e[n];let r;switch(n){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(n)}return e[n]=r,r}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function cc(t,e,n,r){const i={},a=new WeakMap;function s(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const n in o.attributes)e.remove(o.attributes[n]);o.removeEventListener("dispose",s),delete i[o.id];const l=a.get(o);l&&(e.remove(l),a.delete(o)),r.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t,e){return!0===i[e.id]||(e.addEventListener("dispose",s),i[e.id]=!0,n.memory.geometries++),e}function l(t){const n=t.attributes;for(const i in n)e.update(n[i],34962);const r=t.morphAttributes;for(const i in r){const t=r[i];for(let n=0,r=t.length;n<r;n++)e.update(t[n],34962)}}function c(t){const n=[],r=t.index,i=t.attributes.position;let s=0;if(null!==r){const t=r.array;s=r.version;for(let e=0,r=t.length;e<r;e+=3){const r=t[e+0],i=t[e+1],a=t[e+2];n.push(r,i,i,a,a,r)}}else{const t=i.array;s=i.version;for(let e=0,r=t.length/3-1;e<r;e+=3){const t=e+0,r=e+1,i=e+2;n.push(t,r,r,i,i,t)}}const o=new(rr(n)>65535?Zi:Yi)(n,1);o.version=s;const l=a.get(t);l&&e.remove(l),a.set(t,o)}function u(t){const e=a.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&c(t)}else c(t);return a.get(t)}return{get:o,update:l,getWireframeAttribute:u}}function uc(t,e,n,r){const i=r.isWebGL2;let a,s,o;function l(t){a=t}function c(t){s=t.type,o=t.bytesPerElement}function u(e,r){t.drawElements(a,r,s,e*o),n.update(r,a,1)}function h(r,l,c){if(0===c)return;let u,h;if(i)u=t,h="drawElementsInstanced";else if(u=e.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===u)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");u[h](a,l,s,r*o,c),n.update(l,a,c)}this.setMode=l,this.setIndex=c,this.render=u,this.renderInstances=h}function hc(t){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function r(t,e,r){switch(n.calls++,e){case 4:n.triangles+=r*(t/3);break;case 1:n.lines+=r*(t/2);break;case 3:n.lines+=r*(t-1);break;case 2:n.lines+=r*t;break;case 0:n.points+=r*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",e);break}}function i(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:i,update:r}}class dc extends ur{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=ft,this.minFilter=ft,this.wrapR=dt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}function pc(t,e){return t[0]-e[0]}function fc(t,e){return Math.abs(e[1])-Math.abs(t[1])}function mc(t,e){let n=1;const r=e.isInterleavedBufferAttribute?e.data.array:e.array;r instanceof Int8Array?n=127:r instanceof Int16Array?n=32767:r instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",r),t.divideScalar(n)}function gc(t,e,n){const r={},i=new Float32Array(8),a=new WeakMap,s=new vr,o=[];for(let c=0;c<8;c++)o[c]=[c,0];function l(l,c,u,h){const d=l.morphTargetInfluences;if(!0===e.isWebGL2){const r=c.morphAttributes.position.length;let i=a.get(c);if(void 0===i||i.count!==r){void 0!==i&&i.texture.dispose();const t=void 0!==c.morphAttributes.normal,n=c.morphAttributes.position,o=c.morphAttributes.normal||[],l=c.attributes.position.count,u=!0===t?2:1;let h=l*u,d=1;h>e.maxTextureSize&&(d=Math.ceil(h/e.maxTextureSize),h=e.maxTextureSize);const p=new Float32Array(h*d*4*r),f=new dc(p,h,d,r);f.format=Ft,f.type=Rt,f.needsUpdate=!0;const m=4*u;for(let e=0;e<r;e++){const r=n[e],i=o[e],a=h*d*4*e;for(let e=0;e<r.count;e++){s.fromBufferAttribute(r,e),!0===r.normalized&&mc(s,r);const n=e*m;p[a+n+0]=s.x,p[a+n+1]=s.y,p[a+n+2]=s.z,p[a+n+3]=0,!0===t&&(s.fromBufferAttribute(i,e),!0===i.normalized&&mc(s,i),p[a+n+4]=s.x,p[a+n+5]=s.y,p[a+n+6]=s.z,p[a+n+7]=0)}}i={count:r,texture:f,size:new er(h,d)},a.set(c,i)}let o=0;for(let t=0;t<d.length;t++)o+=d[t];const l=c.morphTargetsRelative?1:1-o;h.getUniforms().setValue(t,"morphTargetBaseInfluence",l),h.getUniforms().setValue(t,"morphTargetInfluences",d),h.getUniforms().setValue(t,"morphTargetsTexture",i.texture,n),h.getUniforms().setValue(t,"morphTargetsTextureSize",i.size)}else{const e=void 0===d?0:d.length;let n=r[c.id];if(void 0===n||n.length!==e){n=[];for(let t=0;t<e;t++)n[t]=[t,0];r[c.id]=n}for(let t=0;t<e;t++){const e=n[t];e[0]=t,e[1]=d[t]}n.sort(fc);for(let t=0;t<8;t++)t<e&&n[t][1]?(o[t][0]=n[t][0],o[t][1]=n[t][1]):(o[t][0]=Number.MAX_SAFE_INTEGER,o[t][1]=0);o.sort(pc);const a=c.morphAttributes.position,s=c.morphAttributes.normal;let l=0;for(let t=0;t<8;t++){const e=o[t],n=e[0],r=e[1];n!==Number.MAX_SAFE_INTEGER&&r?(a&&c.getAttribute("morphTarget"+t)!==a[n]&&c.setAttribute("morphTarget"+t,a[n]),s&&c.getAttribute("morphNormal"+t)!==s[n]&&c.setAttribute("morphNormal"+t,s[n]),i[t]=r,l+=r):(a&&!0===c.hasAttribute("morphTarget"+t)&&c.deleteAttribute("morphTarget"+t),s&&!0===c.hasAttribute("morphNormal"+t)&&c.deleteAttribute("morphNormal"+t),i[t]=0)}const u=c.morphTargetsRelative?1:1-l;h.getUniforms().setValue(t,"morphTargetBaseInfluence",u),h.getUniforms().setValue(t,"morphTargetInfluences",i)}}return{update:l}}function vc(t,e,n,r){let i=new WeakMap;function a(t){const a=r.render.frame,s=t.geometry,l=e.get(t,s);return i.get(l)!==a&&(e.update(l),i.set(l,a)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",o)&&t.addEventListener("dispose",o),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),l}function s(){i=new WeakMap}function o(t){const e=t.target;e.removeEventListener("dispose",o),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:a,dispose:s}}dc.prototype.isDataTexture2DArray=!0;class yc extends ur{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=ft,this.minFilter=ft,this.wrapR=dt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}yc.prototype.isDataTexture3D=!0;const xc=new ur,bc=new dc,_c=new yc,wc=new Ha,Mc=[],Sc=[],Tc=new Float32Array(16),Ec=new Float32Array(9),Ac=new Float32Array(4);function Cc(t,e,n){const r=t[0];if(r<=0||r>0)return t;const i=e*n;let a=Mc[i];if(void 0===a&&(a=new Float32Array(i),Mc[i]=a),0!==e){r.toArray(a,0);for(let r=1,i=0;r!==e;++r)i+=n,t[r].toArray(a,i)}return a}function Lc(t,e){if(t.length!==e.length)return!1;for(let n=0,r=t.length;n<r;n++)if(t[n]!==e[n])return!1;return!0}function Rc(t,e){for(let n=0,r=e.length;n<r;n++)t[n]=e[n]}function Pc(t,e){let n=Sc[e];void 0===n&&(n=new Int32Array(e),Sc[e]=n);for(let r=0;r!==e;++r)n[r]=t.allocateTextureUnit();return n}function Dc(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function Ic(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Lc(n,e))return;t.uniform2fv(this.addr,e),Rc(n,e)}}function Oc(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Lc(n,e))return;t.uniform3fv(this.addr,e),Rc(n,e)}}function Nc(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Lc(n,e))return;t.uniform4fv(this.addr,e),Rc(n,e)}}function zc(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(Lc(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Rc(n,e)}else{if(Lc(n,r))return;Ac.set(r),t.uniformMatrix2fv(this.addr,!1,Ac),Rc(n,r)}}function Bc(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(Lc(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Rc(n,e)}else{if(Lc(n,r))return;Ec.set(r),t.uniformMatrix3fv(this.addr,!1,Ec),Rc(n,r)}}function Fc(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(Lc(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Rc(n,e)}else{if(Lc(n,r))return;Tc.set(r),t.uniformMatrix4fv(this.addr,!1,Tc),Rc(n,r)}}function Uc(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Hc(t,e){const n=this.cache;Lc(n,e)||(t.uniform2iv(this.addr,e),Rc(n,e))}function kc(t,e){const n=this.cache;Lc(n,e)||(t.uniform3iv(this.addr,e),Rc(n,e))}function Gc(t,e){const n=this.cache;Lc(n,e)||(t.uniform4iv(this.addr,e),Rc(n,e))}function Vc(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Wc(t,e){const n=this.cache;Lc(n,e)||(t.uniform2uiv(this.addr,e),Rc(n,e))}function jc(t,e){const n=this.cache;Lc(n,e)||(t.uniform3uiv(this.addr,e),Rc(n,e))}function qc(t,e){const n=this.cache;Lc(n,e)||(t.uniform4uiv(this.addr,e),Rc(n,e))}function Xc(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.safeSetTexture2D(e||xc,i)}function Yc(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(e||_c,i)}function Jc(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.safeSetTextureCube(e||wc,i)}function Zc(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(e||bc,i)}function Kc(t){switch(t){case 5126:return Dc;case 35664:return Ic;case 35665:return Oc;case 35666:return Nc;case 35674:return zc;case 35675:return Bc;case 35676:return Fc;case 5124:case 35670:return Uc;case 35667:case 35671:return Hc;case 35668:case 35672:return kc;case 35669:case 35673:return Gc;case 5125:return Vc;case 36294:return Wc;case 36295:return jc;case 36296:return qc;case 35678:case 36198:case 36298:case 36306:case 35682:return Xc;case 35679:case 36299:case 36307:return Yc;case 35680:case 36300:case 36308:case 36293:return Jc;case 36289:case 36303:case 36311:case 36292:return Zc}}function Qc(t,e){t.uniform1fv(this.addr,e)}function $c(t,e){const n=Cc(e,this.size,2);t.uniform2fv(this.addr,n)}function tu(t,e){const n=Cc(e,this.size,3);t.uniform3fv(this.addr,n)}function eu(t,e){const n=Cc(e,this.size,4);t.uniform4fv(this.addr,n)}function nu(t,e){const n=Cc(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function ru(t,e){const n=Cc(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function iu(t,e){const n=Cc(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function au(t,e){t.uniform1iv(this.addr,e)}function su(t,e){t.uniform2iv(this.addr,e)}function ou(t,e){t.uniform3iv(this.addr,e)}function lu(t,e){t.uniform4iv(this.addr,e)}function cu(t,e){t.uniform1uiv(this.addr,e)}function uu(t,e){t.uniform2uiv(this.addr,e)}function hu(t,e){t.uniform3uiv(this.addr,e)}function du(t,e){t.uniform4uiv(this.addr,e)}function pu(t,e,n){const r=e.length,i=Pc(n,r);t.uniform1iv(this.addr,i);for(let a=0;a!==r;++a)n.safeSetTexture2D(e[a]||xc,i[a])}function fu(t,e,n){const r=e.length,i=Pc(n,r);t.uniform1iv(this.addr,i);for(let a=0;a!==r;++a)n.setTexture3D(e[a]||_c,i[a])}function mu(t,e,n){const r=e.length,i=Pc(n,r);t.uniform1iv(this.addr,i);for(let a=0;a!==r;++a)n.safeSetTextureCube(e[a]||wc,i[a])}function gu(t,e,n){const r=e.length,i=Pc(n,r);t.uniform1iv(this.addr,i);for(let a=0;a!==r;++a)n.setTexture2DArray(e[a]||bc,i[a])}function vu(t){switch(t){case 5126:return Qc;case 35664:return $c;case 35665:return tu;case 35666:return eu;case 35674:return nu;case 35675:return ru;case 35676:return iu;case 5124:case 35670:return au;case 35667:case 35671:return su;case 35668:case 35672:return ou;case 35669:case 35673:return lu;case 5125:return cu;case 36294:return uu;case 36295:return hu;case 36296:return du;case 35678:case 36198:case 36298:case 36306:case 35682:return pu;case 35679:case 36299:case 36307:return fu;case 35680:case 36300:case 36308:case 36293:return mu;case 36289:case 36303:case 36311:case 36292:return gu}}function yu(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=Kc(e.type)}function xu(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=vu(e.type)}function bu(t){this.id=t,this.seq=[],this.map={}}xu.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),Rc(e,t)},bu.prototype.setValue=function(t,e,n){const r=this.seq;for(let i=0,a=r.length;i!==a;++i){const a=r[i];a.setValue(t,e[a.id],n)}};const _u=/(\w+)(\])?(\[|\.)?/g;function wu(t,e){t.seq.push(e),t.map[e.id]=e}function Mu(t,e,n){const r=t.name,i=r.length;_u.lastIndex=0;while(1){const a=_u.exec(r),s=_u.lastIndex;let o=a[1];const l="]"===a[2],c=a[3];if(l&&(o|=0),void 0===c||"["===c&&s+2===i){wu(n,void 0===c?new yu(o,t,e):new xu(o,t,e));break}{const t=n.map;let e=t[o];void 0===e&&(e=new bu(o),wu(n,e)),n=e}}}function Su(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let r=0;r<n;++r){const n=t.getActiveUniform(e,r),i=t.getUniformLocation(e,n.name);Mu(n,i,this)}}function Tu(t,e,n){const r=t.createShader(e);return t.shaderSource(r,n),t.compileShader(r),r}Su.prototype.setValue=function(t,e,n,r){const i=this.map[e];void 0!==i&&i.setValue(t,n,r)},Su.prototype.setOptional=function(t,e,n){const r=e[n];void 0!==r&&this.setValue(t,n,r)},Su.upload=function(t,e,n,r){for(let i=0,a=e.length;i!==a;++i){const a=e[i],s=n[a.id];!1!==s.needsUpdate&&a.setValue(t,s.value,r)}},Su.seqWithValue=function(t,e){const n=[];for(let r=0,i=t.length;r!==i;++r){const i=t[r];i.id in e&&n.push(i)}return n};let Eu=0;function Au(t){const e=t.split("\n");for(let n=0;n<e.length;n++)e[n]=n+1+": "+e[n];return e.join("\n")}function Cu(t){switch(t){case Je:return["Linear","( value )"];case Ze:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Lu(t,e,n){const r=t.getShaderParameter(e,35713),i=t.getShaderInfoLog(e).trim();return r&&""===i?"":n.toUpperCase()+"\n\n"+i+"\n\n"+Au(t.getShaderSource(e))}function Ru(t,e){const n=Cu(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Pu(t,e){const n=Cu(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Du(t,e){let n;switch(e){case $:n="Linear";break;case tt:n="Reinhard";break;case et:n="OptimizedCineon";break;case nt:n="ACESFilmic";break;case rt:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Iu(t){const e=[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return e.filter(zu).join("\n")}function Ou(t){const e=[];for(const n in t){const r=t[n];!1!==r&&e.push("#define "+n+" "+r)}return e.join("\n")}function Nu(t,e){const n={},r=t.getProgramParameter(e,35721);for(let i=0;i<r;i++){const r=t.getActiveAttrib(e,i),a=r.name;let s=1;35674===r.type&&(s=2),35675===r.type&&(s=3),35676===r.type&&(s=4),n[a]={type:r.type,location:t.getAttribLocation(e,a),locationSize:s}}return n}function zu(t){return""!==t}function Bu(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Fu(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Uu=/^[ \t]*#include +<([\w\d./]+)>/gm;function Hu(t){return t.replace(Uu,ku)}function ku(t,e){const n=Tl[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return Hu(n)}const Gu=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Vu=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Wu(t){return t.replace(Vu,qu).replace(Gu,ju)}function ju(t,e,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),qu(t,e,n,r)}function qu(t,e,n,r){let i="";for(let a=parseInt(e);a<parseInt(n);a++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return i}function Xu(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Yu(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===h?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===d?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===p&&(e="SHADOWMAP_TYPE_VSM"),e}function Ju(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case at:case st:e="ENVMAP_TYPE_CUBE";break;case ct:case ut:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Zu(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case st:case ut:e="ENVMAP_MODE_REFRACTION";break}return e}function Ku(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case J:e="ENVMAP_BLENDING_MULTIPLY";break;case Z:e="ENVMAP_BLENDING_MIX";break;case K:e="ENVMAP_BLENDING_ADD";break}return e}function Qu(t,e,n,r){const i=t.getContext(),a=n.defines;let s=n.vertexShader,o=n.fragmentShader;const l=Yu(n),c=Ju(n),u=Zu(n),h=Ku(n),d=n.isWebGL2?"":Iu(n),p=Ou(a),f=i.createProgram();let m,g,v=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(m=[p].filter(zu).join("\n"),m.length>0&&(m+="\n"),g=[d,p].filter(zu).join("\n"),g.length>0&&(g+="\n")):(m=[Xu(n),"#define SHADER_NAME "+n.shaderName,p,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(zu).join("\n"),g=[d,Xu(n),"#define SHADER_NAME "+n.shaderName,p,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+u:"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Q?"#define TONE_MAPPING":"",n.toneMapping!==Q?Tl["tonemapping_pars_fragment"]:"",n.toneMapping!==Q?Du("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.format===Bt?"#define OPAQUE":"",Tl["encodings_pars_fragment"],n.map?Ru("mapTexelToLinear",n.mapEncoding):"",n.matcap?Ru("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Ru("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Ru("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.specularColorMap?Ru("specularColorMapTexelToLinear",n.specularColorMapEncoding):"",n.sheenColorMap?Ru("sheenColorMapTexelToLinear",n.sheenColorMapEncoding):"",n.lightMap?Ru("lightMapTexelToLinear",n.lightMapEncoding):"",Pu("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(zu).join("\n")),s=Hu(s),s=Bu(s,n),s=Fu(s,n),o=Hu(o),o=Bu(o,n),o=Fu(o,n),s=Wu(s),o=Wu(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(v="#version 300 es\n",m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+m,g=["#define varying in",n.glslVersion===Cn?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===Cn?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+g);const y=v+m+s,x=v+g+o,b=Tu(i,35633,y),_=Tu(i,35632,x);if(i.attachShader(f,b),i.attachShader(f,_),void 0!==n.index0AttributeName?i.bindAttribLocation(f,0,n.index0AttributeName):!0===n.morphTargets&&i.bindAttribLocation(f,0,"position"),i.linkProgram(f),t.debug.checkShaderErrors){const t=i.getProgramInfoLog(f).trim(),e=i.getShaderInfoLog(b).trim(),n=i.getShaderInfoLog(_).trim();let r=!0,a=!0;if(!1===i.getProgramParameter(f,35714)){r=!1;const e=Lu(i,b,"vertex"),n=Lu(i,_,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(f,35715)+"\n\nProgram Info Log: "+t+"\n"+e+"\n"+n)}else""!==t?console.warn("THREE.WebGLProgram: Program Info Log:",t):""!==e&&""!==n||(a=!1);a&&(this.diagnostics={runnable:r,programLog:t,vertexShader:{log:e,prefix:m},fragmentShader:{log:n,prefix:g}})}let w,M;return i.deleteShader(b),i.deleteShader(_),this.getUniforms=function(){return void 0===w&&(w=new Su(i,f)),w},this.getAttributes=function(){return void 0===M&&(M=Nu(i,f)),M},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(f),this.program=void 0},this.name=n.shaderName,this.id=Eu++,this.cacheKey=e,this.usedTimes=1,this.program=f,this.vertexShader=b,this.fragmentShader=_,this}let $u=0;class th{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,r=this._getShaderStage(e),i=this._getShaderStage(n),a=this._getShaderCacheForMaterial(t);return!1===a.has(r)&&(a.add(r),r.usedTimes++),!1===a.has(i)&&(a.add(i),i.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,0===n.usedTimes&&this.shaderCache.delete(n);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;return!1===e.has(t)&&e.set(t,new Set),e.get(t)}_getShaderStage(t){const e=this.shaderCache;if(!1===e.has(t)){const n=new eh;e.set(t,n)}return e.get(t)}}class eh{constructor(){this.id=$u++,this.usedTimes=0}}function nh(t,e,n,r,i,a,s){const o=new ai,l=new th,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,d=i.floatVertexTextures,p=i.maxVertexUniforms,f=i.vertexTextures;let v=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function x(t){const e=t.skeleton,n=e.bones;if(d)return 1024;{const t=p,e=Math.floor((t-20)/4),r=Math.min(e,n.length);return r<n.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+n.length+" bones. This GPU supports "+r+"."),0):r}}function b(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=Je,u&&t&&t.isTexture&&t.format===Ft&&t.type===St&&t.encoding===Ze&&(e=Je),e}function _(a,o,c,p,_){const w=p.fog,M=a.isMeshStandardMaterial?p.environment:null,S=(a.isMeshStandardMaterial?n:e).get(a.envMap||M),T=y[a.type],E=_.isSkinnedMesh?x(_):0;let A,C,L,R;if(null!==a.precision&&(v=i.getMaxPrecision(a.precision),v!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",v,"instead.")),T){const t=Al[T];A=t.vertexShader,C=t.fragmentShader}else A=a.vertexShader,C=a.fragmentShader,l.update(a),L=l.getVertexShaderID(a),R=l.getFragmentShaderID(a);const P=t.getRenderTarget(),D=a.alphaTest>0,I=a.clearcoat>0,O={isWebGL2:u,shaderID:T,shaderName:a.type,vertexShader:A,fragmentShader:C,defines:a.defines,customVertexShaderID:L,customFragmentShaderID:R,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:v,instancing:!0===_.isInstancedMesh,instancingColor:!0===_.isInstancedMesh&&null!==_.instanceColor,supportsVertexTextures:f,outputEncoding:null!==P?b(P.texture):t.outputEncoding,map:!!a.map,mapEncoding:b(a.map),matcap:!!a.matcap,matcapEncoding:b(a.matcap),envMap:!!S,envMapMode:S&&S.mapping,envMapEncoding:b(S),envMapCubeUV:!!S&&(S.mapping===ct||S.mapping===ut),lightMap:!!a.lightMap,lightMapEncoding:b(a.lightMap),aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,emissiveMapEncoding:b(a.emissiveMap),bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:a.normalMapType===tn,tangentSpaceNormalMap:a.normalMapType===$e,clearcoat:I,clearcoatMap:I&&!!a.clearcoatMap,clearcoatRoughnessMap:I&&!!a.clearcoatRoughnessMap,clearcoatNormalMap:I&&!!a.clearcoatNormalMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,specularIntensityMap:!!a.specularIntensityMap,specularColorMap:!!a.specularColorMap,specularColorMapEncoding:b(a.specularColorMap),alphaMap:!!a.alphaMap,alphaTest:D,gradientMap:!!a.gradientMap,sheen:a.sheen>0,sheenColorMap:!!a.sheenColorMap,sheenColorMapEncoding:b(a.sheenColorMap),sheenRoughnessMap:!!a.sheenRoughnessMap,transmission:a.transmission>0,transmissionMap:!!a.transmissionMap,thicknessMap:!!a.thicknessMap,combine:a.combine,vertexTangents:!!a.normalMap&&!!_.geometry&&!!_.geometry.attributes.tangent,vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!_.geometry&&!!_.geometry.attributes.color&&4===_.geometry.attributes.color.itemSize,vertexUvs:!!a.map||!!a.bumpMap||!!a.normalMap||!!a.specularMap||!!a.alphaMap||!!a.emissiveMap||!!a.roughnessMap||!!a.metalnessMap||!!a.clearcoatMap||!!a.clearcoatRoughnessMap||!!a.clearcoatNormalMap||!!a.displacementMap||!!a.transmissionMap||!!a.thicknessMap||!!a.specularIntensityMap||!!a.specularColorMap||!!a.sheenColorMap||!!a.sheenRoughnessMap,uvsVertexOnly:!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatNormalMap||a.transmission>0||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularColorMap||a.sheen>0||a.sheenColorMap||a.sheenRoughnessMap)&&!!a.displacementMap,fog:!!w,useFog:a.fog,fogExp2:w&&w.isFogExp2,flatShading:!!a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:h,skinning:!0===_.isSkinnedMesh&&E>0,maxBones:E,useVertexTexture:d,morphTargets:!!_.geometry&&!!_.geometry.morphAttributes.position,morphNormals:!!_.geometry&&!!_.geometry.morphAttributes.normal,morphTargetsCount:_.geometry&&_.geometry.morphAttributes.position?_.geometry.morphAttributes.position.length:0,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,format:a.format,dithering:a.dithering,shadowMapEnabled:t.shadowMap.enabled&&c.length>0,shadowMapType:t.shadowMap.type,toneMapping:a.toneMapped?t.toneMapping:Q,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,doubleSided:a.side===g,flipSided:a.side===m,depthPacking:void 0!==a.depthPacking&&a.depthPacking,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||r.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()};return O}function w(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.customVertexShaderID),n.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(M(n,e),S(n,e),n.push(t.outputEncoding)),n.push(e.customProgramCacheKey),n.join()}function M(t,e){t.push(e.precision),t.push(e.outputEncoding),t.push(e.mapEncoding),t.push(e.matcapEncoding),t.push(e.envMapMode),t.push(e.envMapEncoding),t.push(e.lightMapEncoding),t.push(e.emissiveMapEncoding),t.push(e.combine),t.push(e.vertexUvs),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.maxBones),t.push(e.morphTargetsCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.format),t.push(e.specularColorMapEncoding),t.push(e.sheenColorMapEncoding)}function S(t,e){o.disableAll(),e.isWebGL2&&o.enable(0),e.supportsVertexTextures&&o.enable(1),e.instancing&&o.enable(2),e.instancingColor&&o.enable(3),e.map&&o.enable(4),e.matcap&&o.enable(5),e.envMap&&o.enable(6),e.envMapCubeUV&&o.enable(7),e.lightMap&&o.enable(8),e.aoMap&&o.enable(9),e.emissiveMap&&o.enable(10),e.bumpMap&&o.enable(11),e.normalMap&&o.enable(12),e.objectSpaceNormalMap&&o.enable(13),e.tangentSpaceNormalMap&&o.enable(14),e.clearcoat&&o.enable(15),e.clearcoatMap&&o.enable(16),e.clearcoatRoughnessMap&&o.enable(17),e.clearcoatNormalMap&&o.enable(18),e.displacementMap&&o.enable(19),e.specularMap&&o.enable(20),e.roughnessMap&&o.enable(21),e.metalnessMap&&o.enable(22),e.gradientMap&&o.enable(23),e.alphaMap&&o.enable(24),e.alphaTest&&o.enable(25),e.vertexColors&&o.enable(26),e.vertexAlphas&&o.enable(27),e.vertexUvs&&o.enable(28),e.vertexTangents&&o.enable(29),e.uvsVertexOnly&&o.enable(30),e.fog&&o.enable(31),t.push(o.mask),o.disableAll(),e.useFog&&o.enable(0),e.flatShading&&o.enable(1),e.logarithmicDepthBuffer&&o.enable(2),e.skinning&&o.enable(3),e.useVertexTexture&&o.enable(4),e.morphTargets&&o.enable(5),e.morphNormals&&o.enable(6),e.premultipliedAlpha&&o.enable(7),e.shadowMapEnabled&&o.enable(8),e.physicallyCorrectLights&&o.enable(9),e.doubleSided&&o.enable(10),e.flipSided&&o.enable(11),e.depthPacking&&o.enable(12),e.dithering&&o.enable(13),e.specularIntensityMap&&o.enable(14),e.specularColorMap&&o.enable(15),e.transmission&&o.enable(16),e.transmissionMap&&o.enable(17),e.thicknessMap&&o.enable(18),e.sheen&&o.enable(19),e.sheenColorMap&&o.enable(20),e.sheenRoughnessMap&&o.enable(21),t.push(o.mask)}function T(t){const e=y[t.type];let n;if(e){const t=Al[e];n=Pa.clone(t.uniforms)}else n=t.uniforms;return n}function E(e,n){let r;for(let t=0,i=c.length;t<i;t++){const e=c[t];if(e.cacheKey===n){r=e,++r.usedTimes;break}}return void 0===r&&(r=new Qu(t,n,e,a),c.push(r)),r}function A(t){if(0===--t.usedTimes){const e=c.indexOf(t);c[e]=c[c.length-1],c.pop(),t.destroy()}}function C(t){l.remove(t)}function L(){l.dispose()}return{getParameters:_,getProgramCacheKey:w,getUniforms:T,acquireProgram:E,releaseProgram:A,releaseShaderCache:C,programs:c,dispose:L}}function rh(){let t=new WeakMap;function e(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n}function n(e){t.delete(e)}function r(e,n,r){t.get(e)[n]=r}function i(){t=new WeakMap}return{get:e,remove:n,update:r,dispose:i}}function ih(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function ah(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function sh(){const t=[];let e=0;const n=[],r=[],i=[];function a(){e=0,n.length=0,r.length=0,i.length=0}function s(n,r,i,a,s,o){let l=t[e];return void 0===l?(l={id:n.id,object:n,geometry:r,material:i,groupOrder:a,renderOrder:n.renderOrder,z:s,group:o},t[e]=l):(l.id=n.id,l.object=n,l.geometry=r,l.material=i,l.groupOrder=a,l.renderOrder=n.renderOrder,l.z=s,l.group=o),e++,l}function o(t,e,a,o,l,c){const u=s(t,e,a,o,l,c);a.transmission>0?r.push(u):!0===a.transparent?i.push(u):n.push(u)}function l(t,e,a,o,l,c){const u=s(t,e,a,o,l,c);a.transmission>0?r.unshift(u):!0===a.transparent?i.unshift(u):n.unshift(u)}function c(t,e){n.length>1&&n.sort(t||ih),r.length>1&&r.sort(e||ah),i.length>1&&i.sort(e||ah)}function u(){for(let n=e,r=t.length;n<r;n++){const e=t[n];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}}return{opaque:n,transmissive:r,transparent:i,init:a,push:o,unshift:l,finish:u,sort:c}}function oh(){let t=new WeakMap;function e(e,n){let r;return!1===t.has(e)?(r=new sh,t.set(e,[r])):n>=t.get(e).length?(r=new sh,t.get(e).push(r)):r=t.get(e)[n],r}function n(){t=new WeakMap}return{get:e,dispose:n}}function lh(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new vr,color:new Ui};break;case"SpotLight":n={position:new vr,direction:new vr,color:new Ui,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new vr,color:new Ui,distance:0,decay:0};break;case"HemisphereLight":n={direction:new vr,skyColor:new Ui,groundColor:new Ui};break;case"RectAreaLight":n={color:new Ui,position:new vr,halfWidth:new vr,halfHeight:new vr};break}return t[e.id]=n,n}}}function ch(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new er};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new er};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new er,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}let uh=0;function hh(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function dh(t,e){const n=new lh,r=ch(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)i.probe.push(new vr);const a=new vr,s=new Yr,o=new Yr;function l(a,s){let o=0,l=0,c=0;for(let t=0;t<9;t++)i.probe[t].set(0,0,0);let u=0,h=0,d=0,p=0,f=0,m=0,g=0,v=0;a.sort(hh);const y=!0!==s?Math.PI:1;for(let t=0,e=a.length;t<e;t++){const e=a[t],s=e.color,x=e.intensity,b=e.distance,_=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)o+=s.r*x*y,l+=s.g*x*y,c+=s.b*x*y;else if(e.isLightProbe)for(let t=0;t<9;t++)i.probe[t].addScaledVector(e.sh.coefficients[t],x);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*y),e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,i.directionalShadow[u]=n,i.directionalShadowMap[u]=_,i.directionalShadowMatrix[u]=e.shadow.matrix,m++}i.directional[u]=t,u++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(s).multiplyScalar(x*y),t.distance=b,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,i.spotShadow[d]=n,i.spotShadowMap[d]=_,i.spotShadowMatrix[d]=e.shadow.matrix,v++}i.spot[d]=t,d++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(s).multiplyScalar(x),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),i.rectArea[p]=t,p++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*y),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,i.pointShadow[h]=n,i.pointShadowMap[h]=_,i.pointShadowMatrix[h]=e.shadow.matrix,g++}i.point[h]=t,h++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(x*y),t.groundColor.copy(e.groundColor).multiplyScalar(x*y),i.hemi[f]=t,f++}}p>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(i.rectAreaLTC1=El.LTC_FLOAT_1,i.rectAreaLTC2=El.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=El.LTC_HALF_1,i.rectAreaLTC2=El.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=o,i.ambient[1]=l,i.ambient[2]=c;const x=i.hash;x.directionalLength===u&&x.pointLength===h&&x.spotLength===d&&x.rectAreaLength===p&&x.hemiLength===f&&x.numDirectionalShadows===m&&x.numPointShadows===g&&x.numSpotShadows===v||(i.directional.length=u,i.spot.length=d,i.rectArea.length=p,i.point.length=h,i.hemi.length=f,i.directionalShadow.length=m,i.directionalShadowMap.length=m,i.pointShadow.length=g,i.pointShadowMap.length=g,i.spotShadow.length=v,i.spotShadowMap.length=v,i.directionalShadowMatrix.length=m,i.pointShadowMatrix.length=g,i.spotShadowMatrix.length=v,x.directionalLength=u,x.pointLength=h,x.spotLength=d,x.rectAreaLength=p,x.hemiLength=f,x.numDirectionalShadows=m,x.numPointShadows=g,x.numSpotShadows=v,i.version=uh++)}function c(t,e){let n=0,r=0,l=0,c=0,u=0;const h=e.matrixWorldInverse;for(let d=0,p=t.length;d<p;d++){const e=t[d];if(e.isDirectionalLight){const t=i.directional[n];t.direction.setFromMatrixPosition(e.matrixWorld),a.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(h),n++}else if(e.isSpotLight){const t=i.spot[l];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(h),t.direction.setFromMatrixPosition(e.matrixWorld),a.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(h),l++}else if(e.isRectAreaLight){const t=i.rectArea[c];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(h),o.identity(),s.copy(e.matrixWorld),s.premultiply(h),o.extractRotation(s),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),c++}else if(e.isPointLight){const t=i.point[r];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(h),r++}else if(e.isHemisphereLight){const t=i.hemi[u];t.direction.setFromMatrixPosition(e.matrixWorld),t.direction.transformDirection(h),t.direction.normalize(),u++}}}return{setup:l,setupView:c,state:i}}function ph(t,e){const n=new dh(t,e),r=[],i=[];function a(){r.length=0,i.length=0}function s(t){r.push(t)}function o(t){i.push(t)}function l(t){n.setup(r,t)}function c(t){n.setupView(r,t)}const u={lightsArray:r,shadowsArray:i,lights:n};return{init:a,state:u,setupLights:l,setupLightsView:c,pushLight:s,pushShadow:o}}function fh(t,e){let n=new WeakMap;function r(r,i=0){let a;return!1===n.has(r)?(a=new ph(t,e),n.set(r,[a])):i>=n.get(r).length?(a=new ph(t,e),n.get(r).push(a)):a=n.get(r)[i],a}function i(){n=new WeakMap}return{get:r,dispose:i}}class mh extends Di{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=Ke,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}mh.prototype.isMeshDepthMaterial=!0;class gh extends Di{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new vr,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}gh.prototype.isMeshDistanceMaterial=!0;const vh="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",yh="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";function xh(t,e,n){let r=new Ya;const i=new er,a=new er,s=new dr,o=new mh({depthPacking:Qe}),l=new gh,c={},u=n.maxTextureSize,d={0:m,1:f,2:g},v=new Oa({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new er},radius:{value:4}},vertexShader:vh,fragmentShader:yh}),y=v.clone();y.defines.HORIZONTAL_PASS=1;const b=new oa;b.setAttribute("position",new Vi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new Ta(b,v),w=this;function M(n,r){const i=e.update(_);v.defines.VSM_SAMPLES!==n.blurSamples&&(v.defines.VSM_SAMPLES=n.blurSamples,y.defines.VSM_SAMPLES=n.blurSamples,v.needsUpdate=!0,y.needsUpdate=!0),v.uniforms.shadow_pass.value=n.map.texture,v.uniforms.resolution.value=n.mapSize,v.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(r,null,i,v,_,null),y.uniforms.shadow_pass.value=n.mapPass.texture,y.uniforms.resolution.value=n.mapSize,y.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(r,null,i,y,_,null)}function S(e,n,r,i,a,s,u){let h=null;const f=!0===i.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(h=void 0!==f?f:!0===i.isPointLight?l:o,t.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length||r.displacementMap&&0!==r.displacementScale||r.alphaMap&&r.alphaTest>0){const t=h.uuid,e=r.uuid;let n=c[t];void 0===n&&(n={},c[t]=n);let i=n[e];void 0===i&&(i=h.clone(),n[e]=i),h=i}return h.visible=r.visible,h.wireframe=r.wireframe,h.side=u===p?null!==r.shadowSide?r.shadowSide:r.side:null!==r.shadowSide?r.shadowSide:d[r.side],h.alphaMap=r.alphaMap,h.alphaTest=r.alphaTest,h.clipShadows=r.clipShadows,h.clippingPlanes=r.clippingPlanes,h.clipIntersection=r.clipIntersection,h.displacementMap=r.displacementMap,h.displacementScale=r.displacementScale,h.displacementBias=r.displacementBias,h.wireframeLinewidth=r.wireframeLinewidth,h.linewidth=r.linewidth,!0===i.isPointLight&&!0===h.isMeshDistanceMaterial&&(h.referencePosition.setFromMatrixPosition(i.matrixWorld),h.nearDistance=a,h.farDistance=s),h}function T(n,i,a,s,o){if(!1===n.visible)return;const l=n.layers.test(i.layers);if(l&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===p)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const r=e.update(n),i=n.material;if(Array.isArray(i)){const e=r.groups;for(let l=0,c=e.length;l<c;l++){const c=e[l],u=i[c.materialIndex];if(u&&u.visible){const e=S(n,r,u,s,a.near,a.far,o);t.renderBufferDirect(a,null,r,e,n,c)}}}else if(i.visible){const e=S(n,r,i,s,a.near,a.far,o);t.renderBufferDirect(a,null,r,e,n,null)}}const c=n.children;for(let t=0,e=c.length;t<e;t++)T(c[t],i,a,s,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=h,this.render=function(e,n,o){if(!1===w.enabled)return;if(!1===w.autoUpdate&&!1===w.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),h=t.getActiveMipmapLevel(),d=t.state;d.setBlending(x),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let f=0,m=e.length;f<m;f++){const l=e[f],c=l.shadow;if(void 0===c){console.warn("THREE.WebGLShadowMap:",l,"has no shadow.");continue}if(!1===c.autoUpdate&&!1===c.needsUpdate)continue;i.copy(c.mapSize);const h=c.getFrameExtents();if(i.multiply(h),a.copy(c.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(a.x=Math.floor(u/h.x),i.x=a.x*h.x,c.mapSize.x=a.x),i.y>u&&(a.y=Math.floor(u/h.y),i.y=a.y*h.y,c.mapSize.y=a.y)),null===c.map&&!c.isPointLightShadow&&this.type===p){const t={minFilter:xt,magFilter:xt,format:Ft};c.map=new pr(i.x,i.y,t),c.map.texture.name=l.name+".shadowMap",c.mapPass=new pr(i.x,i.y,t),c.camera.updateProjectionMatrix()}if(null===c.map){const t={minFilter:ft,magFilter:ft,format:Ft};c.map=new pr(i.x,i.y,t),c.map.texture.name=l.name+".shadowMap",c.camera.updateProjectionMatrix()}t.setRenderTarget(c.map),t.clear();const m=c.getViewportCount();for(let t=0;t<m;t++){const e=c.getViewport(t);s.set(a.x*e.x,a.y*e.y,a.x*e.z,a.y*e.w),d.viewport(s),c.updateMatrices(l,t),r=c.getFrustum(),T(n,o,c.camera,l,this.type)}c.isPointLightShadow||this.type!==p||M(c,o),c.needsUpdate=!1}w.needsUpdate=!1,t.setRenderTarget(l,c,h)}}function bh(t,e,n){const r=n.isWebGL2;function i(){let e=!1;const n=new dr;let r=null;const i=new dr(0,0,0,0);return{setMask:function(n){r===n||e||(t.colorMask(n,n,n,n),r=n)},setLocked:function(t){e=t},setClear:function(e,r,a,s,o){!0===o&&(e*=s,r*=s,a*=s),n.set(e,r,a,s),!1===i.equals(n)&&(t.clearColor(e,r,a,s),i.copy(n))},reset:function(){e=!1,r=null,i.set(-1,0,0,0)}}}function a(){let e=!1,n=null,r=null,i=null;return{setTest:function(t){t?bt(2929):_t(2929)},setMask:function(r){n===r||e||(t.depthMask(r),n=r)},setFunc:function(e){if(r!==e){if(e)switch(e){case k:t.depthFunc(512);break;case G:t.depthFunc(519);break;case V:t.depthFunc(513);break;case W:t.depthFunc(515);break;case j:t.depthFunc(514);break;case q:t.depthFunc(518);break;case X:t.depthFunc(516);break;case Y:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);r=e}},setLocked:function(t){e=t},setClear:function(e){i!==e&&(t.clearDepth(e),i=e)},reset:function(){e=!1,n=null,r=null,i=null}}}function c(){let e=!1,n=null,r=null,i=null,a=null,s=null,o=null,l=null,c=null;return{setTest:function(t){e||(t?bt(2960):_t(2960))},setMask:function(r){n===r||e||(t.stencilMask(r),n=r)},setFunc:function(e,n,s){r===e&&i===n&&a===s||(t.stencilFunc(e,n,s),r=e,i=n,a=s)},setOp:function(e,n,r){s===e&&o===n&&l===r||(t.stencilOp(e,n,r),s=e,o=n,l=r)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,n=null,r=null,i=null,a=null,s=null,o=null,l=null,c=null}}}const u=new i,h=new a,d=new c;let p={},f={},v=null,y=!1,J=null,Z=null,K=null,Q=null,$=null,tt=null,et=null,nt=!1,rt=null,it=null,at=null,st=null,ot=null;const lt=t.getParameter(35661);let ct=!1,ut=0;const ht=t.getParameter(7938);-1!==ht.indexOf("WebGL")?(ut=parseFloat(/^WebGL (\d)/.exec(ht)[1]),ct=ut>=1):-1!==ht.indexOf("OpenGL ES")&&(ut=parseFloat(/^OpenGL ES (\d)/.exec(ht)[1]),ct=ut>=2);let dt=null,pt={};const ft=t.getParameter(3088),mt=t.getParameter(2978),gt=(new dr).fromArray(ft),vt=(new dr).fromArray(mt);function yt(e,n,r){const i=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let s=0;s<r;s++)t.texImage2D(n+s,0,6408,1,1,0,6408,5121,i);return a}const xt={};function bt(e){!0!==p[e]&&(t.enable(e),p[e]=!0)}function _t(e){!1!==p[e]&&(t.disable(e),p[e]=!1)}function wt(e,n){return f[e]!==n&&(t.bindFramebuffer(e,n),f[e]=n,r&&(36009===e&&(f[36160]=n),36160===e&&(f[36009]=n)),!0)}function Mt(e){return v!==e&&(t.useProgram(e),v=e,!0)}xt[3553]=yt(3553,3553,1),xt[34067]=yt(34067,34069,6),u.setClear(0,0,0,1),h.setClear(1),d.setClear(0),bt(2929),h.setFunc(W),Ct(!1),Lt(o),bt(2884),Et(x);const St={[T]:32774,[E]:32778,[A]:32779};if(r)St[C]=32775,St[L]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(St[C]=t.MIN_EXT,St[L]=t.MAX_EXT)}const Tt={[R]:0,[P]:1,[D]:768,[O]:770,[H]:776,[F]:774,[z]:772,[I]:769,[N]:771,[U]:775,[B]:773};function Et(e,n,r,i,a,s,o,l){if(e!==x){if(!1===y&&(bt(3042),y=!0),e===S)a=a||n,s=s||r,o=o||i,n===Z&&a===$||(t.blendEquationSeparate(St[n],St[a]),Z=n,$=a),r===K&&i===Q&&s===tt&&o===et||(t.blendFuncSeparate(Tt[r],Tt[i],Tt[s],Tt[o]),K=r,Q=i,tt=s,et=o),J=e,nt=null;else if(e!==J||l!==nt){if(Z===T&&$===T||(t.blendEquation(32774),Z=T,$=T),l)switch(e){case b:t.blendFuncSeparate(1,771,1,771);break;case _:t.blendFunc(1,1);break;case w:t.blendFuncSeparate(0,0,769,771);break;case M:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case b:t.blendFuncSeparate(770,771,1,771);break;case _:t.blendFunc(770,1);break;case w:t.blendFunc(0,769);break;case M:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}K=null,Q=null,tt=null,et=null,J=e,nt=l}}else!0===y&&(_t(3042),y=!1)}function At(t,e){t.side===g?_t(2884):bt(2884);let n=t.side===m;e&&(n=!n),Ct(n),t.blending===b&&!1===t.transparent?Et(x):Et(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),h.setFunc(t.depthFunc),h.setTest(t.depthTest),h.setMask(t.depthWrite),u.setMask(t.colorWrite);const r=t.stencilWrite;d.setTest(r),r&&(d.setMask(t.stencilWriteMask),d.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),d.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Pt(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?bt(32926):_t(32926)}function Ct(e){rt!==e&&(e?t.frontFace(2304):t.frontFace(2305),rt=e)}function Lt(e){e!==s?(bt(2884),e!==it&&(e===o?t.cullFace(1029):e===l?t.cullFace(1028):t.cullFace(1032))):_t(2884),it=e}function Rt(e){e!==at&&(ct&&t.lineWidth(e),at=e)}function Pt(e,n,r){e?(bt(32823),st===n&&ot===r||(t.polygonOffset(n,r),st=n,ot=r)):_t(32823)}function Dt(t){t?bt(3089):_t(3089)}function It(e){void 0===e&&(e=33984+lt-1),dt!==e&&(t.activeTexture(e),dt=e)}function Ot(e,n){null===dt&&It();let r=pt[dt];void 0===r&&(r={type:void 0,texture:void 0},pt[dt]=r),r.type===e&&r.texture===n||(t.bindTexture(e,n||xt[e]),r.type=e,r.texture=n)}function Nt(){const e=pt[dt];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)}function zt(){try{t.compressedTexImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Bt(){try{t.texSubImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Ft(){try{t.texSubImage3D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Ut(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Ht(){try{t.texStorage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function kt(){try{t.texStorage3D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Gt(){try{t.texImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Vt(){try{t.texImage3D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Wt(e){!1===gt.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),gt.copy(e))}function jt(e){!1===vt.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),vt.copy(e))}function qt(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===r&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),p={},dt=null,pt={},f={},v=null,y=!1,J=null,Z=null,K=null,Q=null,$=null,tt=null,et=null,nt=!1,rt=null,it=null,at=null,st=null,ot=null,gt.set(0,0,t.canvas.width,t.canvas.height),vt.set(0,0,t.canvas.width,t.canvas.height),u.reset(),h.reset(),d.reset()}return{buffers:{color:u,depth:h,stencil:d},enable:bt,disable:_t,bindFramebuffer:wt,useProgram:Mt,setBlending:Et,setMaterial:At,setFlipSided:Ct,setCullFace:Lt,setLineWidth:Rt,setPolygonOffset:Pt,setScissorTest:Dt,activeTexture:It,bindTexture:Ot,unbindTexture:Nt,compressedTexImage2D:zt,texImage2D:Gt,texImage3D:Vt,texStorage2D:Ht,texStorage3D:kt,texSubImage2D:Bt,texSubImage3D:Ft,compressedTexSubImage2D:Ut,scissor:Wt,viewport:jt,reset:qt}}function _h(t,e,n,r,i,a,s){const o=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture"),p=d?e.get("WEBGL_multisampled_render_to_texture"):void 0,f=new WeakMap;let m,g=!1;try{g="undefined"!==typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(rt){}function v(t,e){return g?new OffscreenCanvas(t,e):sr("canvas")}function y(t,e,n,r){let i=1;if((t.width>r||t.height>r)&&(i=r/Math.max(t.width,t.height)),i<1||!0===e){if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap){const r=e?Qn:Math.floor,a=r(i*t.width),s=r(i*t.height);void 0===m&&(m=v(a,s));const o=n?v(a,s):m;o.width=a,o.height=s;const l=o.getContext("2d");return l.drawImage(t,0,0,a,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+a+"x"+s+")."),o}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function x(t){return Zn(t.width)&&Zn(t.height)}function b(t){return!o&&(t.wrapS!==dt||t.wrapT!==dt||t.minFilter!==ft&&t.minFilter!==xt)}function _(t,e){return t.generateMipmaps&&e&&t.minFilter!==ft&&t.minFilter!==xt}function w(e){t.generateMipmap(e)}function M(n,r,i,a){if(!1===o)return r;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let s=r;return 6403===r&&(5126===i&&(s=33326),5131===i&&(s=33325),5121===i&&(s=33321)),6407===r&&(5126===i&&(s=34837),5131===i&&(s=34843),5121===i&&(s=32849)),6408===r&&(5126===i&&(s=34836),5131===i&&(s=34842),5121===i&&(s=a===Ze?35907:32856)),33325!==s&&33326!==s&&34842!==s&&34836!==s||e.get("EXT_color_buffer_float"),s}function S(t,e,n){return!0===_(t,n)||t.isFramebufferTexture&&t.minFilter!==ft&&t.minFilter!==xt?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function T(t){return t===ft||t===mt||t===vt?9728:9729}function E(t){const e=t.target;e.removeEventListener("dispose",E),C(e),e.isVideoTexture&&f.delete(e),s.memory.textures--}function A(t){const e=t.target;e.removeEventListener("dispose",A),L(e)}function C(e){const n=r.get(e);void 0!==n.__webglInit&&(t.deleteTexture(n.__webglTexture),r.remove(e))}function L(e){const n=e.texture,i=r.get(e),a=r.get(n);if(e){if(void 0!==a.__webglTexture&&(t.deleteTexture(a.__webglTexture),s.memory.textures--),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(i.__webglFramebuffer[e]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[e]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&t.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer&&t.deleteRenderbuffer(i.__webglColorRenderbuffer),i.__webglDepthRenderbuffer&&t.deleteRenderbuffer(i.__webglDepthRenderbuffer);if(e.isWebGLMultipleRenderTargets)for(let e=0,i=n.length;e<i;e++){const i=r.get(n[e]);i.__webglTexture&&(t.deleteTexture(i.__webglTexture),s.memory.textures--),r.remove(n[e])}r.remove(n),r.remove(e)}}let R=0;function P(){R=0}function D(){const t=R;return t>=l&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+l),R+=1,t}function I(t,e){const i=r.get(t);if(t.isVideoTexture&&Q(t),t.version>0&&i.__version!==t.version){const n=t.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void k(i,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+e),n.bindTexture(3553,i.__webglTexture)}function O(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?k(i,t,e):(n.activeTexture(33984+e),n.bindTexture(35866,i.__webglTexture))}function N(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?k(i,t,e):(n.activeTexture(33984+e),n.bindTexture(32879,i.__webglTexture))}function z(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?G(i,t,e):(n.activeTexture(33984+e),n.bindTexture(34067,i.__webglTexture))}const B={[ht]:10497,[dt]:33071,[pt]:33648},F={[ft]:9728,[mt]:9984,[vt]:9986,[xt]:9729,[bt]:9985,[wt]:9987};function U(n,a,s){if(s?(t.texParameteri(n,10242,B[a.wrapS]),t.texParameteri(n,10243,B[a.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,B[a.wrapR]),t.texParameteri(n,10240,F[a.magFilter]),t.texParameteri(n,10241,F[a.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),a.wrapS===dt&&a.wrapT===dt||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,T(a.magFilter)),t.texParameteri(n,10241,T(a.minFilter)),a.minFilter!==ft&&a.minFilter!==xt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const s=e.get("EXT_texture_filter_anisotropic");if(a.type===Rt&&!1===e.has("OES_texture_float_linear"))return;if(!1===o&&a.type===Pt&&!1===e.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||r.get(a).__currentAnisotropy)&&(t.texParameterf(n,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,i.getMaxAnisotropy())),r.get(a).__currentAnisotropy=a.anisotropy)}}function H(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",E),e.__webglTexture=t.createTexture(),s.memory.textures++)}function k(e,r,i){let s=3553;r.isDataTexture2DArray&&(s=35866),r.isDataTexture3D&&(s=32879),H(e,r),n.activeTexture(33984+i),n.bindTexture(s,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const l=b(r)&&!1===x(r.image),c=y(r.image,l,!1,u),h=x(c)||o,d=a.convert(r.format);let p,f=a.convert(r.type),m=M(r.internalFormat,d,f,r.encoding);U(s,r,h);const g=r.mipmaps,v=o&&!0!==r.isVideoTexture,T=void 0===e.__version,E=S(r,c,h);if(r.isDepthTexture)m=6402,o?m=r.type===Rt?36012:r.type===Lt?33190:r.type===Nt?35056:33189:r.type===Rt&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===kt&&6402===m&&r.type!==At&&r.type!==Lt&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=At,f=a.convert(r.type)),r.format===Gt&&6402===m&&(m=34041,r.type!==Nt&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=Nt,f=a.convert(r.type))),v&&T?n.texStorage2D(3553,1,m,c.width,c.height):n.texImage2D(3553,0,m,c.width,c.height,0,d,f,null);else if(r.isDataTexture)if(g.length>0&&h){v&&T&&n.texStorage2D(3553,E,m,g[0].width,g[0].height);for(let t=0,e=g.length;t<e;t++)p=g[t],v?n.texSubImage2D(3553,0,0,0,p.width,p.height,d,f,p.data):n.texImage2D(3553,t,m,p.width,p.height,0,d,f,p.data);r.generateMipmaps=!1}else v?(T&&n.texStorage2D(3553,E,m,c.width,c.height),n.texSubImage2D(3553,0,0,0,c.width,c.height,d,f,c.data)):n.texImage2D(3553,0,m,c.width,c.height,0,d,f,c.data);else if(r.isCompressedTexture){v&&T&&n.texStorage2D(3553,E,m,g[0].width,g[0].height);for(let t=0,e=g.length;t<e;t++)p=g[t],r.format!==Ft&&r.format!==Bt?null!==d?v?n.compressedTexSubImage2D(3553,t,0,0,p.width,p.height,d,p.data):n.compressedTexImage2D(3553,t,m,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):v?n.texSubImage2D(3553,t,0,0,p.width,p.height,d,f,p.data):n.texImage2D(3553,t,m,p.width,p.height,0,d,f,p.data)}else if(r.isDataTexture2DArray)v?(T&&n.texStorage3D(35866,E,m,c.width,c.height,c.depth),n.texSubImage3D(35866,0,0,0,0,c.width,c.height,c.depth,d,f,c.data)):n.texImage3D(35866,0,m,c.width,c.height,c.depth,0,d,f,c.data);else if(r.isDataTexture3D)v?(T&&n.texStorage3D(32879,E,m,c.width,c.height,c.depth),n.texSubImage3D(32879,0,0,0,0,c.width,c.height,c.depth,d,f,c.data)):n.texImage3D(32879,0,m,c.width,c.height,c.depth,0,d,f,c.data);else if(r.isFramebufferTexture)v&&T?n.texStorage2D(3553,E,m,c.width,c.height):n.texImage2D(3553,0,m,c.width,c.height,0,d,f,null);else if(g.length>0&&h){v&&T&&n.texStorage2D(3553,E,m,g[0].width,g[0].height);for(let t=0,e=g.length;t<e;t++)p=g[t],v?n.texSubImage2D(3553,t,0,0,d,f,p):n.texImage2D(3553,t,m,d,f,p);r.generateMipmaps=!1}else v?(T&&n.texStorage2D(3553,E,m,c.width,c.height),n.texSubImage2D(3553,0,0,0,d,f,c)):n.texImage2D(3553,0,m,d,f,c);_(r,h)&&w(s),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}function G(e,r,i){if(6!==r.image.length)return;H(e,r),n.activeTexture(33984+i),n.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const s=r&&(r.isCompressedTexture||r.image[0].isCompressedTexture),l=r.image[0]&&r.image[0].isDataTexture,u=[];for(let t=0;t<6;t++)u[t]=s||l?l?r.image[t].image:r.image[t]:y(r.image[t],!1,!0,c);const h=u[0],d=x(h)||o,p=a.convert(r.format),f=a.convert(r.type),m=M(r.internalFormat,p,f,r.encoding),g=o&&!0!==r.isVideoTexture,v=void 0===e.__version;let b,T=S(r,h,d);if(U(34067,r,d),s){g&&v&&n.texStorage2D(34067,T,m,h.width,h.height);for(let t=0;t<6;t++){b=u[t].mipmaps;for(let e=0;e<b.length;e++){const i=b[e];r.format!==Ft&&r.format!==Bt?null!==p?g?n.compressedTexSubImage2D(34069+t,e,0,0,i.width,i.height,p,i.data):n.compressedTexImage2D(34069+t,e,m,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):g?n.texSubImage2D(34069+t,e,0,0,i.width,i.height,p,f,i.data):n.texImage2D(34069+t,e,m,i.width,i.height,0,p,f,i.data)}}}else{b=r.mipmaps,g&&v&&(b.length>0&&T++,n.texStorage2D(34067,T,m,u[0].width,u[0].height));for(let t=0;t<6;t++)if(l){g?n.texSubImage2D(34069+t,0,0,0,u[t].width,u[t].height,p,f,u[t].data):n.texImage2D(34069+t,0,m,u[t].width,u[t].height,0,p,f,u[t].data);for(let e=0;e<b.length;e++){const r=b[e],i=r.image[t].image;g?n.texSubImage2D(34069+t,e+1,0,0,i.width,i.height,p,f,i.data):n.texImage2D(34069+t,e+1,m,i.width,i.height,0,p,f,i.data)}}else{g?n.texSubImage2D(34069+t,0,0,0,p,f,u[t]):n.texImage2D(34069+t,0,m,p,f,u[t]);for(let e=0;e<b.length;e++){const r=b[e];g?n.texSubImage2D(34069+t,e+1,0,0,p,f,r.image[t]):n.texImage2D(34069+t,e+1,m,p,f,r.image[t])}}}_(r,d)&&w(34067),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}function V(e,i,s,o,l){const c=a.convert(s.format),u=a.convert(s.type),h=M(s.internalFormat,c,u,s.encoding),d=r.get(i);d.__hasExternalTextures||(32879===l||35866===l?n.texImage3D(l,0,h,i.width,i.height,i.depth,0,c,u,null):n.texImage2D(l,0,h,i.width,i.height,0,c,u,null)),n.bindFramebuffer(36160,e),i.useRenderToTexture?p.framebufferTexture2DMultisampleEXT(36160,o,l,r.get(s).__webglTexture,0,K(i)):t.framebufferTexture2D(36160,o,l,r.get(s).__webglTexture,0),n.bindFramebuffer(36160,null)}function W(e,n,r){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let i=33189;if(r||n.useRenderToTexture){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===Rt?i=36012:e.type===Lt&&(i=33190));const r=K(n);n.useRenderToTexture?p.renderbufferStorageMultisampleEXT(36161,r,i,n.width,n.height):t.renderbufferStorageMultisample(36161,r,i,n.width,n.height)}else t.renderbufferStorage(36161,i,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){const i=K(n);r&&n.useRenderbuffer?t.renderbufferStorageMultisample(36161,i,35056,n.width,n.height):n.useRenderToTexture?p.renderbufferStorageMultisampleEXT(36161,i,35056,n.width,n.height):t.renderbufferStorage(36161,34041,n.width,n.height),t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=!0===n.isWebGLMultipleRenderTargets?n.texture[0]:n.texture,i=a.convert(e.format),s=a.convert(e.type),o=M(e.internalFormat,i,s,e.encoding),l=K(n);r&&n.useRenderbuffer?t.renderbufferStorageMultisample(36161,l,o,n.width,n.height):n.useRenderToTexture?p.renderbufferStorageMultisampleEXT(36161,l,o,n.width,n.height):t.renderbufferStorage(36161,o,n.width,n.height)}t.bindRenderbuffer(36161,null)}function j(e,i){const a=i&&i.isWebGLCubeRenderTarget;if(a)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,e),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),I(i.depthTexture,0);const s=r.get(i.depthTexture).__webglTexture,o=K(i);if(i.depthTexture.format===kt)i.useRenderToTexture?p.framebufferTexture2DMultisampleEXT(36160,36096,3553,s,0,o):t.framebufferTexture2D(36160,36096,3553,s,0);else{if(i.depthTexture.format!==Gt)throw new Error("Unknown depthTexture format");i.useRenderToTexture?p.framebufferTexture2DMultisampleEXT(36160,33306,3553,s,0,o):t.framebufferTexture2D(36160,33306,3553,s,0)}}function q(e){const i=r.get(e),a=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture&&!i.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");j(i.__webglFramebuffer,e)}else if(a){i.__webglDepthbuffer=[];for(let r=0;r<6;r++)n.bindFramebuffer(36160,i.__webglFramebuffer[r]),i.__webglDepthbuffer[r]=t.createRenderbuffer(),W(i.__webglDepthbuffer[r],e,!1)}else n.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=t.createRenderbuffer(),W(i.__webglDepthbuffer,e,!1);n.bindFramebuffer(36160,null)}function X(t,e,n){const i=r.get(t);void 0!==e&&V(i.__webglFramebuffer,t,t.texture,36064,3553),void 0!==n&&q(t)}function Y(e){const l=e.texture,c=r.get(e),u=r.get(l);e.addEventListener("dispose",A),!0!==e.isWebGLMultipleRenderTargets&&(void 0===u.__webglTexture&&(u.__webglTexture=t.createTexture()),u.__version=l.version,s.memory.textures++);const h=!0===e.isWebGLCubeRenderTarget,d=!0===e.isWebGLMultipleRenderTargets,p=l.isDataTexture3D||l.isDataTexture2DArray,f=x(e)||o;if(!o||l.format!==Bt||l.type!==Rt&&l.type!==Pt||(l.format=Ft,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),h){c.__webglFramebuffer=[];for(let e=0;e<6;e++)c.__webglFramebuffer[e]=t.createFramebuffer()}else if(c.__webglFramebuffer=t.createFramebuffer(),d)if(i.drawBuffers){const n=e.texture;for(let e=0,i=n.length;e<i;e++){const i=r.get(n[e]);void 0===i.__webglTexture&&(i.__webglTexture=t.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(e.useRenderbuffer)if(o){c.__webglMultisampledFramebuffer=t.createFramebuffer(),c.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,c.__webglColorRenderbuffer);const r=a.convert(l.format),i=a.convert(l.type),s=M(l.internalFormat,r,i,l.encoding),o=K(e);t.renderbufferStorageMultisample(36161,o,s,e.width,e.height),n.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,c.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(c.__webglDepthRenderbuffer=t.createRenderbuffer(),W(c.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(h){n.bindTexture(34067,u.__webglTexture),U(34067,l,f);for(let t=0;t<6;t++)V(c.__webglFramebuffer[t],e,l,36064,34069+t);_(l,f)&&w(34067),n.unbindTexture()}else if(d){const t=e.texture;for(let i=0,a=t.length;i<a;i++){const a=t[i],s=r.get(a);n.bindTexture(3553,s.__webglTexture),U(3553,a,f),V(c.__webglFramebuffer,e,a,36064+i,3553),_(a,f)&&w(3553)}n.unbindTexture()}else{let t=3553;if(p)if(o){const e=l.isDataTexture3D;t=e?32879:35866}else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.");n.bindTexture(t,u.__webglTexture),U(t,l,f),V(c.__webglFramebuffer,e,l,36064,t),_(l,f)&&w(t),n.unbindTexture()}e.depthBuffer&&q(e)}function J(t){const e=x(t)||o,i=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let a=0,s=i.length;a<s;a++){const s=i[a];if(_(s,e)){const e=t.isWebGLCubeRenderTarget?34067:3553,i=r.get(s).__webglTexture;n.bindTexture(e,i),w(e),n.unbindTexture()}}}function Z(e){if(e.useRenderbuffer)if(o){const i=e.width,a=e.height;let s=16384;const o=[36064],l=e.stencilBuffer?33306:36096;e.depthBuffer&&o.push(l),e.ignoreDepthForMultisampleCopy||(e.depthBuffer&&(s|=256),e.stencilBuffer&&(s|=1024));const c=r.get(e);n.bindFramebuffer(36008,c.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,c.__webglFramebuffer),e.ignoreDepthForMultisampleCopy&&(t.invalidateFramebuffer(36008,[l]),t.invalidateFramebuffer(36009,[l])),t.blitFramebuffer(0,0,i,a,0,0,i,a,s,9728),t.invalidateFramebuffer(36008,o),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,c.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function K(t){return o&&(t.useRenderbuffer||t.useRenderToTexture)?Math.min(h,t.samples):0}function Q(t){const e=s.render.frame;f.get(t)!==e&&(f.set(t,e),t.update())}let $=!1,tt=!1;function et(t,e){t&&t.isWebGLRenderTarget&&(!1===$&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),$=!0),t=t.texture),I(t,e)}function nt(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===tt&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),tt=!0),t=t.texture),z(t,e)}this.allocateTextureUnit=D,this.resetTextureUnits=P,this.setTexture2D=I,this.setTexture2DArray=O,this.setTexture3D=N,this.setTextureCube=z,this.rebindTextures=X,this.setupRenderTarget=Y,this.updateRenderTargetMipmap=J,this.updateMultisampleRenderTarget=Z,this.setupDepthRenderbuffer=q,this.setupFrameBufferTexture=V,this.safeSetTexture2D=et,this.safeSetTextureCube=nt}function wh(t,e,n){const r=n.isWebGL2;function i(t){let n;if(t===St)return 5121;if(t===Dt)return 32819;if(t===It)return 32820;if(t===Ot)return 33635;if(t===Tt)return 5120;if(t===Et)return 5122;if(t===At)return 5123;if(t===Ct)return 5124;if(t===Lt)return 5125;if(t===Rt)return 5126;if(t===Pt)return r?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(t===zt)return 6406;if(t===Bt)return 6407;if(t===Ft)return 6408;if(t===Ut)return 6409;if(t===Ht)return 6410;if(t===kt)return 6402;if(t===Gt)return 34041;if(t===Vt)return 6403;if(t===Wt)return 36244;if(t===jt)return 33319;if(t===qt)return 33320;if(t===Xt)return 36248;if(t===Yt)return 36249;if(t===Jt||t===Zt||t===Kt||t===Qt){if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(t===Jt)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===Zt)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===Kt)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===Qt)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===$t||t===te||t===ee||t===ne){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(t===$t)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===te)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===ee)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===ne)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t===re)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((t===ie||t===ae)&&(n=e.get("WEBGL_compressed_texture_etc"),null!==n)){if(t===ie)return n.COMPRESSED_RGB8_ETC2;if(t===ae)return n.COMPRESSED_RGBA8_ETC2_EAC}return t===se||t===oe||t===le||t===ce||t===ue||t===he||t===de||t===pe||t===fe||t===me||t===ge||t===ve||t===ye||t===xe||t===_e||t===we||t===Me||t===Se||t===Te||t===Ee||t===Ae||t===Ce||t===Le||t===Re||t===Pe||t===De||t===Ie||t===Oe?(n=e.get("WEBGL_compressed_texture_astc"),null!==n?t:null):t===be?(n=e.get("EXT_texture_compression_bptc"),null!==n?t:null):t===Nt?r?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}return{convert:i}}class Mh extends za{constructor(t=[]){super(),this.cameras=t}}Mh.prototype.isArrayCamera=!0;class Sh extends xi{constructor(){super(),this.type="Group"}}Sh.prototype.isGroup=!0;const Th={type:"move"};class Eh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Sh,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Sh,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new vr,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new vr),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Sh,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new vr,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new vr),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let r=null,i=null,a=null;const s=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==s&&(r=e.getPose(t.targetRaySpace,n),null!==r&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),r.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(r.linearVelocity)):s.hasLinearVelocity=!1,r.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(r.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(Th))),l&&t.hand){a=!0;for(const a of t.hand.values()){const t=e.getJointPose(a,n);if(void 0===l.joints[a.jointName]){const t=new Sh;t.matrixAutoUpdate=!1,t.visible=!1,l.joints[a.jointName]=t,l.add(t)}const r=l.joints[a.jointName];null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=t.radius),r.visible=null!==t}const r=l.joints["index-finger-tip"],i=l.joints["thumb-tip"],s=r.position.distanceTo(i.position),o=.02,c=.005;l.inputState.pinching&&s>o+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&s<=o-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(i=e.getPose(t.gripSpace,n),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1));return null!==s&&(s.visible=null!==r),null!==o&&(o.visible=null!==i),null!==l&&(l.visible=null!==a),this}}class Ah extends ur{constructor(t,e,n,r,i,a,s,o,l,c){if(c=void 0!==c?c:kt,c!==kt&&c!==Gt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&c===kt&&(n=At),void 0===n&&c===Gt&&(n=Nt),super(null,r,i,a,s,o,c,n,l),this.image={width:t,height:e},this.magFilter=void 0!==s?s:ft,this.minFilter=void 0!==o?o:ft,this.flipY=!1,this.generateMipmaps=!1}}Ah.prototype.isDepthTexture=!0;class Ch extends Ln{constructor(t,e){super();const n=this;let r=null,i=1,a=null,s="local-floor";const o=t.extensions.has("WEBGL_multisampled_render_to_texture");let l=null,c=null,u=null,h=null,d=!1,p=null;const f=e.getContextAttributes();let m=null,g=null;const v=[],y=new Map,x=new za;x.layers.enable(1),x.viewport=new dr;const b=new za;b.layers.enable(2),b.viewport=new dr;const _=[x,b],w=new Mh;w.layers.enable(1),w.layers.enable(2);let M=null,S=null;function T(t){const e=y.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function E(){y.forEach((function(t,e){t.disconnect(e)})),y.clear(),M=null,S=null,t.setRenderTarget(m),h=null,u=null,c=null,r=null,g=null,O.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function A(t){const e=r.inputSources;for(let n=0;n<v.length;n++)y.set(e[n],v[n]);for(let n=0;n<t.removed.length;n++){const e=t.removed[n],r=y.get(e);r&&(r.dispatchEvent({type:"disconnected",data:e}),y.delete(e))}for(let n=0;n<t.added.length;n++){const e=t.added[n],r=y.get(e);r&&r.dispatchEvent({type:"connected",data:e})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=v[t];return void 0===e&&(e=new Eh,v[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=v[t];return void 0===e&&(e=new Eh,v[t]=e),e.getGripSpace()},this.getHand=function(t){let e=v[t];return void 0===e&&(e=new Eh,v[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){i=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){s=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return a},this.getBaseLayer=function(){return null!==u?u:h},this.getBinding=function(){return c},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(l){if(r=l,null!==r){if(m=t.getRenderTarget(),r.addEventListener("select",T),r.addEventListener("selectstart",T),r.addEventListener("selectend",T),r.addEventListener("squeeze",T),r.addEventListener("squeezestart",T),r.addEventListener("squeezeend",T),r.addEventListener("end",E),r.addEventListener("inputsourceschange",A),!0!==f.xrCompatible&&await e.makeXRCompatible(),void 0===r.renderState.layers||!1===t.capabilities.isWebGL2){const n={antialias:void 0!==r.renderState.layers||f.antialias,alpha:f.alpha,depth:f.depth,stencil:f.stencil,framebufferScaleFactor:i};h=new XRWebGLLayer(r,e,n),r.updateRenderState({baseLayer:h}),g=new pr(h.framebufferWidth,h.framebufferHeight,{format:Ft,type:St,encoding:t.outputEncoding})}else{d=f.antialias;let n=null,a=null,s=null;f.depth&&(s=f.stencil?35056:33190,n=f.stencil?Gt:kt,a=f.stencil?Nt:At);const l={colorFormat:f.alpha||d?32856:32849,depthFormat:s,scaleFactor:i};c=new XRWebGLBinding(r,e),u=c.createProjectionLayer(l),r.updateRenderState({layers:[u]}),g=d?new mr(u.textureWidth,u.textureHeight,{format:Ft,type:St,depthTexture:new Ah(u.textureWidth,u.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:f.stencil,ignoreDepth:u.ignoreDepthValues,useRenderToTexture:o,encoding:t.outputEncoding}):new pr(u.textureWidth,u.textureHeight,{format:f.alpha?Ft:Bt,type:St,depthTexture:new Ah(u.textureWidth,u.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:f.stencil,ignoreDepth:u.ignoreDepthValues,encoding:t.outputEncoding})}this.setFoveation(1),a=await r.requestReferenceSpace(s),O.setContext(r),O.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const C=new vr,L=new vr;function R(t,e,n){C.setFromMatrixPosition(e.matrixWorld),L.setFromMatrixPosition(n.matrixWorld);const r=C.distanceTo(L),i=e.projectionMatrix.elements,a=n.projectionMatrix.elements,s=i[14]/(i[10]-1),o=i[14]/(i[10]+1),l=(i[9]+1)/i[5],c=(i[9]-1)/i[5],u=(i[8]-1)/i[0],h=(a[8]+1)/a[0],d=s*u,p=s*h,f=r/(-u+h),m=f*-u;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=s+f,v=o+f,y=d-m,x=p+(r-m),b=l*o/v*g,_=c*o/v*g;t.projectionMatrix.makePerspective(y,x,b,_,g,v)}function P(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===r)return;w.near=b.near=x.near=t.near,w.far=b.far=x.far=t.far,M===w.near&&S===w.far||(r.updateRenderState({depthNear:w.near,depthFar:w.far}),M=w.near,S=w.far);const e=t.parent,n=w.cameras;P(w,e);for(let r=0;r<n.length;r++)P(n[r],e);w.matrixWorld.decompose(w.position,w.quaternion,w.scale),t.position.copy(w.position),t.quaternion.copy(w.quaternion),t.scale.copy(w.scale),t.matrix.copy(w.matrix),t.matrixWorld.copy(w.matrixWorld);const i=t.children;for(let r=0,a=i.length;r<a;r++)i[r].updateMatrixWorld(!0);2===n.length?R(w,x,b):w.projectionMatrix.copy(x.projectionMatrix)},this.getCamera=function(){return w},this.getFoveation=function(){return null!==u?u.fixedFoveation:null!==h?h.fixedFoveation:void 0},this.setFoveation=function(t){null!==u&&(u.fixedFoveation=t),null!==h&&void 0!==h.fixedFoveation&&(h.fixedFoveation=t)};let D=null;function I(e,n){if(l=n.getViewerPose(a),p=n,null!==l){const e=l.views;null!==h&&(t.setRenderTargetFramebuffer(g,h.framebuffer),t.setRenderTarget(g));let n=!1;e.length!==w.cameras.length&&(w.cameras.length=0,n=!0);for(let r=0;r<e.length;r++){const i=e[r];let a=null;if(null!==h)a=h.getViewport(i);else{const e=c.getViewSubImage(u,i);a=e.viewport,0===r&&(t.setRenderTargetTextures(g,e.colorTexture,u.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(g))}const s=_[r];s.matrix.fromArray(i.transform.matrix),s.projectionMatrix.fromArray(i.projectionMatrix),s.viewport.set(a.x,a.y,a.width,a.height),0===r&&w.matrix.copy(s.matrix),!0===n&&w.cameras.push(s)}}const i=r.inputSources;for(let t=0;t<v.length;t++){const e=v[t],r=i[t];e.update(r,n,a)}D&&D(e,n),p=null}const O=new Ja;O.setAnimationLoop(I),this.setAnimationLoop=function(t){D=t},this.dispose=function(){}}}function Lh(t){function e(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)}function n(t,e,n,m,y){e.isMeshBasicMaterial?r(t,e):e.isMeshLambertMaterial?(r(t,e),l(t,e)):e.isMeshToonMaterial?(r(t,e),u(t,e)):e.isMeshPhongMaterial?(r(t,e),c(t,e)):e.isMeshStandardMaterial?(r(t,e),e.isMeshPhysicalMaterial?d(t,e,y):h(t,e)):e.isMeshMatcapMaterial?(r(t,e),p(t,e)):e.isMeshDepthMaterial?(r(t,e),f(t,e)):e.isMeshDistanceMaterial?(r(t,e),g(t,e)):e.isMeshNormalMaterial?(r(t,e),v(t,e)):e.isLineBasicMaterial?(i(t,e),e.isLineDashedMaterial&&a(t,e)):e.isPointsMaterial?s(t,e,n,m):e.isSpriteMaterial?o(t,e):e.isShadowMaterial?(t.color.value.copy(e.color),t.opacity.value=e.opacity):e.isShaderMaterial&&(e.uniformsNeedUpdate=!1)}function r(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap),n.alphaTest>0&&(e.alphaTest.value=n.alphaTest);const r=t.get(n).envMap;let i,a;r&&(e.envMap.value=r,e.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,e.reflectivity.value=n.reflectivity,e.ior.value=n.ior,e.refractionRatio.value=n.refractionRatio),n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?i=n.map:n.specularMap?i=n.specularMap:n.displacementMap?i=n.displacementMap:n.normalMap?i=n.normalMap:n.bumpMap?i=n.bumpMap:n.roughnessMap?i=n.roughnessMap:n.metalnessMap?i=n.metalnessMap:n.alphaMap?i=n.alphaMap:n.emissiveMap?i=n.emissiveMap:n.clearcoatMap?i=n.clearcoatMap:n.clearcoatNormalMap?i=n.clearcoatNormalMap:n.clearcoatRoughnessMap?i=n.clearcoatRoughnessMap:n.specularIntensityMap?i=n.specularIntensityMap:n.specularColorMap?i=n.specularColorMap:n.transmissionMap?i=n.transmissionMap:n.thicknessMap?i=n.thicknessMap:n.sheenColorMap?i=n.sheenColorMap:n.sheenRoughnessMap&&(i=n.sheenRoughnessMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix)),n.aoMap?a=n.aoMap:n.lightMap&&(a=n.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),e.uv2Transform.value.copy(a.matrix))}function i(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}function a(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}function s(t,e,n,r){let i;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*r,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest),e.map?i=e.map:e.alphaMap&&(i=e.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}function o(t,e){let n;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.alphaTest>0&&(t.alphaTest.value=e.alphaTest),e.map?n=e.map:e.alphaMap&&(n=e.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}function l(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}function c(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function u(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function h(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,n.side===m&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),n.side===m&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias);const r=t.get(n).envMap;r&&(e.envMapIntensity.value=n.envMapIntensity)}function d(t,e,n){h(t,e),t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap)),e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===m&&t.clearcoatNormalScale.value.negate())),e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=n.texture,t.transmissionSamplerSize.value.set(n.width,n.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor)),t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap)}function p(t,e){e.matcap&&(t.matcap.value=e.matcap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function f(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function g(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}function v(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===m&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===m&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:n}}function Rh(){const t=sr("canvas");return t.style.display="block",t}function Ph(t={}){const e=void 0!==t.canvas?t.canvas:Rh(),n=void 0!==t.context?t.context:null,i=void 0!==t.alpha&&t.alpha,a=void 0===t.depth||t.depth,s=void 0===t.stencil||t.stencil,o=void 0!==t.antialias&&t.antialias,l=void 0===t.premultipliedAlpha||t.premultipliedAlpha,c=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,u=void 0!==t.powerPreference?t.powerPreference:"default",h=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let d=null,p=null;const v=[],y=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Je,this.physicallyCorrectLights=!1,this.toneMapping=Q,this.toneMappingExposure=1;const x=this;let b=!1,_=0,w=0,M=null,S=-1,T=null;const E=new dr,A=new dr;let C=null,L=e.width,R=e.height,P=1,D=null,I=null;const O=new dr(0,0,L,R),N=new dr(0,0,L,R);let z=!1;const B=[],F=new Ya;let U=!1,H=!1,k=null;const G=new Yr,V=new vr,W={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function j(){return null===M?P:1}let q,X,Y,J,Z,K,$,tt,et,nt,rt,it,at,st,ot,lt,ct,ut,ht,pt,mt,gt,vt,yt=n;function xt(t,n){for(let r=0;r<t.length;r++){const i=t[r],a=e.getContext(i,n);if(null!==a)return a}return null}try{const t={alpha:i,depth:a,stencil:s,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${r}`),e.addEventListener("webglcontextlost",Mt,!1),e.addEventListener("webglcontextrestored",Tt,!1),null===yt){const e=["webgl2","webgl","experimental-webgl"];if(!0===x.isWebGL1Renderer&&e.shift(),yt=xt(e,t),null===yt)throw xt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===yt.getShaderPrecisionFormat&&(yt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(Xt){throw console.error("THREE.WebGLRenderer: "+Xt.message),Xt}function bt(){q=new lc(yt),X=new Pl(yt,q,t),q.init(X),gt=new wh(yt,q,X),Y=new bh(yt,q,X),B[0]=1029,J=new hc(yt),Z=new rh,K=new _h(yt,q,Y,Z,X,gt,J),$=new Il(x),tt=new oc(x),et=new Za(yt,X),vt=new Ll(yt,q,et,X),nt=new cc(yt,et,J,vt),rt=new vc(yt,nt,et,J),ht=new gc(yt,X,K),lt=new Dl(Z),it=new nh(x,$,tt,q,X,vt,lt),at=new Lh(Z),st=new oh,ot=new fh(q,X),ut=new Cl(x,$,Y,rt,l),ct=new xh(x,rt,X),pt=new Rl(yt,q,J,X),mt=new uc(yt,q,J,X),J.programs=it.programs,x.capabilities=X,x.extensions=q,x.properties=Z,x.renderLists=st,x.shadowMap=ct,x.state=Y,x.info=J}bt();const _t=new Ch(x,yt);function Mt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),b=!0}function Tt(){console.log("THREE.WebGLRenderer: Context Restored."),b=!1;const t=J.autoReset,e=ct.enabled,n=ct.autoUpdate,r=ct.needsUpdate,i=ct.type;bt(),J.autoReset=t,ct.enabled=e,ct.autoUpdate=n,ct.needsUpdate=r,ct.type=i}function Et(t){const e=t.target;e.removeEventListener("dispose",Et),At(e)}function At(t){Ct(t),Z.remove(t)}function Ct(t){const e=Z.get(t).programs;void 0!==e&&(e.forEach((function(t){it.releaseProgram(t)})),t.isShaderMaterial&&it.releaseShaderCache(t))}this.xr=_t,this.getContext=function(){return yt},this.getContextAttributes=function(){return yt.getContextAttributes()},this.forceContextLoss=function(){const t=q.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=q.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return P},this.setPixelRatio=function(t){void 0!==t&&(P=t,this.setSize(L,R,!1))},this.getSize=function(t){return t.set(L,R)},this.setSize=function(t,n,r){_t.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(L=t,R=n,e.width=Math.floor(t*P),e.height=Math.floor(n*P),!1!==r&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(L*P,R*P).floor()},this.setDrawingBufferSize=function(t,n,r){L=t,R=n,P=r,e.width=Math.floor(t*r),e.height=Math.floor(n*r),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(E)},this.getViewport=function(t){return t.copy(O)},this.setViewport=function(t,e,n,r){t.isVector4?O.set(t.x,t.y,t.z,t.w):O.set(t,e,n,r),Y.viewport(E.copy(O).multiplyScalar(P).floor())},this.getScissor=function(t){return t.copy(N)},this.setScissor=function(t,e,n,r){t.isVector4?N.set(t.x,t.y,t.z,t.w):N.set(t,e,n,r),Y.scissor(A.copy(N).multiplyScalar(P).floor())},this.getScissorTest=function(){return z},this.setScissorTest=function(t){Y.setScissorTest(z=t)},this.setOpaqueSort=function(t){D=t},this.setTransparentSort=function(t){I=t},this.getClearColor=function(t){return t.copy(ut.getClearColor())},this.setClearColor=function(){ut.setClearColor.apply(ut,arguments)},this.getClearAlpha=function(){return ut.getClearAlpha()},this.setClearAlpha=function(){ut.setClearAlpha.apply(ut,arguments)},this.clear=function(t,e,n){let r=0;(void 0===t||t)&&(r|=16384),(void 0===e||e)&&(r|=256),(void 0===n||n)&&(r|=1024),yt.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Mt,!1),e.removeEventListener("webglcontextrestored",Tt,!1),st.dispose(),ot.dispose(),Z.dispose(),$.dispose(),tt.dispose(),rt.dispose(),vt.dispose(),it.dispose(),_t.dispose(),_t.removeEventListener("sessionstart",It),_t.removeEventListener("sessionend",Ot),k&&(k.dispose(),k=null),Nt.stop()},this.renderBufferDirect=function(t,e,n,r,i,a){null===e&&(e=W);const s=i.isMesh&&i.matrixWorld.determinant()<0,o=Wt(t,e,n,r,i);Y.setMaterial(r,s);let l=n.index;const c=n.attributes.position;if(null===l){if(void 0===c||0===c.count)return}else if(0===l.count)return;let u,h=1;!0===r.wireframe&&(l=nt.getWireframeAttribute(n),h=2),vt.setup(i,r,o,n,l);let d=pt;null!==l&&(u=et.get(l),d=mt,d.setIndex(u));const p=null!==l?l.count:c.count,f=n.drawRange.start*h,m=n.drawRange.count*h,g=null!==a?a.start*h:0,v=null!==a?a.count*h:1/0,y=Math.max(f,g),x=Math.min(p,f+m,g+v)-1,b=Math.max(0,x-y+1);if(0!==b){if(i.isMesh)!0===r.wireframe?(Y.setLineWidth(r.wireframeLinewidth*j()),d.setMode(1)):d.setMode(4);else if(i.isLine){let t=r.linewidth;void 0===t&&(t=1),Y.setLineWidth(t*j()),i.isLineSegments?d.setMode(1):i.isLineLoop?d.setMode(2):d.setMode(3)}else i.isPoints?d.setMode(0):i.isSprite&&d.setMode(4);if(i.isInstancedMesh)d.renderInstances(y,b,i.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(y,b,t)}else d.render(y,b)}},this.compile=function(t,e){p=ot.get(t),p.init(),y.push(p),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(p.pushLight(t),t.castShadow&&p.pushShadow(t))})),p.setupLights(x.physicallyCorrectLights),t.traverse((function(e){const n=e.material;if(n)if(Array.isArray(n))for(let r=0;r<n.length;r++){const i=n[r];Gt(i,t,e)}else Gt(n,t,e)})),y.pop(),p=null};let Lt=null;function Dt(t){Lt&&Lt(t)}function It(){Nt.stop()}function Ot(){Nt.start()}const Nt=new Ja;function zt(t,e,n,r){if(!1===t.visible)return;const i=t.layers.test(e.layers);if(i)if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)p.pushLight(t),t.castShadow&&p.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||F.intersectsSprite(t)){r&&V.setFromMatrixPosition(t.matrixWorld).applyMatrix4(G);const e=rt.update(t),i=t.material;i.visible&&d.push(t,e,i,n,V.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==J.render.frame&&(t.skeleton.update(),t.skeleton.frame=J.render.frame),!t.frustumCulled||F.intersectsObject(t))){r&&V.setFromMatrixPosition(t.matrixWorld).applyMatrix4(G);const e=rt.update(t),i=t.material;if(Array.isArray(i)){const r=e.groups;for(let a=0,s=r.length;a<s;a++){const s=r[a],o=i[s.materialIndex];o&&o.visible&&d.push(t,e,o,n,V.z,s)}}else i.visible&&d.push(t,e,i,n,V.z,null)}const a=t.children;for(let s=0,o=a.length;s<o;s++)zt(a[s],e,n,r)}function Bt(t,e,n,r){const i=t.opaque,a=t.transmissive,s=t.transparent;p.setupLightsView(n),a.length>0&&Ut(i,e,n),r&&Y.viewport(E.copy(r)),i.length>0&&Ht(i,e,n),a.length>0&&Ht(a,e,n),s.length>0&&Ht(s,e,n)}function Ut(t,e,n){if(null===k){const t=!0===o&&!0===X.isWebGL2,e=t?mr:pr;k=new e(1024,1024,{generateMipmaps:!0,type:null!==gt.convert(Pt)?Pt:St,minFilter:wt,magFilter:ft,wrapS:dt,wrapT:dt,useRenderToTexture:q.has("WEBGL_multisampled_render_to_texture")})}const r=x.getRenderTarget();x.setRenderTarget(k),x.clear();const i=x.toneMapping;x.toneMapping=Q,Ht(t,e,n),x.toneMapping=i,K.updateMultisampleRenderTarget(k),K.updateRenderTargetMipmap(k),x.setRenderTarget(r)}function Ht(t,e,n){const r=!0===e.isScene?e.overrideMaterial:null;for(let i=0,a=t.length;i<a;i++){const a=t[i],s=a.object,o=a.geometry,l=null===r?a.material:r,c=a.group;s.layers.test(n.layers)&&kt(s,e,n,o,l,c)}}function kt(t,e,n,r,i,a){t.onBeforeRender(x,e,n,r,i,a),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),i.onBeforeRender(x,e,n,r,t,a),!0===i.transparent&&i.side===g?(i.side=m,i.needsUpdate=!0,x.renderBufferDirect(n,e,r,i,t,a),i.side=f,i.needsUpdate=!0,x.renderBufferDirect(n,e,r,i,t,a),i.side=g):x.renderBufferDirect(n,e,r,i,t,a),t.onAfterRender(x,e,n,r,i,a)}function Gt(t,e,n){!0!==e.isScene&&(e=W);const r=Z.get(t),i=p.state.lights,a=p.state.shadowsArray,s=i.state.version,o=it.getParameters(t,i.state,a,e,n),l=it.getProgramCacheKey(o);let c=r.programs;r.environment=t.isMeshStandardMaterial?e.environment:null,r.fog=e.fog,r.envMap=(t.isMeshStandardMaterial?tt:$).get(t.envMap||r.environment),void 0===c&&(t.addEventListener("dispose",Et),c=new Map,r.programs=c);let u=c.get(l);if(void 0!==u){if(r.currentProgram===u&&r.lightsStateVersion===s)return Vt(t,o),u}else o.uniforms=it.getUniforms(t),t.onBuild(n,o,x),t.onBeforeCompile(o,x),u=it.acquireProgram(o,l),c.set(l,u),r.uniforms=o.uniforms;const h=r.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(h.clippingPlanes=lt.uniform),Vt(t,o),r.needsLights=qt(t),r.lightsStateVersion=s,r.needsLights&&(h.ambientLightColor.value=i.state.ambient,h.lightProbe.value=i.state.probe,h.directionalLights.value=i.state.directional,h.directionalLightShadows.value=i.state.directionalShadow,h.spotLights.value=i.state.spot,h.spotLightShadows.value=i.state.spotShadow,h.rectAreaLights.value=i.state.rectArea,h.ltc_1.value=i.state.rectAreaLTC1,h.ltc_2.value=i.state.rectAreaLTC2,h.pointLights.value=i.state.point,h.pointLightShadows.value=i.state.pointShadow,h.hemisphereLights.value=i.state.hemi,h.directionalShadowMap.value=i.state.directionalShadowMap,h.directionalShadowMatrix.value=i.state.directionalShadowMatrix,h.spotShadowMap.value=i.state.spotShadowMap,h.spotShadowMatrix.value=i.state.spotShadowMatrix,h.pointShadowMap.value=i.state.pointShadowMap,h.pointShadowMatrix.value=i.state.pointShadowMatrix);const d=u.getUniforms(),f=Su.seqWithValue(d.seq,h);return r.currentProgram=u,r.uniformsList=f,u}function Vt(t,e){const n=Z.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents,n.toneMapping=e.toneMapping}function Wt(t,e,n,r,i){!0!==e.isScene&&(e=W),K.resetTextureUnits();const a=e.fog,s=r.isMeshStandardMaterial?e.environment:null,o=null===M?x.outputEncoding:M.texture.encoding,l=(r.isMeshStandardMaterial?tt:$).get(r.envMap||s),c=!0===r.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,u=!!r.normalMap&&!!n.attributes.tangent,h=!!n.morphAttributes.position,d=!!n.morphAttributes.normal,f=n.morphAttributes.position?n.morphAttributes.position.length:0,m=r.toneMapped?x.toneMapping:Q,g=Z.get(r),v=p.state.lights;if(!0===U&&(!0===H||t!==T)){const e=t===T&&r.id===S;lt.setState(r,t,e)}let y=!1;r.version===g.__version?g.needsLights&&g.lightsStateVersion!==v.state.version||g.outputEncoding!==o||i.isInstancedMesh&&!1===g.instancing?y=!0:i.isInstancedMesh||!0!==g.instancing?i.isSkinnedMesh&&!1===g.skinning?y=!0:i.isSkinnedMesh||!0!==g.skinning?g.envMap!==l||r.fog&&g.fog!==a?y=!0:void 0===g.numClippingPlanes||g.numClippingPlanes===lt.numPlanes&&g.numIntersection===lt.numIntersection?(g.vertexAlphas!==c||g.vertexTangents!==u||g.morphTargets!==h||g.morphNormals!==d||g.toneMapping!==m||!0===X.isWebGL2&&g.morphTargetsCount!==f)&&(y=!0):y=!0:y=!0:y=!0:(y=!0,g.__version=r.version);let b=g.currentProgram;!0===y&&(b=Gt(r,e,i));let _=!1,w=!1,E=!1;const A=b.getUniforms(),C=g.uniforms;if(Y.useProgram(b.program)&&(_=!0,w=!0,E=!0),r.id!==S&&(S=r.id,w=!0),_||T!==t){if(A.setValue(yt,"projectionMatrix",t.projectionMatrix),X.logarithmicDepthBuffer&&A.setValue(yt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),T!==t&&(T=t,w=!0,E=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const e=A.map.cameraPosition;void 0!==e&&e.setValue(yt,V.setFromMatrixPosition(t.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&A.setValue(yt,"isOrthographic",!0===t.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||i.isSkinnedMesh)&&A.setValue(yt,"viewMatrix",t.matrixWorldInverse)}if(i.isSkinnedMesh){A.setOptional(yt,i,"bindMatrix"),A.setOptional(yt,i,"bindMatrixInverse");const t=i.skeleton;t&&(X.floatVertexTextures?(null===t.boneTexture&&t.computeBoneTexture(),A.setValue(yt,"boneTexture",t.boneTexture,K),A.setValue(yt,"boneTextureSize",t.boneTextureSize)):A.setOptional(yt,t,"boneMatrices"))}return!n||void 0===n.morphAttributes.position&&void 0===n.morphAttributes.normal||ht.update(i,n,r,b),(w||g.receiveShadow!==i.receiveShadow)&&(g.receiveShadow=i.receiveShadow,A.setValue(yt,"receiveShadow",i.receiveShadow)),w&&(A.setValue(yt,"toneMappingExposure",x.toneMappingExposure),g.needsLights&&jt(C,E),a&&r.fog&&at.refreshFogUniforms(C,a),at.refreshMaterialUniforms(C,r,P,R,k),Su.upload(yt,g.uniformsList,C,K)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(Su.upload(yt,g.uniformsList,C,K),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&A.setValue(yt,"center",i.center),A.setValue(yt,"modelViewMatrix",i.modelViewMatrix),A.setValue(yt,"normalMatrix",i.normalMatrix),A.setValue(yt,"modelMatrix",i.matrixWorld),b}function jt(t,e){t.ambientLightColor.needsUpdate=e,t.lightProbe.needsUpdate=e,t.directionalLights.needsUpdate=e,t.directionalLightShadows.needsUpdate=e,t.pointLights.needsUpdate=e,t.pointLightShadows.needsUpdate=e,t.spotLights.needsUpdate=e,t.spotLightShadows.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}function qt(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}Nt.setAnimationLoop(Dt),"undefined"!==typeof window&&Nt.setContext(window),this.setAnimationLoop=function(t){Lt=t,_t.setAnimationLoop(t),null===t?Nt.stop():Nt.start()},_t.addEventListener("sessionstart",It),_t.addEventListener("sessionend",Ot),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===b)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===_t.enabled&&!0===_t.isPresenting&&(!0===_t.cameraAutoUpdate&&_t.updateCamera(e),e=_t.getCamera()),!0===t.isScene&&t.onBeforeRender(x,t,e,M),p=ot.get(t,y.length),p.init(),y.push(p),G.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),F.setFromProjectionMatrix(G),H=this.localClippingEnabled,U=lt.init(this.clippingPlanes,H,e),d=st.get(t,v.length),d.init(),v.push(d),zt(t,e,0,x.sortObjects),d.finish(),!0===x.sortObjects&&d.sort(D,I),!0===U&&lt.beginShadows();const n=p.state.shadowsArray;if(ct.render(n,t,e),!0===U&&lt.endShadows(),!0===this.info.autoReset&&this.info.reset(),ut.render(d,t),p.setupLights(x.physicallyCorrectLights),e.isArrayCamera){const n=e.cameras;for(let e=0,r=n.length;e<r;e++){const r=n[e];Bt(d,t,r,r.viewport)}}else Bt(d,t,e);null!==M&&(K.updateMultisampleRenderTarget(M),K.updateRenderTargetMipmap(M)),!0===t.isScene&&t.onAfterRender(x,t,e),Y.buffers.depth.setTest(!0),Y.buffers.depth.setMask(!0),Y.buffers.color.setMask(!0),Y.setPolygonOffset(!1),vt.resetDefaultState(),S=-1,T=null,y.pop(),p=y.length>0?y[y.length-1]:null,v.pop(),d=v.length>0?v[v.length-1]:null},this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return M},this.setRenderTargetTextures=function(t,e,n){Z.get(t.texture).__webglTexture=e,Z.get(t.depthTexture).__webglTexture=n;const r=Z.get(t);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===n,r.__autoAllocateDepthBuffer||t.useRenderToTexture&&(console.warn("render-to-texture extension was disabled because an external texture was provided"),t.useRenderToTexture=!1,t.useRenderbuffer=!0))},this.setRenderTargetFramebuffer=function(t,e){const n=Z.get(t);n.__webglFramebuffer=e,n.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,n=0){M=t,_=e,w=n;let r=!0;if(t){const e=Z.get(t);void 0!==e.__useDefaultFramebuffer?(Y.bindFramebuffer(36160,null),r=!1):void 0===e.__webglFramebuffer?K.setupRenderTarget(t):e.__hasExternalTextures&&K.rebindTextures(t,Z.get(t.texture).__webglTexture,Z.get(t.depthTexture).__webglTexture)}let i=null,a=!1,s=!1;if(t){const n=t.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(s=!0);const r=Z.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(i=r[e],a=!0):i=t.useRenderbuffer?Z.get(t).__webglMultisampledFramebuffer:r,E.copy(t.viewport),A.copy(t.scissor),C=t.scissorTest}else E.copy(O).multiplyScalar(P).floor(),A.copy(N).multiplyScalar(P).floor(),C=z;const o=Y.bindFramebuffer(36160,i);if(o&&X.drawBuffers&&r){let e=!1;if(t)if(t.isWebGLMultipleRenderTargets){const n=t.texture;if(B.length!==n.length||36064!==B[0]){for(let t=0,e=n.length;t<e;t++)B[t]=36064+t;B.length=n.length,e=!0}}else 1===B.length&&36064===B[0]||(B[0]=36064,B.length=1,e=!0);else 1===B.length&&1029===B[0]||(B[0]=1029,B.length=1,e=!0);e&&(X.isWebGL2?yt.drawBuffers(B):q.get("WEBGL_draw_buffers").drawBuffersWEBGL(B))}if(Y.viewport(E),Y.scissor(A),Y.setScissorTest(C),a){const r=Z.get(t.texture);yt.framebufferTexture2D(36160,36064,34069+e,r.__webglTexture,n)}else if(s){const r=Z.get(t.texture),i=e||0;yt.framebufferTextureLayer(36160,36064,r.__webglTexture,n||0,i)}S=-1},this.readRenderTargetPixels=function(t,e,n,r,i,a,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=Z.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){Y.bindFramebuffer(36160,o);try{const s=t.texture,o=s.format,l=s.type;if(o!==Ft&&gt.convert(o)!==yt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const c=l===Pt&&(q.has("EXT_color_buffer_half_float")||X.isWebGL2&&q.has("EXT_color_buffer_float"));if(l!==St&&gt.convert(l)!==yt.getParameter(35738)&&(l!==Rt||!(X.isWebGL2||q.has("OES_texture_float")||q.has("WEBGL_color_buffer_float")))&&!c)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===yt.checkFramebufferStatus(36160)?e>=0&&e<=t.width-r&&n>=0&&n<=t.height-i&&yt.readPixels(e,n,r,i,gt.convert(o),gt.convert(l),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const t=null!==M?Z.get(M).__webglFramebuffer:null;Y.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){if(!0!==e.isFramebufferTexture)return void console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");const r=Math.pow(2,-n),i=Math.floor(e.image.width*r),a=Math.floor(e.image.height*r);K.setTexture2D(e,0),yt.copyTexSubImage2D(3553,n,0,0,t.x,t.y,i,a),Y.unbindTexture()},this.copyTextureToTexture=function(t,e,n,r=0){const i=e.image.width,a=e.image.height,s=gt.convert(n.format),o=gt.convert(n.type);K.setTexture2D(n,0),yt.pixelStorei(37440,n.flipY),yt.pixelStorei(37441,n.premultiplyAlpha),yt.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?yt.texSubImage2D(3553,r,t.x,t.y,i,a,s,o,e.image.data):e.isCompressedTexture?yt.compressedTexSubImage2D(3553,r,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):yt.texSubImage2D(3553,r,t.x,t.y,s,o,e.image),0===r&&n.generateMipmaps&&yt.generateMipmap(3553),Y.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,r,i=0){if(x.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const a=t.max.x-t.min.x+1,s=t.max.y-t.min.y+1,o=t.max.z-t.min.z+1,l=gt.convert(r.format),c=gt.convert(r.type);let u;if(r.isDataTexture3D)K.setTexture3D(r,0),u=32879;else{if(!r.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");K.setTexture2DArray(r,0),u=35866}yt.pixelStorei(37440,r.flipY),yt.pixelStorei(37441,r.premultiplyAlpha),yt.pixelStorei(3317,r.unpackAlignment);const h=yt.getParameter(3314),d=yt.getParameter(32878),p=yt.getParameter(3316),f=yt.getParameter(3315),m=yt.getParameter(32877),g=n.isCompressedTexture?n.mipmaps[0]:n.image;yt.pixelStorei(3314,g.width),yt.pixelStorei(32878,g.height),yt.pixelStorei(3316,t.min.x),yt.pixelStorei(3315,t.min.y),yt.pixelStorei(32877,t.min.z),n.isDataTexture||n.isDataTexture3D?yt.texSubImage3D(u,i,e.x,e.y,e.z,a,s,o,l,c,g.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),yt.compressedTexSubImage3D(u,i,e.x,e.y,e.z,a,s,o,l,g.data)):yt.texSubImage3D(u,i,e.x,e.y,e.z,a,s,o,l,c,g),yt.pixelStorei(3314,h),yt.pixelStorei(32878,d),yt.pixelStorei(3316,p),yt.pixelStorei(3315,f),yt.pixelStorei(32877,m),0===i&&r.generateMipmaps&&yt.generateMipmap(u),Y.unbindTexture()},this.initTexture=function(t){K.setTexture2D(t,0),Y.unbindTexture()},this.resetState=function(){_=0,w=0,M=null,Y.reset(),vt.reset()},"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Ph.prototype.isWebGLRenderer=!0;class Dh extends Ph{}Dh.prototype.isWebGL1Renderer=!0;class Ih{constructor(t,e=25e-5){this.name="",this.color=new Ui(t),this.density=e}clone(){return new Ih(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Ih.prototype.isFogExp2=!0;class Oh{constructor(t,e=1,n=1e3){this.name="",this.color=new Ui(t),this.near=e,this.far=n}clone(){return new Oh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Oh.prototype.isFog=!0;class Nh extends xi{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}Nh.prototype.isScene=!0;class zh{constructor(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=yn,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=On()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let r=0,i=this.stride;r<i;r++)this.array[t+r]=e.array[n+r];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=On()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=On()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}zh.prototype.isInterleavedBuffer=!0;const Bh=new vr;class Fh{constructor(t,e,n,r=!1){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)Bh.x=this.getX(e),Bh.y=this.getY(e),Bh.z=this.getZ(e),Bh.applyMatrix4(t),this.setXYZ(e,Bh.x,Bh.y,Bh.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Bh.x=this.getX(e),Bh.y=this.getY(e),Bh.z=this.getZ(e),Bh.applyNormalMatrix(t),this.setXYZ(e,Bh.x,Bh.y,Bh.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Bh.x=this.getX(e),Bh.y=this.getY(e),Bh.z=this.getZ(e),Bh.transformDirection(t),this.setXYZ(e,Bh.x,Bh.y,Bh.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this}setXYZW(t,e,n,r,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this.data.array[t+3]=i,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new Vi(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Fh(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}Fh.prototype.isInterleavedBufferAttribute=!0;class Uh extends Di{constructor(t){super(),this.type="SpriteMaterial",this.color=new Ui(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}let Hh;Uh.prototype.isSpriteMaterial=!0;const kh=new vr,Gh=new vr,Vh=new vr,Wh=new er,jh=new er,qh=new Yr,Xh=new vr,Yh=new vr,Jh=new vr,Zh=new er,Kh=new er,Qh=new er;class $h extends xi{constructor(t){if(super(),this.type="Sprite",void 0===Hh){Hh=new oa;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new zh(t,5);Hh.setIndex([0,1,2,0,2,3]),Hh.setAttribute("position",new Fh(e,3,0,!1)),Hh.setAttribute("uv",new Fh(e,2,3,!1))}this.geometry=Hh,this.material=void 0!==t?t:new Uh,this.center=new er(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Gh.setFromMatrixScale(this.matrixWorld),qh.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Vh.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Gh.multiplyScalar(-Vh.z);const n=this.material.rotation;let r,i;0!==n&&(i=Math.cos(n),r=Math.sin(n));const a=this.center;td(Xh.set(-.5,-.5,0),Vh,a,Gh,r,i),td(Yh.set(.5,-.5,0),Vh,a,Gh,r,i),td(Jh.set(.5,.5,0),Vh,a,Gh,r,i),Zh.set(0,0),Kh.set(1,0),Qh.set(1,1);let s=t.ray.intersectTriangle(Xh,Yh,Jh,!1,kh);if(null===s&&(td(Yh.set(-.5,.5,0),Vh,a,Gh,r,i),Kh.set(0,1),s=t.ray.intersectTriangle(Xh,Jh,Yh,!1,kh),null===s))return;const o=t.ray.origin.distanceTo(kh);o<t.near||o>t.far||e.push({distance:o,point:kh.clone(),uv:Ri.getUV(kh,Xh,Yh,Jh,Zh,Kh,Qh,new er),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function td(t,e,n,r,i,a){Wh.subVectors(t,n).addScalar(.5).multiply(r),void 0!==i?(jh.x=a*Wh.x-i*Wh.y,jh.y=i*Wh.x+a*Wh.y):jh.copy(Wh),t.copy(e),t.x+=jh.x,t.y+=jh.y,t.applyMatrix4(qh)}$h.prototype.isSprite=!0;const ed=new vr,nd=new vr;class rd extends xi{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,r=e.length;n<r;n++){const t=e[n];this.addLevel(t.object.clone(),t.distance)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0){e=Math.abs(e);const n=this.levels;let r;for(r=0;r<n.length;r++)if(e<n[r].distance)break;return n.splice(r,0,{distance:e,object:t}),this.add(t),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,r;for(n=1,r=e.length;n<r;n++)if(t<e[n].distance)break;return e[n-1].object}return null}raycast(t,e){const n=this.levels;if(n.length>0){ed.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(ed);this.getObjectForDistance(n).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){ed.setFromMatrixPosition(t.matrixWorld),nd.setFromMatrixPosition(this.matrixWorld);const n=ed.distanceTo(nd)/t.zoom;let r,i;for(e[0].object.visible=!0,r=1,i=e.length;r<i;r++){if(!(n>=e[r].distance))break;e[r-1].object.visible=!1,e[r].object.visible=!0}for(this._currentLevel=r-1;r<i;r++)e[r].object.visible=!1}}toJSON(t){const e=super.toJSON(t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let r=0,i=n.length;r<i;r++){const t=n[r];e.object.levels.push({object:t.object.uuid,distance:t.distance})}return e}}const id=new vr,ad=new dr,sd=new dr,od=new vr,ld=new Yr;class cd extends Ta{constructor(t,e){super(t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Yr,this.bindMatrixInverse=new Yr}copy(t){return super.copy(t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new dr,e=this.geometry.attributes.skinWeight;for(let n=0,r=e.count;n<r;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const n=this.skeleton,r=this.geometry;ad.fromBufferAttribute(r.attributes.skinIndex,t),sd.fromBufferAttribute(r.attributes.skinWeight,t),id.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let i=0;i<4;i++){const t=sd.getComponent(i);if(0!==t){const r=ad.getComponent(i);ld.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]),e.addScaledVector(od.copy(id).applyMatrix4(ld),t)}}return e.applyMatrix4(this.bindMatrixInverse)}}cd.prototype.isSkinnedMesh=!0;class ud extends xi{constructor(){super(),this.type="Bone"}}ud.prototype.isBone=!0;class hd extends ur{constructor(t=null,e=1,n=1,r,i,a,s,o,l=ft,c=ft,u,h){super(null,a,s,o,l,c,r,i,u,h),this.image={data:t,width:e,height:n},this.magFilter=l,this.minFilter=c,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}hd.prototype.isDataTexture=!0;const dd=new Yr,pd=new Yr;class fd{constructor(t=[],e=[]){this.uuid=On(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new Yr)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new Yr;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let i=0,a=t.length;i<a;i++){const r=t[i]?t[i].matrixWorld:pd;dd.multiplyMatrices(r,e[i]),dd.toArray(n,16*i)}null!==r&&(r.needsUpdate=!0)}clone(){return new fd(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(4*this.bones.length);t=Kn(t),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new hd(e,t,t,Ft,Rt);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this.boneTextureSize=t,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,r=t.bones.length;n<r;n++){const r=t.bones[n];let i=e[r];void 0===i&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),i=new ud),this.bones.push(i),this.boneInverses.push((new Yr).fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let r=0,i=e.length;r<i;r++){const i=e[r];t.bones.push(i.uuid);const a=n[r];t.boneInverses.push(a.toArray())}return t}}class md extends Vi{constructor(t,e,n,r=1){"number"===typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(t,e,n),this.meshPerAttribute=r}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}md.prototype.isInstancedBufferAttribute=!0;const gd=new Yr,vd=new Yr,yd=[],xd=new Ta;class bd extends Ta{constructor(t,e,n){super(t,e),this.instanceMatrix=new md(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(t){return super.copy(t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const n=this.matrixWorld,r=this.count;if(xd.geometry=this.geometry,xd.material=this.material,void 0!==xd.material)for(let i=0;i<r;i++){this.getMatrixAt(i,gd),vd.multiplyMatrices(n,gd),xd.matrixWorld=vd,xd.raycast(t,yd);for(let t=0,n=yd.length;t<n;t++){const n=yd[t];n.instanceId=i,n.object=this,e.push(n)}yd.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new md(new Float32Array(3*this.instanceMatrix.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}bd.prototype.isInstancedMesh=!0;class _d extends Di{constructor(t){super(),this.type="LineBasicMaterial",this.color=new Ui(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this}}_d.prototype.isLineBasicMaterial=!0;const wd=new vr,Md=new vr,Sd=new Yr,Td=new Xr,Ed=new Ur;class Ad extends xi{constructor(t=new oa,e=new _d){super(),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,r=e.count;t<r;t++)wd.fromBufferAttribute(e,t-1),Md.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=wd.distanceTo(Md);t.setAttribute("lineDistance",new Qi(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Ed.copy(n.boundingSphere),Ed.applyMatrix4(r),Ed.radius+=i,!1===t.ray.intersectsSphere(Ed))return;Sd.copy(r).invert(),Td.copy(t.ray).applyMatrix4(Sd);const s=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=new vr,c=new vr,u=new vr,h=new vr,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const r=n.index,i=n.attributes,s=i.position;if(null!==r){const n=Math.max(0,a.start),i=Math.min(r.count,a.start+a.count);for(let a=n,p=i-1;a<p;a+=d){const n=r.getX(a),i=r.getX(a+1);l.fromBufferAttribute(s,n),c.fromBufferAttribute(s,i);const d=Td.distanceSqToSegment(l,c,h,u);if(d>o)continue;h.applyMatrix4(this.matrixWorld);const p=t.ray.origin.distanceTo(h);p<t.near||p>t.far||e.push({distance:p,point:u.clone().applyMatrix4(this.matrixWorld),index:a,face:null,faceIndex:null,object:this})}}else{const n=Math.max(0,a.start),r=Math.min(s.count,a.start+a.count);for(let i=n,a=r-1;i<a;i+=d){l.fromBufferAttribute(s,i),c.fromBufferAttribute(s,i+1);const n=Td.distanceSqToSegment(l,c,h,u);if(n>o)continue;h.applyMatrix4(this.matrixWorld);const r=t.ray.origin.distanceTo(h);r<t.near||r>t.far||e.push({distance:r,point:u.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Ad.prototype.isLine=!0;const Cd=new vr,Ld=new vr;class Rd extends Ad{constructor(t,e){super(t,e),this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,r=e.count;t<r;t+=2)Cd.fromBufferAttribute(e,t),Ld.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+Cd.distanceTo(Ld);t.setAttribute("lineDistance",new Qi(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}Rd.prototype.isLineSegments=!0;class Pd extends Ad{constructor(t,e){super(t,e),this.type="LineLoop"}}Pd.prototype.isLineLoop=!0;class Dd extends Di{constructor(t){super(),this.type="PointsMaterial",this.color=new Ui(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this}}Dd.prototype.isPointsMaterial=!0;const Id=new Yr,Od=new Xr,Nd=new Ur,zd=new vr;class Bd extends xi{constructor(t=new oa,e=new Dd){super(),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Points.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Nd.copy(n.boundingSphere),Nd.applyMatrix4(r),Nd.radius+=i,!1===t.ray.intersectsSphere(Nd))return;Id.copy(r).invert(),Od.copy(t.ray).applyMatrix4(Id);const s=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){const i=n.index,s=n.attributes,l=s.position;if(null!==i){const n=Math.max(0,a.start),s=Math.min(i.count,a.start+a.count);for(let a=n,c=s;a<c;a++){const n=i.getX(a);zd.fromBufferAttribute(l,n),Fd(zd,n,o,r,t,e,this)}}else{const n=Math.max(0,a.start),i=Math.min(l.count,a.start+a.count);for(let a=n,s=i;a<s;a++)zd.fromBufferAttribute(l,a),Fd(zd,a,o,r,t,e,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function Fd(t,e,n,r,i,a,s){const o=Od.distanceSqToPoint(t);if(o<n){const n=new vr;Od.closestPointToPoint(t,n),n.applyMatrix4(r);const l=i.ray.origin.distanceTo(n);if(l<i.near||l>i.far)return;a.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:e,face:null,object:s})}}Bd.prototype.isPoints=!0;class Ud extends ur{constructor(t,e,n,r,i,a,s,o,l){super(t,e,n,r,i,a,s,o,l),this.format=void 0!==s?s:Bt,this.minFilter=void 0!==a?a:xt,this.magFilter=void 0!==i?i:xt,this.generateMipmaps=!1;const c=this;function u(){c.needsUpdate=!0,t.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image,e="requestVideoFrameCallback"in t;!1===e&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}Ud.prototype.isVideoTexture=!0;class Hd extends ur{constructor(t,e,n){super({width:t,height:e}),this.format=n,this.magFilter=ft,this.minFilter=ft,this.generateMipmaps=!1,this.needsUpdate=!0}}Hd.prototype.isFramebufferTexture=!0;class kd extends ur{constructor(t,e,n,r,i,a,s,o,l,c,u,h){super(null,a,s,o,l,c,r,i,u,h),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}kd.prototype.isCompressedTexture=!0;class Gd extends ur{constructor(t,e,n,r,i,a,s,o,l){super(t,e,n,r,i,a,s,o,l),this.needsUpdate=!0}}Gd.prototype.isCanvasTexture=!0;class Vd extends oa{constructor(t=1,e=8,n=0,r=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:r},e=Math.max(3,e);const i=[],a=[],s=[],o=[],l=new vr,c=new er;a.push(0,0,0),s.push(0,0,1),o.push(.5,.5);for(let u=0,h=3;u<=e;u++,h+=3){const i=n+u/e*r;l.x=t*Math.cos(i),l.y=t*Math.sin(i),a.push(l.x,l.y,l.z),s.push(0,0,1),c.x=(a[h]/t+1)/2,c.y=(a[h+1]/t+1)/2,o.push(c.x,c.y)}for(let u=1;u<=e;u++)i.push(u,u+1,0);this.setIndex(i),this.setAttribute("position",new Qi(a,3)),this.setAttribute("normal",new Qi(s,3)),this.setAttribute("uv",new Qi(o,2))}static fromJSON(t){return new Vd(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class Wd extends oa{constructor(t=1,e=1,n=1,r=8,i=1,a=!1,s=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:r,heightSegments:i,openEnded:a,thetaStart:s,thetaLength:o};const l=this;r=Math.floor(r),i=Math.floor(i);const c=[],u=[],h=[],d=[];let p=0;const f=[],m=n/2;let g=0;function v(){const a=new vr,v=new vr;let y=0;const x=(e-t)/n;for(let l=0;l<=i;l++){const c=[],g=l/i,y=g*(e-t)+t;for(let t=0;t<=r;t++){const e=t/r,i=e*o+s,l=Math.sin(i),f=Math.cos(i);v.x=y*l,v.y=-g*n+m,v.z=y*f,u.push(v.x,v.y,v.z),a.set(l,x,f).normalize(),h.push(a.x,a.y,a.z),d.push(e,1-g),c.push(p++)}f.push(c)}for(let t=0;t<r;t++)for(let e=0;e<i;e++){const n=f[e][t],r=f[e+1][t],i=f[e+1][t+1],a=f[e][t+1];c.push(n,r,a),c.push(r,i,a),y+=6}l.addGroup(g,y,0),g+=y}function y(n){const i=p,a=new er,f=new vr;let v=0;const y=!0===n?t:e,x=!0===n?1:-1;for(let t=1;t<=r;t++)u.push(0,m*x,0),h.push(0,x,0),d.push(.5,.5),p++;const b=p;for(let t=0;t<=r;t++){const e=t/r,n=e*o+s,i=Math.cos(n),l=Math.sin(n);f.x=y*l,f.y=m*x,f.z=y*i,u.push(f.x,f.y,f.z),h.push(0,x,0),a.x=.5*i+.5,a.y=.5*l*x+.5,d.push(a.x,a.y),p++}for(let t=0;t<r;t++){const e=i+t,r=b+t;!0===n?c.push(r,r+1,e):c.push(r+1,r,e),v+=3}l.addGroup(g,v,!0===n?1:2),g+=v}v(),!1===a&&(t>0&&y(!0),e>0&&y(!1)),this.setIndex(c),this.setAttribute("position",new Qi(u,3)),this.setAttribute("normal",new Qi(h,3)),this.setAttribute("uv",new Qi(d,2))}static fromJSON(t){return new Wd(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class jd extends Wd{constructor(t=1,e=1,n=8,r=1,i=!1,a=0,s=2*Math.PI){super(0,t,e,n,r,i,a,s),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:s}}static fromJSON(t){return new jd(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class qd extends oa{constructor(t=[],e=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:r};const i=[],a=[];function s(t){const n=new vr,r=new vr,i=new vr;for(let a=0;a<e.length;a+=3)d(e[a+0],n),d(e[a+1],r),d(e[a+2],i),o(n,r,i,t)}function o(t,e,n,r){const i=r+1,a=[];for(let s=0;s<=i;s++){a[s]=[];const r=t.clone().lerp(n,s/i),o=e.clone().lerp(n,s/i),l=i-s;for(let t=0;t<=l;t++)a[s][t]=0===t&&s===i?r:r.clone().lerp(o,t/l)}for(let s=0;s<i;s++)for(let t=0;t<2*(i-s)-1;t++){const e=Math.floor(t/2);t%2===0?(h(a[s][e+1]),h(a[s+1][e]),h(a[s][e])):(h(a[s][e+1]),h(a[s+1][e+1]),h(a[s+1][e]))}}function l(t){const e=new vr;for(let n=0;n<i.length;n+=3)e.x=i[n+0],e.y=i[n+1],e.z=i[n+2],e.normalize().multiplyScalar(t),i[n+0]=e.x,i[n+1]=e.y,i[n+2]=e.z}function c(){const t=new vr;for(let e=0;e<i.length;e+=3){t.x=i[e+0],t.y=i[e+1],t.z=i[e+2];const n=m(t)/2/Math.PI+.5,r=g(t)/Math.PI+.5;a.push(n,1-r)}p(),u()}function u(){for(let t=0;t<a.length;t+=6){const e=a[t+0],n=a[t+2],r=a[t+4],i=Math.max(e,n,r),s=Math.min(e,n,r);i>.9&&s<.1&&(e<.2&&(a[t+0]+=1),n<.2&&(a[t+2]+=1),r<.2&&(a[t+4]+=1))}}function h(t){i.push(t.x,t.y,t.z)}function d(e,n){const r=3*e;n.x=t[r+0],n.y=t[r+1],n.z=t[r+2]}function p(){const t=new vr,e=new vr,n=new vr,r=new vr,s=new er,o=new er,l=new er;for(let c=0,u=0;c<i.length;c+=9,u+=6){t.set(i[c+0],i[c+1],i[c+2]),e.set(i[c+3],i[c+4],i[c+5]),n.set(i[c+6],i[c+7],i[c+8]),s.set(a[u+0],a[u+1]),o.set(a[u+2],a[u+3]),l.set(a[u+4],a[u+5]),r.copy(t).add(e).add(n).divideScalar(3);const h=m(r);f(s,u+0,t,h),f(o,u+2,e,h),f(l,u+4,n,h)}}function f(t,e,n,r){r<0&&1===t.x&&(a[e]=t.x-1),0===n.x&&0===n.z&&(a[e]=r/2/Math.PI+.5)}function m(t){return Math.atan2(t.z,-t.x)}function g(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}s(r),l(n),c(),this.setAttribute("position",new Qi(i,3)),this.setAttribute("normal",new Qi(i.slice(),3)),this.setAttribute("uv",new Qi(a,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(t){return new qd(t.vertices,t.indices,t.radius,t.details)}}class Xd extends qd{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,r=1/n,i=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(i,a,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Xd(t.radius,t.detail)}}const Yd=new vr,Jd=new vr,Zd=new vr,Kd=new Ri;class Qd extends oa{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},null!==t){const n=4,r=Math.pow(10,n),i=Math.cos(Dn*e),a=t.getIndex(),s=t.getAttribute("position"),o=a?a.count:s.count,l=[0,0,0],c=["a","b","c"],u=new Array(3),h={},d=[];for(let t=0;t<o;t+=3){a?(l[0]=a.getX(t),l[1]=a.getX(t+1),l[2]=a.getX(t+2)):(l[0]=t,l[1]=t+1,l[2]=t+2);const{a:e,b:n,c:o}=Kd;if(e.fromBufferAttribute(s,l[0]),n.fromBufferAttribute(s,l[1]),o.fromBufferAttribute(s,l[2]),Kd.getNormal(Zd),u[0]=`${Math.round(e.x*r)},${Math.round(e.y*r)},${Math.round(e.z*r)}`,u[1]=`${Math.round(n.x*r)},${Math.round(n.y*r)},${Math.round(n.z*r)}`,u[2]=`${Math.round(o.x*r)},${Math.round(o.y*r)},${Math.round(o.z*r)}`,u[0]!==u[1]&&u[1]!==u[2]&&u[2]!==u[0])for(let t=0;t<3;t++){const e=(t+1)%3,n=u[t],r=u[e],a=Kd[c[t]],s=Kd[c[e]],o=`${n}_${r}`,p=`${r}_${n}`;p in h&&h[p]?(Zd.dot(h[p].normal)<=i&&(d.push(a.x,a.y,a.z),d.push(s.x,s.y,s.z)),h[p]=null):o in h||(h[o]={index0:l[t],index1:l[e],normal:Zd.clone()})}}for(const t in h)if(h[t]){const{index0:e,index1:n}=h[t];Yd.fromBufferAttribute(s,e),Jd.fromBufferAttribute(s,n),d.push(Yd.x,Yd.y,Yd.z),d.push(Jd.x,Jd.y,Jd.z)}this.setAttribute("position",new Qi(d,3))}}}class $d{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,r=this.getPoint(0),i=0;e.push(0);for(let a=1;a<=t;a++)n=this.getPoint(a/t),i+=n.distanceTo(r),e.push(i),r=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let r=0;const i=n.length;let a;a=e||t*n[i-1];let s,o=0,l=i-1;while(o<=l)if(r=Math.floor(o+(l-o)/2),s=n[r]-a,s<0)o=r+1;else{if(!(s>0)){l=r;break}l=r-1}if(r=l,n[r]===a)return r/(i-1);const c=n[r],u=n[r+1],h=u-c,d=(a-c)/h,p=(r+d)/(i-1);return p}getTangent(t,e){const n=1e-4;let r=t-n,i=t+n;r<0&&(r=0),i>1&&(i=1);const a=this.getPoint(r),s=this.getPoint(i),o=e||(a.isVector2?new er:new vr);return o.copy(s).sub(a).normalize(),o}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new vr,r=[],i=[],a=[],s=new vr,o=new Yr;for(let d=0;d<=t;d++){const e=d/t;r[d]=this.getTangentAt(e,new vr)}i[0]=new vr,a[0]=new vr;let l=Number.MAX_VALUE;const c=Math.abs(r[0].x),u=Math.abs(r[0].y),h=Math.abs(r[0].z);c<=l&&(l=c,n.set(1,0,0)),u<=l&&(l=u,n.set(0,1,0)),h<=l&&n.set(0,0,1),s.crossVectors(r[0],n).normalize(),i[0].crossVectors(r[0],s),a[0].crossVectors(r[0],i[0]);for(let d=1;d<=t;d++){if(i[d]=i[d-1].clone(),a[d]=a[d-1].clone(),s.crossVectors(r[d-1],r[d]),s.length()>Number.EPSILON){s.normalize();const t=Math.acos(Nn(r[d-1].dot(r[d]),-1,1));i[d].applyMatrix4(o.makeRotationAxis(s,t))}a[d].crossVectors(r[d],i[d])}if(!0===e){let e=Math.acos(Nn(i[0].dot(i[t]),-1,1));e/=t,r[0].dot(s.crossVectors(i[0],i[t]))>0&&(e=-e);for(let n=1;n<=t;n++)i[n].applyMatrix4(o.makeRotationAxis(r[n],e*n)),a[n].crossVectors(r[n],i[n])}return{tangents:r,normals:i,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class tp extends $d{constructor(t=0,e=0,n=1,r=1,i=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(t,e){const n=e||new er,r=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;const a=Math.abs(i)<Number.EPSILON;while(i<0)i+=r;while(i>r)i-=r;i<Number.EPSILON&&(i=a?0:r),!0!==this.aClockwise||a||(i===r?i=-r:i-=r);const s=this.aStartAngle+t*i;let o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,r=l-this.aY;o=n*t-r*e+this.aX,l=n*e+r*t+this.aY}return n.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}tp.prototype.isEllipseCurve=!0;class ep extends tp{constructor(t,e,n,r,i,a){super(t,e,n,n,r,i,a),this.type="ArcCurve"}}function np(){let t=0,e=0,n=0,r=0;function i(i,a,s,o){t=i,e=s,n=-3*i+3*a-2*s-o,r=2*i-2*a+s+o}return{initCatmullRom:function(t,e,n,r,a){i(e,n,a*(n-t),a*(r-e))},initNonuniformCatmullRom:function(t,e,n,r,a,s,o){let l=(e-t)/a-(n-t)/(a+s)+(n-e)/s,c=(n-e)/s-(r-e)/(s+o)+(r-n)/o;l*=s,c*=s,i(e,n,l,c)},calc:function(i){const a=i*i,s=a*i;return t+e*i+n*a+r*s}}}ep.prototype.isArcCurve=!0;const rp=new vr,ip=new np,ap=new np,sp=new np;class op extends $d{constructor(t=[],e=!1,n="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=r}getPoint(t,e=new vr){const n=e,r=this.points,i=r.length,a=(i-(this.closed?0:1))*t;let s,o,l=Math.floor(a),c=a-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/i)+1)*i:0===c&&l===i-1&&(l=i-2,c=1),this.closed||l>0?s=r[(l-1)%i]:(rp.subVectors(r[0],r[1]).add(r[0]),s=rp);const u=r[l%i],h=r[(l+1)%i];if(this.closed||l+2<i?o=r[(l+2)%i]:(rp.subVectors(r[i-1],r[i-2]).add(r[i-1]),o=rp),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(u),t),n=Math.pow(u.distanceToSquared(h),t),r=Math.pow(h.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),r<1e-4&&(r=n),ip.initNonuniformCatmullRom(s.x,u.x,h.x,o.x,e,n,r),ap.initNonuniformCatmullRom(s.y,u.y,h.y,o.y,e,n,r),sp.initNonuniformCatmullRom(s.z,u.z,h.z,o.z,e,n,r)}else"catmullrom"===this.curveType&&(ip.initCatmullRom(s.x,u.x,h.x,o.x,this.tension),ap.initCatmullRom(s.y,u.y,h.y,o.y,this.tension),sp.initCatmullRom(s.z,u.z,h.z,o.z,this.tension));return n.set(ip.calc(c),ap.calc(c),sp.calc(c)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new vr).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function lp(t,e,n,r,i){const a=.5*(r-e),s=.5*(i-n),o=t*t,l=t*o;return(2*n-2*r+a+s)*l+(-3*n+3*r-2*a-s)*o+a*t+n}function cp(t,e){const n=1-t;return n*n*e}function up(t,e){return 2*(1-t)*t*e}function hp(t,e){return t*t*e}function dp(t,e,n,r){return cp(t,e)+up(t,n)+hp(t,r)}function pp(t,e){const n=1-t;return n*n*n*e}function fp(t,e){const n=1-t;return 3*n*n*t*e}function mp(t,e){return 3*(1-t)*t*t*e}function gp(t,e){return t*t*t*e}function vp(t,e,n,r,i){return pp(t,e)+fp(t,n)+mp(t,r)+gp(t,i)}op.prototype.isCatmullRomCurve3=!0;class yp extends $d{constructor(t=new er,e=new er,n=new er,r=new er){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new er){const n=e,r=this.v0,i=this.v1,a=this.v2,s=this.v3;return n.set(vp(t,r.x,i.x,a.x,s.x),vp(t,r.y,i.y,a.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}yp.prototype.isCubicBezierCurve=!0;class xp extends $d{constructor(t=new vr,e=new vr,n=new vr,r=new vr){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new vr){const n=e,r=this.v0,i=this.v1,a=this.v2,s=this.v3;return n.set(vp(t,r.x,i.x,a.x,s.x),vp(t,r.y,i.y,a.y,s.y),vp(t,r.z,i.z,a.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}xp.prototype.isCubicBezierCurve3=!0;class bp extends $d{constructor(t=new er,e=new er){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new er){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new er;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}bp.prototype.isLineCurve=!0;class _p extends $d{constructor(t=new vr,e=new vr){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new vr){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class wp extends $d{constructor(t=new er,e=new er,n=new er){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new er){const n=e,r=this.v0,i=this.v1,a=this.v2;return n.set(dp(t,r.x,i.x,a.x),dp(t,r.y,i.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}wp.prototype.isQuadraticBezierCurve=!0;class Mp extends $d{constructor(t=new vr,e=new vr,n=new vr){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new vr){const n=e,r=this.v0,i=this.v1,a=this.v2;return n.set(dp(t,r.x,i.x,a.x),dp(t,r.y,i.y,a.y),dp(t,r.z,i.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Mp.prototype.isQuadraticBezierCurve3=!0;class Sp extends $d{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new er){const n=e,r=this.points,i=(r.length-1)*t,a=Math.floor(i),s=i-a,o=r[0===a?a:a-1],l=r[a],c=r[a>r.length-2?r.length-1:a+1],u=r[a>r.length-3?r.length-1:a+2];return n.set(lp(s,o.x,l.x,c.x,u.x),lp(s,o.y,l.y,c.y,u.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new er).fromArray(n))}return this}}Sp.prototype.isSplineCurve=!0;var Tp=Object.freeze({__proto__:null,ArcCurve:ep,CatmullRomCurve3:op,CubicBezierCurve:yp,CubicBezierCurve3:xp,EllipseCurve:tp,LineCurve:bp,LineCurve3:_p,QuadraticBezierCurve:wp,QuadraticBezierCurve3:Mp,SplineCurve:Sp});class Ep extends $d{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new bp(e,t))}getPoint(t,e){const n=t*this.getLength(),r=this.getCurveLengths();let i=0;while(i<r.length){if(r[i]>=n){const t=r[i]-n,a=this.curves[i],s=a.getLength(),o=0===s?0:1-t/s;return a.getPointAt(o,e)}i++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,r=this.curves.length;n<r;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let r=0,i=this.curves;r<i.length;r++){const a=i[r],s=a&&a.isEllipseCurve?2*t:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?t*a.points.length:t,o=a.getPoints(s);for(let t=0;t<o.length;t++){const r=o[t];n&&n.equals(r)||(e.push(r),n=r)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new Tp[n.type]).fromJSON(n))}return this}}class Ap extends Ep{constructor(t){super(),this.type="Path",this.currentPoint=new er,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new bp(this.currentPoint.clone(),new er(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,r){const i=new wp(this.currentPoint.clone(),new er(t,e),new er(n,r));return this.curves.push(i),this.currentPoint.set(n,r),this}bezierCurveTo(t,e,n,r,i,a){const s=new yp(this.currentPoint.clone(),new er(t,e),new er(n,r),new er(i,a));return this.curves.push(s),this.currentPoint.set(i,a),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Sp(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,r,i,a){const s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+s,e+o,n,r,i,a),this}absarc(t,e,n,r,i,a){return this.absellipse(t,e,n,n,r,i,a),this}ellipse(t,e,n,r,i,a,s,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,n,r,i,a,s,o),this}absellipse(t,e,n,r,i,a,s,o){const l=new tp(t,e,n,r,i,a,s,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Cp extends Ap{constructor(t){super(t),this.uuid=On(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,r=this.holes.length;n<r;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new Ap).fromJSON(n))}return this}}const Lp={triangulate:function(t,e,n=2){const r=e&&e.length,i=r?e[0]*n:t.length;let a=Rp(t,0,i,n,!0);const s=[];if(!a||a.next===a.prev)return s;let o,l,c,u,h,d,p;if(r&&(a=Bp(t,e,a,n)),t.length>80*n){o=c=t[0],l=u=t[1];for(let e=n;e<i;e+=n)h=t[e],d=t[e+1],h<o&&(o=h),d<l&&(l=d),h>c&&(c=h),d>u&&(u=d);p=Math.max(c-o,u-l),p=0!==p?1/p:0}return Dp(a,s,n,o,l,p),s}};function Rp(t,e,n,r,i){let a,s;if(i===of(t,e,n,r)>0)for(a=e;a<n;a+=r)s=rf(a,t[a],t[a+1],s);else for(a=n-r;a>=e;a-=r)s=rf(a,t[a],t[a+1],s);return s&&Jp(s,s.next)&&(af(s),s=s.next),s}function Pp(t,e){if(!t)return t;e||(e=t);let n,r=t;do{if(n=!1,r.steiner||!Jp(r,r.next)&&0!==Yp(r.prev,r,r.next))r=r.next;else{if(af(r),r=e=r.prev,r===r.next)break;n=!0}}while(n||r!==e);return e}function Dp(t,e,n,r,i,a,s){if(!t)return;!s&&a&&Gp(t,r,i,a);let o,l,c=t;while(t.prev!==t.next)if(o=t.prev,l=t.next,a?Op(t,r,i,a):Ip(t))e.push(o.i/n),e.push(t.i/n),e.push(l.i/n),af(t),t=l.next,c=l.next;else if(t=l,t===c){s?1===s?(t=Np(Pp(t),e,n),Dp(t,e,n,r,i,a,2)):2===s&&zp(t,e,n,r,i,a):Dp(Pp(t),e,n,r,i,a,1);break}}function Ip(t){const e=t.prev,n=t,r=t.next;if(Yp(e,n,r)>=0)return!1;let i=t.next.next;while(i!==t.prev){if(qp(e.x,e.y,n.x,n.y,r.x,r.y,i.x,i.y)&&Yp(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function Op(t,e,n,r){const i=t.prev,a=t,s=t.next;if(Yp(i,a,s)>=0)return!1;const o=i.x<a.x?i.x<s.x?i.x:s.x:a.x<s.x?a.x:s.x,l=i.y<a.y?i.y<s.y?i.y:s.y:a.y<s.y?a.y:s.y,c=i.x>a.x?i.x>s.x?i.x:s.x:a.x>s.x?a.x:s.x,u=i.y>a.y?i.y>s.y?i.y:s.y:a.y>s.y?a.y:s.y,h=Wp(o,l,e,n,r),d=Wp(c,u,e,n,r);let p=t.prevZ,f=t.nextZ;while(p&&p.z>=h&&f&&f.z<=d){if(p!==t.prev&&p!==t.next&&qp(i.x,i.y,a.x,a.y,s.x,s.y,p.x,p.y)&&Yp(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,f!==t.prev&&f!==t.next&&qp(i.x,i.y,a.x,a.y,s.x,s.y,f.x,f.y)&&Yp(f.prev,f,f.next)>=0)return!1;f=f.nextZ}while(p&&p.z>=h){if(p!==t.prev&&p!==t.next&&qp(i.x,i.y,a.x,a.y,s.x,s.y,p.x,p.y)&&Yp(p.prev,p,p.next)>=0)return!1;p=p.prevZ}while(f&&f.z<=d){if(f!==t.prev&&f!==t.next&&qp(i.x,i.y,a.x,a.y,s.x,s.y,f.x,f.y)&&Yp(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function Np(t,e,n){let r=t;do{const i=r.prev,a=r.next.next;!Jp(i,a)&&Zp(i,r,r.next,a)&&tf(i,a)&&tf(a,i)&&(e.push(i.i/n),e.push(r.i/n),e.push(a.i/n),af(r),af(r.next),r=t=a),r=r.next}while(r!==t);return Pp(r)}function zp(t,e,n,r,i,a){let s=t;do{let t=s.next.next;while(t!==s.prev){if(s.i!==t.i&&Xp(s,t)){let o=nf(s,t);return s=Pp(s,s.next),o=Pp(o,o.next),Dp(s,e,n,r,i,a),void Dp(o,e,n,r,i,a)}t=t.next}s=s.next}while(s!==t)}function Bp(t,e,n,r){const i=[];let a,s,o,l,c;for(a=0,s=e.length;a<s;a++)o=e[a]*r,l=a<s-1?e[a+1]*r:t.length,c=Rp(t,o,l,r,!1),c===c.next&&(c.steiner=!0),i.push(jp(c));for(i.sort(Fp),a=0;a<i.length;a++)Up(i[a],n),n=Pp(n,n.next);return n}function Fp(t,e){return t.x-e.x}function Up(t,e){if(e=Hp(t,e),e){const n=nf(e,t);Pp(e,e.next),Pp(n,n.next)}}function Hp(t,e){let n=e;const r=t.x,i=t.y;let a,s=-1/0;do{if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){const t=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=r&&t>s){if(s=t,t===r){if(i===n.y)return n;if(i===n.next.y)return n.next}a=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!a)return null;if(r===s)return a;const o=a,l=a.x,c=a.y;let u,h=1/0;n=a;do{r>=n.x&&n.x>=l&&r!==n.x&&qp(i<c?r:s,i,l,c,i<c?s:r,i,n.x,n.y)&&(u=Math.abs(i-n.y)/(r-n.x),tf(n,t)&&(u<h||u===h&&(n.x>a.x||n.x===a.x&&kp(a,n)))&&(a=n,h=u)),n=n.next}while(n!==o);return a}function kp(t,e){return Yp(t.prev,t,e.prev)<0&&Yp(e.next,t,t.next)<0}function Gp(t,e,n,r){let i=t;do{null===i.z&&(i.z=Wp(i.x,i.y,e,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,Vp(i)}function Vp(t){let e,n,r,i,a,s,o,l,c=1;do{n=t,t=null,a=null,s=0;while(n){for(s++,r=n,o=0,e=0;e<c;e++)if(o++,r=r.nextZ,!r)break;l=c;while(o>0||l>0&&r)0!==o&&(0===l||!r||n.z<=r.z)?(i=n,n=n.nextZ,o--):(i=r,r=r.nextZ,l--),a?a.nextZ=i:t=i,i.prevZ=a,a=i;n=r}a.nextZ=null,c*=2}while(s>1);return t}function Wp(t,e,n,r,i){return t=32767*(t-n)*i,e=32767*(e-r)*i,t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t|e<<1}function jp(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function qp(t,e,n,r,i,a,s,o){return(i-s)*(e-o)-(t-s)*(a-o)>=0&&(t-s)*(r-o)-(n-s)*(e-o)>=0&&(n-s)*(a-o)-(i-s)*(r-o)>=0}function Xp(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!$p(t,e)&&(tf(t,e)&&tf(e,t)&&ef(t,e)&&(Yp(t.prev,t,e.prev)||Yp(t,e.prev,e))||Jp(t,e)&&Yp(t.prev,t,t.next)>0&&Yp(e.prev,e,e.next)>0)}function Yp(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Jp(t,e){return t.x===e.x&&t.y===e.y}function Zp(t,e,n,r){const i=Qp(Yp(t,e,n)),a=Qp(Yp(t,e,r)),s=Qp(Yp(n,r,t)),o=Qp(Yp(n,r,e));return i!==a&&s!==o||(!(0!==i||!Kp(t,n,e))||(!(0!==a||!Kp(t,r,e))||(!(0!==s||!Kp(n,t,r))||!(0!==o||!Kp(n,e,r)))))}function Kp(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Qp(t){return t>0?1:t<0?-1:0}function $p(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Zp(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}function tf(t,e){return Yp(t.prev,t,t.next)<0?Yp(t,e,t.next)>=0&&Yp(t,t.prev,e)>=0:Yp(t,e,t.prev)<0||Yp(t,t.next,e)<0}function ef(t,e){let n=t,r=!1;const i=(t.x+e.x)/2,a=(t.y+e.y)/2;do{n.y>a!==n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}function nf(t,e){const n=new sf(t.i,t.x,t.y),r=new sf(e.i,e.x,e.y),i=t.next,a=e.prev;return t.next=e,e.prev=t,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}function rf(t,e,n,r){const i=new sf(t,e,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function af(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function sf(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function of(t,e,n,r){let i=0;for(let a=e,s=n-r;a<n;a+=r)i+=(t[s]-t[a])*(t[a+1]+t[s+1]),s=a;return i}class lf{static area(t){const e=t.length;let n=0;for(let r=e-1,i=0;i<e;r=i++)n+=t[r].x*t[i].y-t[i].x*t[r].y;return.5*n}static isClockWise(t){return lf.area(t)<0}static triangulateShape(t,e){const n=[],r=[],i=[];cf(t),uf(n,t);let a=t.length;e.forEach(cf);for(let o=0;o<e.length;o++)r.push(a),a+=e[o].length,uf(n,e[o]);const s=Lp.triangulate(n,r);for(let o=0;o<s.length;o+=3)i.push(s.slice(o,o+3));return i}}function cf(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function uf(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class hf extends oa{constructor(t=new Cp([new er(.5,.5),new er(-.5,.5),new er(-.5,-.5),new er(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,r=[],i=[];for(let s=0,o=t.length;s<o;s++){const e=t[s];a(e)}function a(t){const a=[],s=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1;let l=void 0!==e.depth?e.depth:1,c=void 0===e.bevelEnabled||e.bevelEnabled,u=void 0!==e.bevelThickness?e.bevelThickness:.2,h=void 0!==e.bevelSize?e.bevelSize:u-.1,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:df;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=e.amount);let g,v,y,x,b,_=!1;f&&(g=f.getSpacedPoints(o),_=!0,c=!1,v=f.computeFrenetFrames(o,!1),y=new vr,x=new vr,b=new vr),c||(p=0,u=0,h=0,d=0);const w=t.extractPoints(s);let M=w.shape;const S=w.holes,T=!lf.isClockWise(M);if(T){M=M.reverse();for(let t=0,e=S.length;t<e;t++){const e=S[t];lf.isClockWise(e)&&(S[t]=e.reverse())}}const E=lf.triangulateShape(M,S),A=M;for(let e=0,n=S.length;e<n;e++){const t=S[e];M=M.concat(t)}function C(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const L=M.length,R=E.length;function P(t,e,n){let r,i,a;const s=t.x-e.x,o=t.y-e.y,l=n.x-t.x,c=n.y-t.y,u=s*s+o*o,h=s*c-o*l;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(u),d=Math.sqrt(l*l+c*c),p=e.x-o/h,f=e.y+s/h,m=n.x-c/d,g=n.y+l/d,v=((m-p)*c-(g-f)*l)/(s*c-o*l);r=p+s*v-t.x,i=f+o*v-t.y;const y=r*r+i*i;if(y<=2)return new er(r,i);a=Math.sqrt(y/2)}else{let t=!1;s>Number.EPSILON?l>Number.EPSILON&&(t=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(c)&&(t=!0),t?(r=-o,i=s,a=Math.sqrt(u)):(r=s,i=o,a=Math.sqrt(u/2))}return new er(r/a,i/a)}const D=[];for(let e=0,n=A.length,r=n-1,i=e+1;e<n;e++,r++,i++)r===n&&(r=0),i===n&&(i=0),D[e]=P(A[e],A[r],A[i]);const I=[];let O,N=D.concat();for(let e=0,n=S.length;e<n;e++){const t=S[e];O=[];for(let e=0,n=t.length,r=n-1,i=e+1;e<n;e++,r++,i++)r===n&&(r=0),i===n&&(i=0),O[e]=P(t[e],t[r],t[i]);I.push(O),N=N.concat(O)}for(let e=0;e<p;e++){const t=e/p,n=u*Math.cos(t*Math.PI/2),r=h*Math.sin(t*Math.PI/2)+d;for(let e=0,i=A.length;e<i;e++){const t=C(A[e],D[e],r);H(t.x,t.y,-n)}for(let e=0,i=S.length;e<i;e++){const t=S[e];O=I[e];for(let e=0,i=t.length;e<i;e++){const i=C(t[e],O[e],r);H(i.x,i.y,-n)}}}const z=h+d;for(let e=0;e<L;e++){const t=c?C(M[e],N[e],z):M[e];_?(x.copy(v.normals[0]).multiplyScalar(t.x),y.copy(v.binormals[0]).multiplyScalar(t.y),b.copy(g[0]).add(x).add(y),H(b.x,b.y,b.z)):H(t.x,t.y,0)}for(let e=1;e<=o;e++)for(let t=0;t<L;t++){const n=c?C(M[t],N[t],z):M[t];_?(x.copy(v.normals[e]).multiplyScalar(n.x),y.copy(v.binormals[e]).multiplyScalar(n.y),b.copy(g[e]).add(x).add(y),H(b.x,b.y,b.z)):H(n.x,n.y,l/o*e)}for(let e=p-1;e>=0;e--){const t=e/p,n=u*Math.cos(t*Math.PI/2),r=h*Math.sin(t*Math.PI/2)+d;for(let e=0,i=A.length;e<i;e++){const t=C(A[e],D[e],r);H(t.x,t.y,l+n)}for(let e=0,i=S.length;e<i;e++){const t=S[e];O=I[e];for(let e=0,i=t.length;e<i;e++){const i=C(t[e],O[e],r);_?H(i.x,i.y+g[o-1].y,g[o-1].x+n):H(i.x,i.y,l+n)}}}function B(){const t=r.length/3;if(c){let t=0,e=L*t;for(let n=0;n<R;n++){const t=E[n];k(t[2]+e,t[1]+e,t[0]+e)}t=o+2*p,e=L*t;for(let n=0;n<R;n++){const t=E[n];k(t[0]+e,t[1]+e,t[2]+e)}}else{for(let t=0;t<R;t++){const e=E[t];k(e[2],e[1],e[0])}for(let t=0;t<R;t++){const e=E[t];k(e[0]+L*o,e[1]+L*o,e[2]+L*o)}}n.addGroup(t,r.length/3-t,0)}function F(){const t=r.length/3;let e=0;U(A,e),e+=A.length;for(let n=0,r=S.length;n<r;n++){const t=S[n];U(t,e),e+=t.length}n.addGroup(t,r.length/3-t,1)}function U(t,e){let n=t.length;while(--n>=0){const r=n;let i=n-1;i<0&&(i=t.length-1);for(let t=0,n=o+2*p;t<n;t++){const n=L*t,a=L*(t+1),s=e+r+n,o=e+i+n,l=e+i+a,c=e+r+a;G(s,o,l,c)}}}function H(t,e,n){a.push(t),a.push(e),a.push(n)}function k(t,e,i){V(t),V(e),V(i);const a=r.length/3,s=m.generateTopUV(n,r,a-3,a-2,a-1);W(s[0]),W(s[1]),W(s[2])}function G(t,e,i,a){V(t),V(e),V(a),V(e),V(i),V(a);const s=r.length/3,o=m.generateSideWallUV(n,r,s-6,s-3,s-2,s-1);W(o[0]),W(o[1]),W(o[3]),W(o[1]),W(o[2]),W(o[3])}function V(t){r.push(a[3*t+0]),r.push(a[3*t+1]),r.push(a[3*t+2])}function W(t){i.push(t.x),i.push(t.y)}B(),F()}this.setAttribute("position",new Qi(r,3)),this.setAttribute("uv",new Qi(i,2)),this.computeVertexNormals()}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return pf(e,n,t)}static fromJSON(t,e){const n=[];for(let i=0,a=t.shapes.length;i<a;i++){const r=e[t.shapes[i]];n.push(r)}const r=t.options.extrudePath;return void 0!==r&&(t.options.extrudePath=(new Tp[r.type]).fromJSON(r)),new hf(n,t.options)}}const df={generateTopUV:function(t,e,n,r,i){const a=e[3*n],s=e[3*n+1],o=e[3*r],l=e[3*r+1],c=e[3*i],u=e[3*i+1];return[new er(a,s),new er(o,l),new er(c,u)]},generateSideWallUV:function(t,e,n,r,i,a){const s=e[3*n],o=e[3*n+1],l=e[3*n+2],c=e[3*r],u=e[3*r+1],h=e[3*r+2],d=e[3*i],p=e[3*i+1],f=e[3*i+2],m=e[3*a],g=e[3*a+1],v=e[3*a+2];return Math.abs(o-u)<Math.abs(s-c)?[new er(s,1-l),new er(c,1-h),new er(d,1-f),new er(m,1-v)]:[new er(o,1-l),new er(u,1-h),new er(p,1-f),new er(g,1-v)]}};function pf(t,e,n){if(n.shapes=[],Array.isArray(t))for(let r=0,i=t.length;r<i;r++){const e=t[r];n.shapes.push(e.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}class ff extends qd{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],i=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,i,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new ff(t.radius,t.detail)}}class mf extends oa{constructor(t=[new er(0,.5),new er(.5,0),new er(0,-.5)],e=12,n=0,r=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:r},e=Math.floor(e),r=Nn(r,0,2*Math.PI);const i=[],a=[],s=[],o=[],l=[],c=1/e,u=new vr,h=new er,d=new vr,p=new vr,f=new vr;let m=0,g=0;for(let v=0;v<=t.length-1;v++)switch(v){case 0:m=t[v+1].x-t[v].x,g=t[v+1].y-t[v].y,d.x=1*g,d.y=-m,d.z=0*g,f.copy(d),d.normalize(),o.push(d.x,d.y,d.z);break;case t.length-1:o.push(f.x,f.y,f.z);break;default:m=t[v+1].x-t[v].x,g=t[v+1].y-t[v].y,d.x=1*g,d.y=-m,d.z=0*g,p.copy(d),d.x+=f.x,d.y+=f.y,d.z+=f.z,d.normalize(),o.push(d.x,d.y,d.z),f.copy(p)}for(let v=0;v<=e;v++){const i=n+v*c*r,d=Math.sin(i),p=Math.cos(i);for(let n=0;n<=t.length-1;n++){u.x=t[n].x*d,u.y=t[n].y,u.z=t[n].x*p,a.push(u.x,u.y,u.z),h.x=v/e,h.y=n/(t.length-1),s.push(h.x,h.y);const r=o[3*n+0]*d,i=o[3*n+1],c=o[3*n+0]*p;l.push(r,i,c)}}for(let v=0;v<e;v++)for(let e=0;e<t.length-1;e++){const n=e+v*t.length,r=n,a=n+t.length,s=n+t.length+1,o=n+1;i.push(r,a,o),i.push(a,s,o)}this.setIndex(i),this.setAttribute("position",new Qi(a,3)),this.setAttribute("uv",new Qi(s,2)),this.setAttribute("normal",new Qi(l,3))}static fromJSON(t){return new mf(t.points,t.segments,t.phiStart,t.phiLength)}}class gf extends qd{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,r,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new gf(t.radius,t.detail)}}class vf extends oa{constructor(t=.5,e=1,n=8,r=1,i=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},n=Math.max(3,n),r=Math.max(1,r);const s=[],o=[],l=[],c=[];let u=t;const h=(e-t)/r,d=new vr,p=new er;for(let f=0;f<=r;f++){for(let t=0;t<=n;t++){const r=i+t/n*a;d.x=u*Math.cos(r),d.y=u*Math.sin(r),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,c.push(p.x,p.y)}u+=h}for(let f=0;f<r;f++){const t=f*(n+1);for(let e=0;e<n;e++){const r=e+t,i=r,a=r+n+1,o=r+n+2,l=r+1;s.push(i,a,l),s.push(a,o,l)}}this.setIndex(s),this.setAttribute("position",new Qi(o,3)),this.setAttribute("normal",new Qi(l,3)),this.setAttribute("uv",new Qi(c,2))}static fromJSON(t){return new vf(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class yf extends oa{constructor(t=new Cp([new er(0,.5),new er(-.5,-.5),new er(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],r=[],i=[],a=[];let s=0,o=0;if(!1===Array.isArray(t))l(t);else for(let c=0;c<t.length;c++)l(t[c]),this.addGroup(s,o,c),s+=o,o=0;function l(t){const s=r.length/3,l=t.extractPoints(e);let c=l.shape;const u=l.holes;!1===lf.isClockWise(c)&&(c=c.reverse());for(let e=0,n=u.length;e<n;e++){const t=u[e];!0===lf.isClockWise(t)&&(u[e]=t.reverse())}const h=lf.triangulateShape(c,u);for(let e=0,n=u.length;e<n;e++){const t=u[e];c=c.concat(t)}for(let e=0,n=c.length;e<n;e++){const t=c[e];r.push(t.x,t.y,0),i.push(0,0,1),a.push(t.x,t.y)}for(let e=0,r=h.length;e<r;e++){const t=h[e],r=t[0]+s,i=t[1]+s,a=t[2]+s;n.push(r,i,a),o+=3}}this.setIndex(n),this.setAttribute("position",new Qi(r,3)),this.setAttribute("normal",new Qi(i,3)),this.setAttribute("uv",new Qi(a,2))}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return xf(e,t)}static fromJSON(t,e){const n=[];for(let r=0,i=t.shapes.length;r<i;r++){const i=e[t.shapes[r]];n.push(i)}return new yf(n,t.curveSegments)}}function xf(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,r=t.length;n<r;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}class bf extends oa{constructor(t=1,e=32,n=16,r=0,i=2*Math.PI,a=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:r,phiLength:i,thetaStart:a,thetaLength:s},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const o=Math.min(a+s,Math.PI);let l=0;const c=[],u=new vr,h=new vr,d=[],p=[],f=[],m=[];for(let g=0;g<=n;g++){const d=[],v=g/n;let y=0;0==g&&0==a?y=.5/e:g==n&&o==Math.PI&&(y=-.5/e);for(let n=0;n<=e;n++){const o=n/e;u.x=-t*Math.cos(r+o*i)*Math.sin(a+v*s),u.y=t*Math.cos(a+v*s),u.z=t*Math.sin(r+o*i)*Math.sin(a+v*s),p.push(u.x,u.y,u.z),h.copy(u).normalize(),f.push(h.x,h.y,h.z),m.push(o+y,1-v),d.push(l++)}c.push(d)}for(let g=0;g<n;g++)for(let t=0;t<e;t++){const e=c[g][t+1],r=c[g][t],i=c[g+1][t],s=c[g+1][t+1];(0!==g||a>0)&&d.push(e,r,s),(g!==n-1||o<Math.PI)&&d.push(r,i,s)}this.setIndex(d),this.setAttribute("position",new Qi(p,3)),this.setAttribute("normal",new Qi(f,3)),this.setAttribute("uv",new Qi(m,2))}static fromJSON(t){return new bf(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class _f extends qd{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,r,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new _f(t.radius,t.detail)}}class wf extends oa{constructor(t=1,e=.4,n=8,r=6,i=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:r,arc:i},n=Math.floor(n),r=Math.floor(r);const a=[],s=[],o=[],l=[],c=new vr,u=new vr,h=new vr;for(let d=0;d<=n;d++)for(let a=0;a<=r;a++){const p=a/r*i,f=d/n*Math.PI*2;u.x=(t+e*Math.cos(f))*Math.cos(p),u.y=(t+e*Math.cos(f))*Math.sin(p),u.z=e*Math.sin(f),s.push(u.x,u.y,u.z),c.x=t*Math.cos(p),c.y=t*Math.sin(p),h.subVectors(u,c).normalize(),o.push(h.x,h.y,h.z),l.push(a/r),l.push(d/n)}for(let d=1;d<=n;d++)for(let t=1;t<=r;t++){const e=(r+1)*d+t-1,n=(r+1)*(d-1)+t-1,i=(r+1)*(d-1)+t,s=(r+1)*d+t;a.push(e,n,s),a.push(n,i,s)}this.setIndex(a),this.setAttribute("position",new Qi(s,3)),this.setAttribute("normal",new Qi(o,3)),this.setAttribute("uv",new Qi(l,2))}static fromJSON(t){return new wf(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Mf extends oa{constructor(t=1,e=.4,n=64,r=8,i=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:r,p:i,q:a},n=Math.floor(n),r=Math.floor(r);const s=[],o=[],l=[],c=[],u=new vr,h=new vr,d=new vr,p=new vr,f=new vr,m=new vr,g=new vr;for(let y=0;y<=n;++y){const s=y/n*i*Math.PI*2;v(s,i,a,t,d),v(s+.01,i,a,t,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let t=0;t<=r;++t){const i=t/r*Math.PI*2,a=-e*Math.cos(i),s=e*Math.sin(i);u.x=d.x+(a*g.x+s*f.x),u.y=d.y+(a*g.y+s*f.y),u.z=d.z+(a*g.z+s*f.z),o.push(u.x,u.y,u.z),h.subVectors(u,d).normalize(),l.push(h.x,h.y,h.z),c.push(y/n),c.push(t/r)}}for(let y=1;y<=n;y++)for(let t=1;t<=r;t++){const e=(r+1)*(y-1)+(t-1),n=(r+1)*y+(t-1),i=(r+1)*y+t,a=(r+1)*(y-1)+t;s.push(e,n,a),s.push(n,i,a)}function v(t,e,n,r,i){const a=Math.cos(t),s=Math.sin(t),o=n/e*t,l=Math.cos(o);i.x=r*(2+l)*.5*a,i.y=r*(2+l)*s*.5,i.z=r*Math.sin(o)*.5}this.setIndex(s),this.setAttribute("position",new Qi(o,3)),this.setAttribute("normal",new Qi(l,3)),this.setAttribute("uv",new Qi(c,2))}static fromJSON(t){return new Mf(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class Sf extends oa{constructor(t=new Mp(new vr(-1,-1,0),new vr(-1,1,0),new vr(1,1,0)),e=64,n=1,r=8,i=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:r,closed:i};const a=t.computeFrenetFrames(e,i);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const s=new vr,o=new vr,l=new er;let c=new vr;const u=[],h=[],d=[],p=[];function f(){for(let t=0;t<e;t++)m(t);m(!1===i?e:0),v(),g()}function m(i){c=t.getPointAt(i/e,c);const l=a.normals[i],d=a.binormals[i];for(let t=0;t<=r;t++){const e=t/r*Math.PI*2,i=Math.sin(e),a=-Math.cos(e);o.x=a*l.x+i*d.x,o.y=a*l.y+i*d.y,o.z=a*l.z+i*d.z,o.normalize(),h.push(o.x,o.y,o.z),s.x=c.x+n*o.x,s.y=c.y+n*o.y,s.z=c.z+n*o.z,u.push(s.x,s.y,s.z)}}function g(){for(let t=1;t<=e;t++)for(let e=1;e<=r;e++){const n=(r+1)*(t-1)+(e-1),i=(r+1)*t+(e-1),a=(r+1)*t+e,s=(r+1)*(t-1)+e;p.push(n,i,s),p.push(i,a,s)}}function v(){for(let t=0;t<=e;t++)for(let n=0;n<=r;n++)l.x=t/e,l.y=n/r,d.push(l.x,l.y)}f(),this.setIndex(p),this.setAttribute("position",new Qi(u,3)),this.setAttribute("normal",new Qi(h,3)),this.setAttribute("uv",new Qi(d,2))}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new Sf((new Tp[t.path.type]).fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Tf extends oa{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},null!==t){const e=[],n=new Set,r=new vr,i=new vr;if(null!==t.index){const a=t.attributes.position,s=t.index;let o=t.groups;0===o.length&&(o=[{start:0,count:s.count,materialIndex:0}]);for(let t=0,l=o.length;t<l;++t){const l=o[t],c=l.start,u=l.count;for(let t=c,o=c+u;t<o;t+=3)for(let l=0;l<3;l++){const o=s.getX(t+l),c=s.getX(t+(l+1)%3);r.fromBufferAttribute(a,o),i.fromBufferAttribute(a,c),!0===Ef(r,i,n)&&(e.push(r.x,r.y,r.z),e.push(i.x,i.y,i.z))}}}else{const a=t.attributes.position;for(let t=0,s=a.count/3;t<s;t++)for(let o=0;o<3;o++){const s=3*t+o,l=3*t+(o+1)%3;r.fromBufferAttribute(a,s),i.fromBufferAttribute(a,l),!0===Ef(r,i,n)&&(e.push(r.x,r.y,r.z),e.push(i.x,i.y,i.z))}}this.setAttribute("position",new Qi(e,3))}}}function Ef(t,e,n){const r=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;return!0!==n.has(r)&&!0!==n.has(i)&&(n.add(r,i),!0)}var Af=Object.freeze({__proto__:null,BoxGeometry:Ca,BoxBufferGeometry:Ca,CircleGeometry:Vd,CircleBufferGeometry:Vd,ConeGeometry:jd,ConeBufferGeometry:jd,CylinderGeometry:Wd,CylinderBufferGeometry:Wd,DodecahedronGeometry:Xd,DodecahedronBufferGeometry:Xd,EdgesGeometry:Qd,ExtrudeGeometry:hf,ExtrudeBufferGeometry:hf,IcosahedronGeometry:ff,IcosahedronBufferGeometry:ff,LatheGeometry:mf,LatheBufferGeometry:mf,OctahedronGeometry:gf,OctahedronBufferGeometry:gf,PlaneGeometry:Ka,PlaneBufferGeometry:Ka,PolyhedronGeometry:qd,PolyhedronBufferGeometry:qd,RingGeometry:vf,RingBufferGeometry:vf,ShapeGeometry:yf,ShapeBufferGeometry:yf,SphereGeometry:bf,SphereBufferGeometry:bf,TetrahedronGeometry:_f,TetrahedronBufferGeometry:_f,TorusGeometry:wf,TorusBufferGeometry:wf,TorusKnotGeometry:Mf,TorusKnotBufferGeometry:Mf,TubeGeometry:Sf,TubeBufferGeometry:Sf,WireframeGeometry:Tf});class Cf extends Di{constructor(t){super(),this.type="ShadowMaterial",this.color=new Ui(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}Cf.prototype.isShadowMaterial=!0;class Lf extends Di{constructor(t){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ui(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ui(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=$e,this.normalScale=new er(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this}}Lf.prototype.isMeshStandardMaterial=!0;class Rf extends Lf{constructor(t){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new er(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Nn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new Ui(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new Ui(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ui(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!==t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!==t>0&&this.version++,this._clearcoat=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!==t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}Rf.prototype.isMeshPhysicalMaterial=!0;class Pf extends Di{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new Ui(16777215),this.specular=new Ui(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ui(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=$e,this.normalScale=new er(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this}}Pf.prototype.isMeshPhongMaterial=!0;class Df extends Di{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ui(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ui(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=$e,this.normalScale=new er(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}Df.prototype.isMeshToonMaterial=!0;class If extends Di{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=$e,this.normalScale=new er(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}If.prototype.isMeshNormalMaterial=!0;class Of extends Di{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new Ui(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ui(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this}}Of.prototype.isMeshLambertMaterial=!0;class Nf extends Di{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ui(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=$e,this.normalScale=new er(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this}}Nf.prototype.isMeshMatcapMaterial=!0;class zf extends _d{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}zf.prototype.isLineDashedMaterial=!0;var Bf=Object.freeze({__proto__:null,ShadowMaterial:Cf,SpriteMaterial:Uh,RawShaderMaterial:Nl,ShaderMaterial:Oa,PointsMaterial:Dd,MeshPhysicalMaterial:Rf,MeshStandardMaterial:Lf,MeshPhongMaterial:Pf,MeshToonMaterial:Df,MeshNormalMaterial:If,MeshLambertMaterial:Of,MeshDepthMaterial:mh,MeshDistanceMaterial:gh,MeshBasicMaterial:Hi,MeshMatcapMaterial:Nf,LineDashedMaterial:zf,LineBasicMaterial:_d,Material:Di});const Ff={arraySlice:function(t,e,n){return Ff.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"===typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){function e(e,n){return t[e]-t[n]}const n=t.length,r=new Array(n);for(let i=0;i!==n;++i)r[i]=i;return r.sort(e),r},sortedArray:function(t,e,n){const r=t.length,i=new t.constructor(r);for(let a=0,s=0;s!==r;++a){const r=n[a]*e;for(let n=0;n!==e;++n)i[s++]=t[r+n]}return i},flattenJSON:function(t,e,n,r){let i=1,a=t[0];while(void 0!==a&&void 0===a[r])a=t[i++];if(void 0===a)return;let s=a[r];if(void 0!==s)if(Array.isArray(s))do{s=a[r],void 0!==s&&(e.push(a.time),n.push.apply(n,s)),a=t[i++]}while(void 0!==a);else if(void 0!==s.toArray)do{s=a[r],void 0!==s&&(e.push(a.time),s.toArray(n,n.length)),a=t[i++]}while(void 0!==a);else do{s=a[r],void 0!==s&&(e.push(a.time),n.push(s)),a=t[i++]}while(void 0!==a)},subclip:function(t,e,n,r,i=30){const a=t.clone();a.name=e;const s=[];for(let l=0;l<a.tracks.length;++l){const t=a.tracks[l],e=t.getValueSize(),o=[],c=[];for(let a=0;a<t.times.length;++a){const s=t.times[a]*i;if(!(s<n||s>=r)){o.push(t.times[a]);for(let n=0;n<e;++n)c.push(t.values[a*e+n])}}0!==o.length&&(t.times=Ff.convertArray(o,t.times.constructor),t.values=Ff.convertArray(c,t.values.constructor),s.push(t))}a.tracks=s;let o=1/0;for(let l=0;l<a.tracks.length;++l)o>a.tracks[l].times[0]&&(o=a.tracks[l].times[0]);for(let l=0;l<a.tracks.length;++l)a.tracks[l].shift(-1*o);return a.resetDuration(),a},makeClipAdditive:function(t,e=0,n=t,r=30){r<=0&&(r=30);const i=n.tracks.length,a=e/r;for(let s=0;s<i;++s){const e=n.tracks[s],r=e.ValueTypeName;if("bool"===r||"string"===r)continue;const i=t.tracks.find((function(t){return t.name===e.name&&t.ValueTypeName===r}));if(void 0===i)continue;let o=0;const l=e.getValueSize();e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let c=0;const u=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=u/3);const h=e.times.length-1;let d;if(a<=e.times[0]){const t=o,n=l-o;d=Ff.arraySlice(e.values,t,n)}else if(a>=e.times[h]){const t=h*l+o,n=t+l-o;d=Ff.arraySlice(e.values,t,n)}else{const t=e.createInterpolant(),n=o,r=l-o;t.evaluate(a),d=Ff.arraySlice(t.resultBuffer,n,r)}if("quaternion"===r){const t=(new gr).fromArray(d).normalize().conjugate();t.toArray(d)}const p=i.times.length;for(let t=0;t<p;++t){const e=t*u+c;if("quaternion"===r)gr.multiplyQuaternionsFlat(i.values,e,d,0,i.values,e);else{const t=u-2*c;for(let n=0;n<t;++n)i.values[e+n]-=d[n]}}}return t.blendMode=je,t}};class Uf{constructor(t,e,n,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,r=e[n],i=e[n-1];t:{e:{let a;n:{r:if(!(t<r)){for(let a=n+2;;){if(void 0===r){if(t<i)break r;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,i)}if(n===a)break;if(i=r,r=e[++n],t<r)break e}a=e.length;break n}if(t>=i)break t;{const s=e[1];t<s&&(n=2,i=s);for(let a=n-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(n===a)break;if(r=i,i=e[--n-1],t>=i)break e}a=n,n=0}}while(n<a){const r=n+a>>>1;t<e[r]?a=r:n=r+1}if(r=e[n],i=e[n-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(void 0===r)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,i,t)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,t,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=t*r;for(let a=0;a!==r;++a)e[a]=n[i+a];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Uf.prototype.beforeStart_=Uf.prototype.copySampleValue_,Uf.prototype.afterEnd_=Uf.prototype.copySampleValue_;class Hf extends Uf{constructor(t,e,n,r){super(t,e,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ke,endingEnd:ke}}intervalChanged_(t,e,n){const r=this.parameterPositions;let i=t-2,a=t+1,s=r[i],o=r[a];if(void 0===s)switch(this.getSettings_().endingStart){case Ge:i=t,s=2*e-n;break;case Ve:i=r.length-2,s=e+r[i]-r[i+1];break;default:i=t,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case Ge:a=t,o=2*n-e;break;case Ve:a=1,o=n+r[1]-r[0];break;default:a=t-1,o=e}const l=.5*(n-e),c=this.valueSize;this._weightPrev=l/(e-s),this._weightNext=l/(o-n),this._offsetPrev=i*c,this._offsetNext=a*c}interpolate_(t,e,n,r){const i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,l=o-s,c=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(n-e)/(r-e),f=p*p,m=f*p,g=-h*m+2*h*f-h*p,v=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f;for(let b=0;b!==s;++b)i[b]=g*a[c+b]+v*a[l+b]+y*a[o+b]+x*a[u+b];return i}}class kf extends Uf{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,l=o-s,c=(n-e)/(r-e),u=1-c;for(let h=0;h!==s;++h)i[h]=a[l+h]*u+a[o+h]*c;return i}}class Gf extends Uf{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t){return this.copySampleValue_(t-1)}}class Vf{constructor(t,e,n,r){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Ff.convertArray(e,this.TimeBufferType),this.values=Ff.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:Ff.convertArray(t.times,Array),values:Ff.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Gf(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new kf(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Hf(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Fe:e=this.InterpolantFactoryMethodDiscrete;break;case Ue:e=this.InterpolantFactoryMethodLinear;break;case He:e=this.InterpolantFactoryMethodSmooth;break}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Fe;case this.InterpolantFactoryMethodLinear:return Ue;case this.InterpolantFactoryMethodSmooth:return He}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]*=t}return this}trim(t,e){const n=this.times,r=n.length;let i=0,a=r-1;while(i!==r&&n[i]<t)++i;while(-1!==a&&n[a]>e)--a;if(++a,0!==i||a!==r){i>=a&&(a=Math.max(a,1),i=a-1);const t=this.getValueSize();this.times=Ff.arraySlice(n,i,a),this.values=Ff.arraySlice(this.values,i*t,a*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let a=null;for(let s=0;s!==i;s++){const e=n[s];if("number"===typeof e&&isNaN(e)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,s,e),t=!1;break}if(null!==a&&a>e){console.error("THREE.KeyframeTrack: Out of order keys.",this,s,e,a),t=!1;break}a=e}if(void 0!==r&&Ff.isTypedArray(r))for(let s=0,o=r.length;s!==o;++s){const e=r[s];if(isNaN(e)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,s,e),t=!1;break}}return t}optimize(){const t=Ff.arraySlice(this.times),e=Ff.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===He,i=t.length-1;let a=1;for(let s=1;s<i;++s){let i=!1;const o=t[s],l=t[s+1];if(o!==l&&(1!==s||o!==t[0]))if(r)i=!0;else{const t=s*n,r=t-n,a=t+n;for(let s=0;s!==n;++s){const n=e[t+s];if(n!==e[r+s]||n!==e[a+s]){i=!0;break}}}if(i){if(s!==a){t[a]=t[s];const r=s*n,i=a*n;for(let t=0;t!==n;++t)e[i+t]=e[r+t]}++a}}if(i>0){t[a]=t[i];for(let t=i*n,r=a*n,s=0;s!==n;++s)e[r+s]=e[t+s];++a}return a!==t.length?(this.times=Ff.arraySlice(t,0,a),this.values=Ff.arraySlice(e,0,a*n)):(this.times=t,this.values=e),this}clone(){const t=Ff.arraySlice(this.times,0),e=Ff.arraySlice(this.values,0),n=this.constructor,r=new n(this.name,t,e);return r.createInterpolant=this.createInterpolant,r}}Vf.prototype.TimeBufferType=Float32Array,Vf.prototype.ValueBufferType=Float32Array,Vf.prototype.DefaultInterpolation=Ue;class Wf extends Vf{}Wf.prototype.ValueTypeName="bool",Wf.prototype.ValueBufferType=Array,Wf.prototype.DefaultInterpolation=Fe,Wf.prototype.InterpolantFactoryMethodLinear=void 0,Wf.prototype.InterpolantFactoryMethodSmooth=void 0;class jf extends Vf{}jf.prototype.ValueTypeName="color";class qf extends Vf{}qf.prototype.ValueTypeName="number";class Xf extends Uf{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(n-e)/(r-e);let l=t*s;for(let c=l+s;l!==c;l+=4)gr.slerpFlat(i,0,a,l-s,a,l,o);return i}}class Yf extends Vf{InterpolantFactoryMethodLinear(t){return new Xf(this.times,this.values,this.getValueSize(),t)}}Yf.prototype.ValueTypeName="quaternion",Yf.prototype.DefaultInterpolation=Ue,Yf.prototype.InterpolantFactoryMethodSmooth=void 0;class Jf extends Vf{}Jf.prototype.ValueTypeName="string",Jf.prototype.ValueBufferType=Array,Jf.prototype.DefaultInterpolation=Fe,Jf.prototype.InterpolantFactoryMethodLinear=void 0,Jf.prototype.InterpolantFactoryMethodSmooth=void 0;class Zf extends Vf{}Zf.prototype.ValueTypeName="vector";class Kf{constructor(t,e=-1,n,r=We){this.name=t,this.tracks=n,this.duration=e,this.blendMode=r,this.uuid=On(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,r=1/(t.fps||1);for(let a=0,s=n.length;a!==s;++a)e.push($f(n[a]).scale(r));const i=new this(t.name,t.duration,e,t.blendMode);return i.uuid=t.uuid,i}static toJSON(t){const e=[],n=t.tracks,r={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let i=0,a=n.length;i!==a;++i)e.push(Vf.toJSON(n[i]));return r}static CreateFromMorphTargetSequence(t,e,n,r){const i=e.length,a=[];for(let s=0;s<i;s++){let t=[],o=[];t.push((s+i-1)%i,s,(s+1)%i),o.push(0,1,0);const l=Ff.getKeyframeOrder(t);t=Ff.sortedArray(t,1,l),o=Ff.sortedArray(o,1,l),r||0!==t[0]||(t.push(i),o.push(o[0])),a.push(new qf(".morphTargetInfluences["+e[s].name+"]",t,o).scale(1/n))}return new this(t,-1,a)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let r=0;r<n.length;r++)if(n[r].name===e)return n[r];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const r={},i=/^([\w-]*?)([\d]+)$/;for(let s=0,o=t.length;s<o;s++){const e=t[s],n=e.name.match(i);if(n&&n.length>1){const t=n[1];let i=r[t];i||(r[t]=i=[]),i.push(e)}}const a=[];for(const s in r)a.push(this.CreateFromMorphTargetSequence(s,r[s],e,n));return a}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,r,i){if(0!==n.length){const a=[],s=[];Ff.flattenJSON(n,a,s,r),0!==a.length&&i.push(new t(e,a,s))}},r=[],i=t.name||"default",a=t.fps||30,s=t.blendMode;let o=t.length||-1;const l=t.hierarchy||[];for(let u=0;u<l.length;u++){const t=l[u].keys;if(t&&0!==t.length)if(t[0].morphTargets){const e={};let n;for(n=0;n<t.length;n++)if(t[n].morphTargets)for(let r=0;r<t[n].morphTargets.length;r++)e[t[n].morphTargets[r]]=-1;for(const i in e){const e=[],a=[];for(let r=0;r!==t[n].morphTargets.length;++r){const r=t[n];e.push(r.time),a.push(r.morphTarget===i?1:0)}r.push(new qf(".morphTargetInfluence["+i+"]",e,a))}o=e.length*(a||1)}else{const i=".bones["+e[u].name+"]";n(Zf,i+".position",t,"pos",r),n(Yf,i+".quaternion",t,"rot",r),n(Zf,i+".scale",t,"scl",r)}}if(0===r.length)return null;const c=new this(i,o,r,s);return c}resetDuration(){const t=this.tracks;let e=0;for(let n=0,r=t.length;n!==r;++n){const t=this.tracks[n];e=Math.max(e,t.times[t.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Qf(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return qf;case"vector":case"vector2":case"vector3":case"vector4":return Zf;case"color":return jf;case"quaternion":return Yf;case"bool":case"boolean":return Wf;case"string":return Jf}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}function $f(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Qf(t.type);if(void 0===t.times){const e=[],n=[];Ff.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const tm={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class em{constructor(t,e,n){const r=this;let i,a=!1,s=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===a&&void 0!==r.onStart&&r.onStart(t,s,o),a=!0},this.itemEnd=function(t){s++,void 0!==r.onProgress&&r.onProgress(t,s,o),s===o&&(a=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return i?i(t):t},this.setURLModifier=function(t){return i=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=l.length;e<n;e+=2){const n=l[e],r=l[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return r}return null}}}const nm=new em;class rm{constructor(t){this.manager=void 0!==t?t:nm,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise((function(r,i){n.load(t,r,e,i)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const im={};class am extends rm{constructor(t){super(t)}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=tm.get(t);if(void 0!==i)return this.manager.itemStart(t),setTimeout((()=>{e&&e(i),this.manager.itemEnd(t)}),0),i;if(void 0!==im[t])return void im[t].push({onLoad:e,onProgress:n,onError:r});im[t]=[],im[t].push({onLoad:e,onProgress:n,onError:r});const a=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"});fetch(a).then((e=>{if(200===e.status||0===e.status){if(0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"===typeof ReadableStream||void 0===e.body.getReader)return e;const n=im[t],r=e.body.getReader(),i=e.headers.get("Content-Length"),a=i?parseInt(i):0,s=0!==a;let o=0;const l=new ReadableStream({start(t){function e(){r.read().then((({done:r,value:i})=>{if(r)t.close();else{o+=i.byteLength;const r=new ProgressEvent("progress",{lengthComputable:s,loaded:o,total:a});for(let t=0,e=n.length;t<e;t++){const e=n[t];e.onProgress&&e.onProgress(r)}t.enqueue(i),e()}}))}e()}});return new Response(l)}throw Error(`fetch for "${e.url}" responded with ${e.status}: ${e.statusText}`)})).then((t=>{switch(this.responseType){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then((t=>{const e=new DOMParser;return e.parseFromString(t,this.mimeType)}));case"json":return t.json();default:return t.text()}})).then((e=>{tm.add(t,e);const n=im[t];delete im[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onLoad&&r.onLoad(e)}})).catch((e=>{const n=im[t];if(void 0===n)throw this.manager.itemError(t),e;delete im[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onError&&r.onError(e)}this.manager.itemError(t)})).finally((()=>{this.manager.itemEnd(t)})),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class sm extends rm{constructor(t){super(t)}load(t,e,n,r){const i=this,a=new am(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(a){r?r(a):console.error(a),i.manager.itemError(t)}}),n,r)}parse(t){const e=[];for(let n=0;n<t.length;n++){const r=Kf.parse(t[n]);e.push(r)}return e}}class om extends rm{constructor(t){super(t)}load(t,e,n,r){const i=this,a=[],s=new kd,o=new am(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(i.withCredentials);let l=0;function c(c){o.load(t[c],(function(t){const n=i.parse(t,!0);a[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(s.minFilter=xt),s.image=a,s.format=n.format,s.needsUpdate=!0,e&&e(s))}),n,r)}if(Array.isArray(t))for(let u=0,h=t.length;u<h;++u)c(u);else o.load(t,(function(t){const n=i.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){a[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)a[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),a[e].format=n.format,a[e].width=n.width,a[e].height=n.height}s.image=a}else s.image.width=n.width,s.image.height=n.height,s.mipmaps=n.mipmaps;1===n.mipmapCount&&(s.minFilter=xt),s.format=n.format,s.needsUpdate=!0,e&&e(s)}),n,r);return s}}class lm extends rm{constructor(t){super(t)}load(t,e,n,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,a=tm.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout((function(){e&&e(a),i.manager.itemEnd(t)}),0),a;const s=sr("img");function o(){c(),tm.add(t,this),e&&e(this),i.manager.itemEnd(t)}function l(e){c(),r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}function c(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),i.manager.itemStart(t),s.src=t,s}}class cm extends rm{constructor(t){super(t)}load(t,e,n,r){const i=new Ha,a=new lm(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let s=0;function o(n){a.load(t[n],(function(t){i.images[n]=t,s++,6===s&&(i.needsUpdate=!0,e&&e(i))}),void 0,r)}for(let l=0;l<t.length;++l)o(l);return i}}class um extends rm{constructor(t){super(t)}load(t,e,n,r){const i=this,a=new hd,s=new am(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(i.withCredentials),s.load(t,(function(t){const n=i.parse(t);n&&(void 0!==n.image?a.image=n.image:void 0!==n.data&&(a.image.width=n.width,a.image.height=n.height,a.image.data=n.data),a.wrapS=void 0!==n.wrapS?n.wrapS:dt,a.wrapT=void 0!==n.wrapT?n.wrapT:dt,a.magFilter=void 0!==n.magFilter?n.magFilter:xt,a.minFilter=void 0!==n.minFilter?n.minFilter:xt,a.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(a.encoding=n.encoding),void 0!==n.flipY&&(a.flipY=n.flipY),void 0!==n.format&&(a.format=n.format),void 0!==n.type&&(a.type=n.type),void 0!==n.mipmaps&&(a.mipmaps=n.mipmaps,a.minFilter=wt),1===n.mipmapCount&&(a.minFilter=xt),void 0!==n.generateMipmaps&&(a.generateMipmaps=n.generateMipmaps),a.needsUpdate=!0,e&&e(a,n))}),n,r),a}}class hm extends rm{constructor(t){super(t)}load(t,e,n,r){const i=new ur,a=new lm(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,(function(t){i.image=t,i.needsUpdate=!0,void 0!==e&&e(i)}),n,r),i}}class dm extends xi{constructor(t,e=1){super(),this.type="Light",this.color=new Ui(t),this.intensity=e}dispose(){}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}dm.prototype.isLight=!0;class pm extends dm{constructor(t,e,n){super(t,n),this.type="HemisphereLight",this.position.copy(xi.DefaultUp),this.updateMatrix(),this.groundColor=new Ui(e)}copy(t){return dm.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}pm.prototype.isHemisphereLight=!0;const fm=new Yr,mm=new vr,gm=new vr;class vm{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new er(512,512),this.map=null,this.mapPass=null,this.matrix=new Yr,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ya,this._frameExtents=new er(1,1),this._viewportCount=1,this._viewports=[new dr(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;mm.setFromMatrixPosition(t.matrixWorld),e.position.copy(mm),gm.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(gm),e.updateMatrixWorld(),fm.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(fm),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class ym extends vm{constructor(){super(new za(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*In*t.angle*this.focus,r=this.mapSize.width/this.mapSize.height,i=t.distance||e.far;n===e.fov&&r===e.aspect&&i===e.far||(e.fov=n,e.aspect=r,e.far=i,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}ym.prototype.isSpotLightShadow=!0;class xm extends dm{constructor(t,e,n=0,r=Math.PI/3,i=0,a=1){super(t,e),this.type="SpotLight",this.position.copy(xi.DefaultUp),this.updateMatrix(),this.target=new xi,this.distance=n,this.angle=r,this.penumbra=i,this.decay=a,this.shadow=new ym}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}xm.prototype.isSpotLight=!0;const bm=new Yr,_m=new vr,wm=new vr;class Mm extends vm{constructor(){super(new za(90,1,.5,500)),this._frameExtents=new er(4,2),this._viewportCount=6,this._viewports=[new dr(2,1,1,1),new dr(0,1,1,1),new dr(3,1,1,1),new dr(1,1,1,1),new dr(3,0,1,1),new dr(1,0,1,1)],this._cubeDirections=[new vr(1,0,0),new vr(-1,0,0),new vr(0,0,1),new vr(0,0,-1),new vr(0,1,0),new vr(0,-1,0)],this._cubeUps=[new vr(0,1,0),new vr(0,1,0),new vr(0,1,0),new vr(0,1,0),new vr(0,0,1),new vr(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,r=this.matrix,i=t.distance||n.far;i!==n.far&&(n.far=i,n.updateProjectionMatrix()),_m.setFromMatrixPosition(t.matrixWorld),n.position.copy(_m),wm.copy(n.position),wm.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(wm),n.updateMatrixWorld(),r.makeTranslation(-_m.x,-_m.y,-_m.z),bm.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(bm)}}Mm.prototype.isPointLightShadow=!0;class Sm extends dm{constructor(t,e,n=0,r=1){super(t,e),this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new Mm}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}Sm.prototype.isPointLight=!0;class Tm extends vm{constructor(){super(new Ol(-5,5,5,-5,.5,500))}}Tm.prototype.isDirectionalLightShadow=!0;class Em extends dm{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(xi.DefaultUp),this.updateMatrix(),this.target=new xi,this.shadow=new Tm}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Em.prototype.isDirectionalLight=!0;class Am extends dm{constructor(t,e){super(t,e),this.type="AmbientLight"}}Am.prototype.isAmbientLight=!0;class Cm extends dm{constructor(t,e,n=10,r=10){super(t,e),this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}Cm.prototype.isRectAreaLight=!0;class Lm{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new vr)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,r=t.y,i=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.282095),e.addScaledVector(a[1],.488603*r),e.addScaledVector(a[2],.488603*i),e.addScaledVector(a[3],.488603*n),e.addScaledVector(a[4],n*r*1.092548),e.addScaledVector(a[5],r*i*1.092548),e.addScaledVector(a[6],.315392*(3*i*i-1)),e.addScaledVector(a[7],n*i*1.092548),e.addScaledVector(a[8],.546274*(n*n-r*r)),e}getIrradianceAt(t,e){const n=t.x,r=t.y,i=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.886227),e.addScaledVector(a[1],1.023328*r),e.addScaledVector(a[2],1.023328*i),e.addScaledVector(a[3],1.023328*n),e.addScaledVector(a[4],.858086*n*r),e.addScaledVector(a[5],.858086*r*i),e.addScaledVector(a[6],.743125*i*i-.247708),e.addScaledVector(a[7],.858086*n*i),e.addScaledVector(a[8],.429043*(n*n-r*r)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(t,e+3*r);return this}toArray(t=[],e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(t,e+3*r);return t}static getBasisAt(t,e){const n=t.x,r=t.y,i=t.z;e[0]=.282095,e[1]=.488603*r,e[2]=.488603*i,e[3]=.488603*n,e[4]=1.092548*n*r,e[5]=1.092548*r*i,e[6]=.315392*(3*i*i-1),e[7]=1.092548*n*i,e[8]=.546274*(n*n-r*r)}}Lm.prototype.isSphericalHarmonics3=!0;class Rm extends dm{constructor(t=new Lm,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}Rm.prototype.isLightProbe=!0;class Pm extends rm{constructor(t){super(t),this.textures={}}load(t,e,n,r){const i=this,a=new am(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(a){r?r(a):console.error(a),i.manager.itemError(t)}}),n,r)}parse(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const r=new Bf[t.type];if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&void 0!==r.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.sheen&&(r.sheen=t.sheen),void 0!==t.sheenColor&&(r.sheenColor=(new Ui).setHex(t.sheenColor)),void 0!==t.sheenRoughness&&(r.sheenRoughness=t.sheenRoughness),void 0!==t.emissive&&void 0!==r.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==r.specular&&r.specular.setHex(t.specular),void 0!==t.specularIntensity&&(r.specularIntensity=t.specularIntensity),void 0!==t.specularColor&&void 0!==r.specularColor&&r.specularColor.setHex(t.specularColor),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearcoat&&(r.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(r.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.transmission&&(r.transmission=t.transmission),void 0!==t.thickness&&(r.thickness=t.thickness),void 0!==t.attenuationDistance&&(r.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==r.attenuationColor&&r.attenuationColor.setHex(t.attenuationColor),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.flatShading&&(r.flatShading=t.flatShading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.combine&&(r.combine=t.combine),void 0!==t.side&&(r.side=t.side),void 0!==t.shadowSide&&(r.shadowSide=t.shadowSide),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.format&&(r.format=t.format),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(r.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(r.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(r.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(r.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(r.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(r.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(r.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(r.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(r.rotation=t.rotation),1!==t.linewidth&&(r.linewidth=t.linewidth),void 0!==t.dashSize&&(r.dashSize=t.dashSize),void 0!==t.gapSize&&(r.gapSize=t.gapSize),void 0!==t.scale&&(r.scale=t.scale),void 0!==t.polygonOffset&&(r.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(r.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(r.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(r.dithering=t.dithering),void 0!==t.alphaToCoverage&&(r.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(r.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.toneMapped&&(r.toneMapped=t.toneMapped),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.vertexColors&&("number"===typeof t.vertexColors?r.vertexColors=t.vertexColors>0:r.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const i in t.uniforms){const e=t.uniforms[i];switch(r.uniforms[i]={},e.type){case"t":r.uniforms[i].value=n(e.value);break;case"c":r.uniforms[i].value=(new Ui).setHex(e.value);break;case"v2":r.uniforms[i].value=(new er).fromArray(e.value);break;case"v3":r.uniforms[i].value=(new vr).fromArray(e.value);break;case"v4":r.uniforms[i].value=(new dr).fromArray(e.value);break;case"m3":r.uniforms[i].value=(new nr).fromArray(e.value);break;case"m4":r.uniforms[i].value=(new Yr).fromArray(e.value);break;default:r.uniforms[i].value=e.value}}if(void 0!==t.defines&&(r.defines=t.defines),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const i in t.extensions)r.extensions[i]=t.extensions[i];if(void 0!==t.shading&&(r.flatShading=1===t.shading),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=n(t.map)),void 0!==t.matcap&&(r.matcap=n(t.matcap)),void 0!==t.alphaMap&&(r.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(r.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(r.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),r.normalScale=(new er).fromArray(e)}return void 0!==t.displacementMap&&(r.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=n(t.specularMap)),void 0!==t.specularIntensityMap&&(r.specularIntensityMap=n(t.specularIntensityMap)),void 0!==t.specularColorMap&&(r.specularColorMap=n(t.specularColorMap)),void 0!==t.envMap&&(r.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(r.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(r.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(r.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(r.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(r.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(r.clearcoatNormalScale=(new er).fromArray(t.clearcoatNormalScale)),void 0!==t.transmissionMap&&(r.transmissionMap=n(t.transmissionMap)),void 0!==t.thicknessMap&&(r.thicknessMap=n(t.thicknessMap)),void 0!==t.sheenColorMap&&(r.sheenColorMap=n(t.sheenColorMap)),void 0!==t.sheenRoughnessMap&&(r.sheenRoughnessMap=n(t.sheenRoughnessMap)),r}setTextures(t){return this.textures=t,this}}class Dm{static decodeText(t){if("undefined"!==typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let r=0,i=t.length;r<i;r++)e+=String.fromCharCode(t[r]);try{return decodeURIComponent(escape(e))}catch(n){return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}static resolveURL(t,e){return"string"!==typeof t||""===t?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Im extends oa{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}Im.prototype.isInstancedBufferGeometry=!0;class Om extends rm{constructor(t){super(t)}load(t,e,n,r){const i=this,a=new am(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(a){r?r(a):console.error(a),i.manager.itemError(t)}}),n,r)}parse(t){const e={},n={};function r(t,n){if(void 0!==e[n])return e[n];const r=t.interleavedBuffers,a=r[n],s=i(t,a.buffer),o=ar(a.type,s),l=new zh(o,a.stride);return l.uuid=a.uuid,e[n]=l,l}function i(t,e){if(void 0!==n[e])return n[e];const r=t.arrayBuffers,i=r[e],a=new Uint32Array(i).buffer;return n[e]=a,a}const a=t.isInstancedBufferGeometry?new Im:new oa,s=t.data.index;if(void 0!==s){const t=ar(s.type,s.array);a.setIndex(new Vi(t,1))}const o=t.data.attributes;for(const d in o){const e=o[d];let n;if(e.isInterleavedBufferAttribute){const i=r(t.data,e.data);n=new Fh(i,e.itemSize,e.offset,e.normalized)}else{const t=ar(e.type,e.array),r=e.isInstancedBufferAttribute?md:Vi;n=new r(t,e.itemSize,e.normalized)}void 0!==e.name&&(n.name=e.name),void 0!==e.usage&&n.setUsage(e.usage),void 0!==e.updateRange&&(n.updateRange.offset=e.updateRange.offset,n.updateRange.count=e.updateRange.count),a.setAttribute(d,n)}const l=t.data.morphAttributes;if(l)for(const d in l){const e=l[d],n=[];for(let i=0,a=e.length;i<a;i++){const a=e[i];let s;if(a.isInterleavedBufferAttribute){const e=r(t.data,a.data);s=new Fh(e,a.itemSize,a.offset,a.normalized)}else{const t=ar(a.type,a.array);s=new Vi(t,a.itemSize,a.normalized)}void 0!==a.name&&(s.name=a.name),n.push(s)}a.morphAttributes[d]=n}const c=t.data.morphTargetsRelative;c&&(a.morphTargetsRelative=!0);const u=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==u)for(let d=0,p=u.length;d!==p;++d){const t=u[d];a.addGroup(t.start,t.count,t.materialIndex)}const h=t.data.boundingSphere;if(void 0!==h){const t=new vr;void 0!==h.center&&t.fromArray(h.center),a.boundingSphere=new Ur(t,h.radius)}return t.name&&(a.name=t.name),t.userData&&(a.userData=t.userData),a}}class Nm extends rm{constructor(t){super(t)}load(t,e,n,r){const i=this,a=""===this.path?Dm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||a;const s=new am(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(function(n){let a=null;try{a=JSON.parse(n)}catch(o){return void 0!==r&&r(o),void console.error("THREE:ObjectLoader: Can't parse "+t+".",o.message)}const s=a.metadata;void 0!==s&&void 0!==s.type&&"geometry"!==s.type.toLowerCase()?i.parse(a,e):console.error("THREE.ObjectLoader: Can't load "+t)}),n,r)}async loadAsync(t,e){const n=this,r=""===this.path?Dm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||r;const i=new am(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials);const a=await i.loadAsync(t,e),s=JSON.parse(a),o=s.metadata;if(void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+t);return await n.parseAsync(s)}parse(t,e){const n=this.parseAnimations(t.animations),r=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,r),a=this.parseImages(t.images,(function(){void 0!==e&&e(l)})),s=this.parseTextures(t.textures,a),o=this.parseMaterials(t.materials,s),l=this.parseObject(t.object,i,o,s,n),c=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,c),void 0!==e){let t=!1;for(const e in a)if(a[e]instanceof HTMLImageElement){t=!0;break}!1===t&&e(l)}return l}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,n),i=await this.parseImagesAsync(t.images),a=this.parseTextures(t.textures,i),s=this.parseMaterials(t.materials,a),o=this.parseObject(t.object,r,s,a,e),l=this.parseSkeletons(t.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(t){const e={};if(void 0!==t)for(let n=0,r=t.length;n<r;n++){const r=(new Cp).fromJSON(t[n]);e[r.uuid]=r}return e}parseSkeletons(t,e){const n={},r={};if(e.traverse((function(t){t.isBone&&(r[t.uuid]=t)})),void 0!==t)for(let i=0,a=t.length;i<a;i++){const e=(new fd).fromJSON(t[i],r);n[e.uuid]=e}return n}parseGeometries(t,e){const n={};if(void 0!==t){const r=new Om;for(let i=0,a=t.length;i<a;i++){let a;const s=t[i];switch(s.type){case"BufferGeometry":case"InstancedBufferGeometry":a=r.parse(s);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:s.type in Af?a=Af[s.type].fromJSON(s,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${s.type}"`)}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),!0===a.isBufferGeometry&&void 0!==s.userData&&(a.userData=s.userData),n[s.uuid]=a}}return n}parseMaterials(t,e){const n={},r={};if(void 0!==t){const i=new Pm;i.setTextures(e);for(let e=0,a=t.length;e<a;e++){const a=t[e];if("MultiMaterial"===a.type){const t=[];for(let e=0;e<a.materials.length;e++){const r=a.materials[e];void 0===n[r.uuid]&&(n[r.uuid]=i.parse(r)),t.push(n[r.uuid])}r[a.uuid]=t}else void 0===n[a.uuid]&&(n[a.uuid]=i.parse(a)),r[a.uuid]=n[a.uuid]}}return r}parseAnimations(t){const e={};if(void 0!==t)for(let n=0;n<t.length;n++){const r=t[n],i=Kf.parse(r);e[i.uuid]=i}return e}parseImages(t,e){const n=this,r={};let i;function a(t){return n.manager.itemStart(t),i.load(t,(function(){n.manager.itemEnd(t)}),void 0,(function(){n.manager.itemError(t),n.manager.itemEnd(t)}))}function s(t){if("string"===typeof t){const e=t,r=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:n.resourcePath+e;return a(r)}return t.data?{data:ar(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){const n=new em(e);i=new lm(n),i.setCrossOrigin(this.crossOrigin);for(let e=0,i=t.length;e<i;e++){const n=t[e],i=n.url;if(Array.isArray(i)){r[n.uuid]=[];for(let t=0,e=i.length;t<e;t++){const e=i[t],a=s(e);null!==a&&(a instanceof HTMLImageElement?r[n.uuid].push(a):r[n.uuid].push(new hd(a.data,a.width,a.height)))}}else{const t=s(n.url);null!==t&&(r[n.uuid]=t)}}}return r}async parseImagesAsync(t){const e=this,n={};let r;async function i(t){if("string"===typeof t){const n=t,i=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:e.resourcePath+n;return await r.loadAsync(i)}return t.data?{data:ar(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){r=new lm(this.manager),r.setCrossOrigin(this.crossOrigin);for(let e=0,r=t.length;e<r;e++){const r=t[e],a=r.url;if(Array.isArray(a)){n[r.uuid]=[];for(let t=0,e=a.length;t<e;t++){const e=a[t],s=await i(e);null!==s&&(s instanceof HTMLImageElement?n[r.uuid].push(s):n[r.uuid].push(new hd(s.data,s.width,s.height)))}}else{const t=await i(r.url);null!==t&&(n[r.uuid]=t)}}}return n}parseTextures(t,e){function n(t,e){return"number"===typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const r={};if(void 0!==t)for(let i=0,a=t.length;i<a;i++){const a=t[i];let s;void 0===a.image&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),void 0===e[a.image]&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const o=e[a.image];Array.isArray(o)?(s=new Ha(o),6===o.length&&(s.needsUpdate=!0)):(s=o&&o.data?new hd(o.data,o.width,o.height):new ur(o),o&&(s.needsUpdate=!0)),s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),void 0!==a.mapping&&(s.mapping=n(a.mapping,zm)),void 0!==a.offset&&s.offset.fromArray(a.offset),void 0!==a.repeat&&s.repeat.fromArray(a.repeat),void 0!==a.center&&s.center.fromArray(a.center),void 0!==a.rotation&&(s.rotation=a.rotation),void 0!==a.wrap&&(s.wrapS=n(a.wrap[0],Bm),s.wrapT=n(a.wrap[1],Bm)),void 0!==a.format&&(s.format=a.format),void 0!==a.type&&(s.type=a.type),void 0!==a.encoding&&(s.encoding=a.encoding),void 0!==a.minFilter&&(s.minFilter=n(a.minFilter,Fm)),void 0!==a.magFilter&&(s.magFilter=n(a.magFilter,Fm)),void 0!==a.anisotropy&&(s.anisotropy=a.anisotropy),void 0!==a.flipY&&(s.flipY=a.flipY),void 0!==a.premultiplyAlpha&&(s.premultiplyAlpha=a.premultiplyAlpha),void 0!==a.unpackAlignment&&(s.unpackAlignment=a.unpackAlignment),void 0!==a.userData&&(s.userData=a.userData),r[a.uuid]=s}return r}parseObject(t,e,n,r,i){let a,s,o;function l(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function c(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let r=0,i=t.length;r<i;r++){const i=t[r];void 0===n[i]&&console.warn("THREE.ObjectLoader: Undefined material",i),e.push(n[i])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}function u(t){return void 0===r[t]&&console.warn("THREE.ObjectLoader: Undefined texture",t),r[t]}switch(t.type){case"Scene":a=new Nh,void 0!==t.background&&(Number.isInteger(t.background)?a.background=new Ui(t.background):a.background=u(t.background)),void 0!==t.environment&&(a.environment=u(t.environment)),void 0!==t.fog&&("Fog"===t.fog.type?a.fog=new Oh(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(a.fog=new Ih(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":a=new za(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(a.focus=t.focus),void 0!==t.zoom&&(a.zoom=t.zoom),void 0!==t.filmGauge&&(a.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(a.filmOffset=t.filmOffset),void 0!==t.view&&(a.view=Object.assign({},t.view));break;case"OrthographicCamera":a=new Ol(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(a.zoom=t.zoom),void 0!==t.view&&(a.view=Object.assign({},t.view));break;case"AmbientLight":a=new Am(t.color,t.intensity);break;case"DirectionalLight":a=new Em(t.color,t.intensity);break;case"PointLight":a=new Sm(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":a=new Cm(t.color,t.intensity,t.width,t.height);break;case"SpotLight":a=new xm(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":a=new pm(t.color,t.groundColor,t.intensity);break;case"LightProbe":a=(new Rm).fromJSON(t);break;case"SkinnedMesh":s=l(t.geometry),o=c(t.material),a=new cd(s,o),void 0!==t.bindMode&&(a.bindMode=t.bindMode),void 0!==t.bindMatrix&&a.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(a.skeleton=t.skeleton);break;case"Mesh":s=l(t.geometry),o=c(t.material),a=new Ta(s,o);break;case"InstancedMesh":s=l(t.geometry),o=c(t.material);const e=t.count,n=t.instanceMatrix,r=t.instanceColor;a=new bd(s,o,e),a.instanceMatrix=new md(new Float32Array(n.array),16),void 0!==r&&(a.instanceColor=new md(new Float32Array(r.array),r.itemSize));break;case"LOD":a=new rd;break;case"Line":a=new Ad(l(t.geometry),c(t.material));break;case"LineLoop":a=new Pd(l(t.geometry),c(t.material));break;case"LineSegments":a=new Rd(l(t.geometry),c(t.material));break;case"PointCloud":case"Points":a=new Bd(l(t.geometry),c(t.material));break;case"Sprite":a=new $h(c(t.material));break;case"Group":a=new Sh;break;case"Bone":a=new ud;break;default:a=new xi}if(a.uuid=t.uuid,void 0!==t.name&&(a.name=t.name),void 0!==t.matrix?(a.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(a.matrixAutoUpdate=t.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(void 0!==t.position&&a.position.fromArray(t.position),void 0!==t.rotation&&a.rotation.fromArray(t.rotation),void 0!==t.quaternion&&a.quaternion.fromArray(t.quaternion),void 0!==t.scale&&a.scale.fromArray(t.scale)),void 0!==t.castShadow&&(a.castShadow=t.castShadow),void 0!==t.receiveShadow&&(a.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(a.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(a.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(a.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&a.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(a.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(a.visible=t.visible),void 0!==t.frustumCulled&&(a.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(a.renderOrder=t.renderOrder),void 0!==t.userData&&(a.userData=t.userData),void 0!==t.layers&&(a.layers.mask=t.layers),void 0!==t.children){const s=t.children;for(let t=0;t<s.length;t++)a.add(this.parseObject(s[t],e,n,r,i))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const n=e[t];a.animations.push(i[n])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(a.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const n=e[t],r=a.getObjectByProperty("uuid",n.object);void 0!==r&&a.addLevel(r,n.distance)}}return a}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse((function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const n=e[t.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",t.skeleton):t.bind(n,t.bindMatrix)}}))}setTexturePath(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}}const zm={UVMapping:it,CubeReflectionMapping:at,CubeRefractionMapping:st,EquirectangularReflectionMapping:ot,EquirectangularRefractionMapping:lt,CubeUVReflectionMapping:ct,CubeUVRefractionMapping:ut},Bm={RepeatWrapping:ht,ClampToEdgeWrapping:dt,MirroredRepeatWrapping:pt},Fm={NearestFilter:ft,NearestMipmapNearestFilter:mt,NearestMipmapLinearFilter:vt,LinearFilter:xt,LinearMipmapNearestFilter:bt,LinearMipmapLinearFilter:wt};class Um extends rm{constructor(t){super(t),"undefined"===typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"===typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,a=tm.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout((function(){e&&e(a),i.manager.itemEnd(t)}),0),a;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(i.options,{colorSpaceConversion:"none"}))})).then((function(n){tm.add(t,n),e&&e(n),i.manager.itemEnd(t)})).catch((function(e){r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)})),i.manager.itemStart(t)}}let Hm;Um.prototype.isImageBitmapLoader=!0;const km={getContext:function(){return void 0===Hm&&(Hm=new(window.AudioContext||window.webkitAudioContext)),Hm},setContext:function(t){Hm=t}};class Gm extends rm{constructor(t){super(t)}load(t,e,n,r){const i=this,a=new am(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(n){try{const t=n.slice(0),r=km.getContext();r.decodeAudioData(t,(function(t){e(t)}))}catch(a){r?r(a):console.error(a),i.manager.itemError(t)}}),n,r)}}class Vm extends Rm{constructor(t,e,n=1){super(void 0,n);const r=(new Ui).set(t),i=(new Ui).set(e),a=new vr(r.r,r.g,r.b),s=new vr(i.r,i.g,i.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(a).sub(s).multiplyScalar(l)}}Vm.prototype.isHemisphereLightProbe=!0;class Wm extends Rm{constructor(t,e=1){super(void 0,e);const n=(new Ui).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Wm.prototype.isAmbientLightProbe=!0;const jm=new Yr,qm=new Yr,Xm=new Yr;class Ym{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new za,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new za,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache,n=e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep;if(n){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,Xm.copy(t.projectionMatrix);const n=e.eyeSep/2,r=n*e.near/e.focus,i=e.near*Math.tan(Dn*e.fov*.5)/e.zoom;let a,s;qm.elements[12]=-n,jm.elements[12]=n,a=-i*e.aspect+r,s=i*e.aspect+r,Xm.elements[0]=2*e.near/(s-a),Xm.elements[8]=(s+a)/(s-a),this.cameraL.projectionMatrix.copy(Xm),a=-i*e.aspect-r,s=i*e.aspect-r,Xm.elements[0]=2*e.near/(s-a),Xm.elements[8]=(s+a)/(s-a),this.cameraR.projectionMatrix.copy(Xm)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(qm),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(jm)}}class Jm{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Zm(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=Zm();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function Zm(){return("undefined"===typeof performance?Date:performance).now()}const Km=new vr,Qm=new gr,$m=new vr,tg=new vr;class eg extends xi{constructor(){super(),this.type="AudioListener",this.context=km.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Jm}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Km,Qm,$m),tg.set(0,0,-1).applyQuaternion(Qm),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Km.x,t),e.positionY.linearRampToValueAtTime(Km.y,t),e.positionZ.linearRampToValueAtTime(Km.z,t),e.forwardX.linearRampToValueAtTime(tg.x,t),e.forwardY.linearRampToValueAtTime(tg.y,t),e.forwardZ.linearRampToValueAtTime(tg.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition(Km.x,Km.y,Km.z),e.setOrientation(tg.x,tg.y,tg.z,n.x,n.y,n.z)}}class ng extends xi{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const rg=new vr,ig=new gr,ag=new vr,sg=new vr;class og extends ng{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(rg,ig,ag),sg.set(0,0,1).applyQuaternion(ig);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(rg.x,t),e.positionY.linearRampToValueAtTime(rg.y,t),e.positionZ.linearRampToValueAtTime(rg.z,t),e.orientationX.linearRampToValueAtTime(sg.x,t),e.orientationY.linearRampToValueAtTime(sg.y,t),e.orientationZ.linearRampToValueAtTime(sg.z,t)}else e.setPosition(rg.x,rg.y,rg.z),e.setOrientation(sg.x,sg.y,sg.z)}}class lg{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class cg{constructor(t,e,n){let r,i,a;switch(this.binding=t,this.valueSize=n,e){case"quaternion":r=this._slerp,i=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,i=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,i=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=i,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,r=this.valueSize,i=t*r+r;let a=this.cumulativeWeight;if(0===a){for(let t=0;t!==r;++t)n[i+t]=n[t];a=e}else{a+=e;const t=e/a;this._mixBufferRegion(n,i,0,t,r)}this.cumulativeWeight=a}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,r,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,r=t*e+e,i=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,i<1){const t=e*this._origIndex;this._mixBufferRegion(n,r,t,1-i,e)}a>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*e,1,e);for(let o=e,l=e+e;o!==l;++o)if(n[o]!==n[o+e]){s.setValue(n,r);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,r=n*this._origIndex;t.getValue(e,r);for(let i=n,a=r;i!==a;++i)e[i]=e[r+i%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,r,i){if(r>=.5)for(let a=0;a!==i;++a)t[e+a]=t[n+a]}_slerp(t,e,n,r){gr.slerpFlat(t,e,t,e,t,n,r)}_slerpAdditive(t,e,n,r,i){const a=this._workIndex*i;gr.multiplyQuaternionsFlat(t,a,t,e,t,n),gr.slerpFlat(t,e,t,e,t,a,r)}_lerp(t,e,n,r,i){const a=1-r;for(let s=0;s!==i;++s){const i=e+s;t[i]=t[i]*a+t[n+s]*r}}_lerpAdditive(t,e,n,r,i){for(let a=0;a!==i;++a){const i=e+a;t[i]=t[i]+t[n+a]*r}}}const ug="\\[\\]\\.:\\/",hg=new RegExp("["+ug+"]","g"),dg="[^"+ug+"]",pg="[^"+ug.replace("\\.","")+"]",fg=/((?:WC+[\/:])*)/.source.replace("WC",dg),mg=/(WCOD+)?/.source.replace("WCOD",pg),gg=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",dg),vg=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",dg),yg=new RegExp("^"+fg+mg+gg+vg+"$"),xg=["material","materials","bones"];class bg{constructor(t,e,n){const r=n||_g.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,r)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class _g{constructor(t,e,n){this.path=e,this.parsedPath=n||_g.parseTrackName(e),this.node=_g.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new _g.Composite(t,e,n):new _g(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(hg,"")}static parseTrackName(t){const e=yg.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const t=n.nodeName.substring(r+1);-1!==xg.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let r=0;r<t.length;r++){const i=t[r];if(i.name===e||i.uuid===e)return i;const a=n(i.children);if(a)return a}return null},r=n(t.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)t[e++]=n[r]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,r=e.propertyName;let i=e.propertyIndex;if(t||(t=_g.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let r=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===r){r=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==r){if(void 0===t[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[r]}}const a=t[r];if(void 0===a){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",t)}let s=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[i]&&(i=t.morphTargetDictionary[i])}o=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=i}else void 0!==a.fromArray&&void 0!==a.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(o=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=r;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][s]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}_g.Composite=bg,_g.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},_g.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},_g.prototype.GetterByBindingType=[_g.prototype._getValue_direct,_g.prototype._getValue_array,_g.prototype._getValue_arrayElement,_g.prototype._getValue_toArray],_g.prototype.SetterByBindingTypeAndVersioning=[[_g.prototype._setValue_direct,_g.prototype._setValue_direct_setNeedsUpdate,_g.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[_g.prototype._setValue_array,_g.prototype._setValue_array_setNeedsUpdate,_g.prototype._setValue_array_setMatrixWorldNeedsUpdate],[_g.prototype._setValue_arrayElement,_g.prototype._setValue_arrayElement_setNeedsUpdate,_g.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[_g.prototype._setValue_fromArray,_g.prototype._setValue_fromArray_setNeedsUpdate,_g.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class wg{constructor(){this.uuid=On(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,r=arguments.length;n!==r;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,r=this._parsedPaths,i=this._bindings,a=i.length;let s,o=t.length,l=this.nCachedObjects_;for(let c=0,u=arguments.length;c!==u;++c){const u=arguments[c],h=u.uuid;let d=e[h];if(void 0===d){d=o++,e[h]=d,t.push(u);for(let t=0,e=a;t!==e;++t)i[t].push(new _g(u,n[t],r[t]))}else if(d<l){s=t[d];const o=--l,c=t[o];e[c.uuid]=d,t[d]=c,e[h]=o,t[o]=u;for(let t=0,e=a;t!==e;++t){const e=i[t],a=e[o];let s=e[d];e[d]=a,void 0===s&&(s=new _g(u,n[t],r[t])),e[o]=s}}else t[d]!==s&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_;for(let a=0,s=arguments.length;a!==s;++a){const s=arguments[a],o=s.uuid,l=e[o];if(void 0!==l&&l>=i){const a=i++,c=t[a];e[c.uuid]=l,t[l]=c,e[o]=a,t[a]=s;for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[a],i=e[l];e[l]=r,e[a]=i}}}this.nCachedObjects_=i}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_,a=t.length;for(let s=0,o=arguments.length;s!==o;++s){const o=arguments[s],l=o.uuid,c=e[l];if(void 0!==c)if(delete e[l],c<i){const s=--i,o=t[s],l=--a,u=t[l];e[o.uuid]=c,t[c]=o,e[u.uuid]=s,t[s]=u,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[s],i=e[l];e[c]=r,e[s]=i,e.pop()}}else{const i=--a,s=t[i];i>0&&(e[s.uuid]=c),t[c]=s,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t];e[c]=e[i],e.pop()}}}this.nCachedObjects_=i}subscribe_(t,e){const n=this._bindingsIndicesByPath;let r=n[t];const i=this._bindings;if(void 0!==r)return i[r];const a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,u=new Array(l);r=i.length,n[t]=r,a.push(t),s.push(e),i.push(u);for(let h=c,d=o.length;h!==d;++h){const n=o[h];u[h]=new _g(n,t,e)}return u}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const r=this._paths,i=this._parsedPaths,a=this._bindings,s=a.length-1,o=a[s],l=t[s];e[l]=n,a[n]=o,a.pop(),i[n]=i[s],i.pop(),r[n]=r[s],r.pop()}}}wg.prototype.isAnimationObjectGroup=!0;class Mg{constructor(t,e,n=null,r=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=r;const i=e.tracks,a=i.length,s=new Array(a),o={endingStart:ke,endingEnd:ke};for(let l=0;l!==a;++l){const t=i[l].createInterpolant(null);s[l]=t,t.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=ze,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,r=t._clip.duration,i=r/n,a=n/r;t.warp(1,i,e),this.warp(a,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const r=this._mixer,i=r.time,a=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=r._lendControlInterpolant(),this._timeScaleInterpolant=s);const o=s.parameterPositions,l=s.sampleValues;return o[0]=i,o[1]=i+n,l[0]=t/a,l[1]=e/a,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,r){if(!this.enabled)return void this._updateWeight(t);const i=this._startTime;if(null!==i){const r=(t-i)*n;if(r<0||0===n)return;this._startTime=null,e=n*r}e*=this._updateTimeScale(t);const a=this._updateTime(e),s=this._updateWeight(t);if(s>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case je:for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(a),e[n].accumulateAdditive(s);break;case We:default:for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(a),e[n].accumulate(r,s)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const r=n.evaluate(t)[0];e*=r,t>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(null!==n){const r=n.evaluate(t)[0];e*=r,t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let r=this.time+t,i=this._loopCount;const a=n===Be;if(0===t)return-1===i?r:a&&1===(1&i)?e-r:r;if(n===Ne){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(r>=e)r=e;else{if(!(r<0)){this.time=r;break t}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===i&&(t>=0?(i=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),r>=e||r<0){const n=Math.floor(r/e);r-=e*n,i+=Math.abs(n);const s=this.repetitions-i;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=t>0?e:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){const e=t<0;this._setEndings(e,!e,a)}else this._setEndings(!1,!1,a);this._loopCount=i,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=r;if(a&&1===(1&i))return e-r}return r}_setEndings(t,e,n){const r=this._interpolantSettings;n?(r.endingStart=Ge,r.endingEnd=Ge):(r.endingStart=t?this.zeroSlopeAtStart?Ge:ke:Ve,r.endingEnd=e?this.zeroSlopeAtEnd?Ge:ke:Ve)}_scheduleFading(t,e,n){const r=this._mixer,i=r.time;let a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);const s=a.parameterPositions,o=a.sampleValues;return s[0]=i,o[0]=e,s[1]=i+t,o[1]=n,this}}class Sg extends Ln{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,r=t._clip.tracks,i=r.length,a=t._propertyBindings,s=t._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let c=l[o];void 0===c&&(c={},l[o]=c);for(let u=0;u!==i;++u){const t=r[u],i=t.name;let l=c[i];if(void 0!==l)a[u]=l;else{if(l=a[u],void 0!==l){null===l._cacheIndex&&(++l.referenceCount,this._addInactiveBinding(l,o,i));continue}const r=e&&e._propertyBindings[u].binding.parsedPath;l=new cg(_g.create(n,i,r),t.ValueTypeName,t.getValueSize()),++l.referenceCount,this._addInactiveBinding(l,o,i),a[u]=l}s[u].resultBuffer=l.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,r=this._actionsByClip[n];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0===n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0===--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const r=this._actions,i=this._actionsByClip;let a=i[e];if(void 0===a)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,i[e]=a;else{const e=a.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=r.length,r.push(t),a.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],r=t._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),t._cacheIndex=null;const i=t._clip.uuid,a=this._actionsByClip,s=a[i],o=s.knownActions,l=o[o.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),t._byClipCacheIndex=null;const u=s.actionByRoot,h=(t._localRoot||this._root).uuid;delete u[h],0===o.length&&delete a[i],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,r=e.length;n!==r;++n){const t=e[n];0===--t.referenceCount&&this._removeInactiveBinding(t)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,r=this._nActiveActions++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,r=--this._nActiveActions,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_addInactiveBinding(t,e,n){const r=this._bindingsByRootAndName,i=this._bindings;let a=r[e];void 0===a&&(a={},r[e]=a),a[n]=t,t._cacheIndex=i.length,i.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,r=n.rootNode.uuid,i=n.path,a=this._bindingsByRootAndName,s=a[r],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete s[i],0===Object.keys(s).length&&delete a[r]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,r=this._nActiveBindings++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,r=--this._nActiveBindings,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new kf(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,r=--this._nActiveControlInterpolants,i=e[r];t.__cacheIndex=r,e[r]=t,i.__cacheIndex=n,e[n]=i}clipAction(t,e,n){const r=e||this._root,i=r.uuid;let a="string"===typeof t?Kf.findByName(r,t):t;const s=null!==a?a.uuid:t,o=this._actionsByClip[s];let l=null;if(void 0===n&&(n=null!==a?a.blendMode:We),void 0!==o){const t=o.actionByRoot[i];if(void 0!==t&&t.blendMode===n)return t;l=o.knownActions[0],null===a&&(a=l._clip)}if(null===a)return null;const c=new Mg(this,a,e,n);return this._bindAction(c,l),this._addInactiveAction(c,s,i),c}existingAction(t,e){const n=e||this._root,r=n.uuid,i="string"===typeof t?Kf.findByName(n,t):t,a=i?i.uuid:t,s=this._actionsByClip[a];return void 0!==s&&s.actionByRoot[r]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,r=this.time+=t,i=Math.sign(t),a=this._accuIndex^=1;for(let l=0;l!==n;++l){const n=e[l];n._update(r,t,i,a)}const s=this._bindings,o=this._nActiveBindings;for(let l=0;l!==o;++l)s[l].apply(a);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){const t=i.knownActions;for(let n=0,r=t.length;n!==r;++n){const r=t[n];this._deactivateAction(r);const i=r._cacheIndex,a=e[e.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,a._cacheIndex=i,e[i]=a,e.pop(),this._removeInactiveBindingsForAction(r)}delete r[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const a in n){const t=n[a].actionByRoot,r=t[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}const r=this._bindingsByRootAndName,i=r[e];if(void 0!==i)for(const a in i){const t=i[a];t.restoreOriginalState(),this._removeInactiveBinding(t)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}Sg.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Tg{constructor(t){"string"===typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Tg(void 0===this.value.clone?this.value:this.value.clone())}}class Eg extends zh{constructor(t,e,n=1){super(t,e),this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}Eg.prototype.isInstancedInterleavedBuffer=!0;class Ag{constructor(t,e,n,r,i){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=r,this.count=i,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}Ag.prototype.isGLBufferAttribute=!0;class Cg{constructor(t,e,n=0,r=1/0){this.ray=new Xr(t,e),this.near=n,this.far=r,this.camera=null,this.layers=new ai,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,n=[]){return Rg(t,this,n,e),n.sort(Lg),n}intersectObjects(t,e=!0,n=[]){for(let r=0,i=t.length;r<i;r++)Rg(t[r],this,n,e);return n.sort(Lg),n}}function Lg(t,e){return t.distance-e.distance}function Rg(t,e,n,r){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===r){const r=t.children;for(let t=0,i=r.length;t<i;t++)Rg(r[t],e,n,!0)}}class Pg{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(Nn(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class Dg{constructor(t=1,e=0,n=0){return this.radius=t,this.theta=e,this.y=n,this}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return(new this.constructor).copy(this)}}const Ig=new er;class Og{constructor(t=new er(1/0,1/0),e=new er(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Ig.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){const e=Ig.copy(t).clamp(this.min,this.max);return e.sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}Og.prototype.isBox2=!0;const Ng=new vr,zg=new vr;class Bg{constructor(t=new vr,e=new vr){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Ng.subVectors(t,this.start),zg.subVectors(this.end,this.start);const n=zg.dot(zg),r=zg.dot(Ng);let i=r/n;return e&&(i=Nn(i,0,1)),i}closestPointToPoint(t,e,n){const r=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const Fg=new vr;class Ug extends xi{constructor(t,e){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const n=new oa,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,s=1,o=32;a<o;a++,s++){const t=a/o*Math.PI*2,e=s/o*Math.PI*2;r.push(Math.cos(t),Math.sin(t),1,Math.cos(e),Math.sin(e),1)}n.setAttribute("position",new Qi(r,3));const i=new _d({fog:!1,toneMapped:!1});this.cone=new Rd(n,i),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),Fg.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Fg),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Hg=new vr,kg=new Yr,Gg=new Yr;class Vg extends Rd{constructor(t){const e=Wg(t),n=new oa,r=[],i=[],a=new Ui(0,0,1),s=new Ui(0,1,0);for(let l=0;l<e.length;l++){const t=e[l];t.parent&&t.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(a.r,a.g,a.b),i.push(s.r,s.g,s.b))}n.setAttribute("position",new Qi(r,3)),n.setAttribute("color",new Qi(i,3));const o=new _d({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,o),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,r=n.getAttribute("position");Gg.copy(this.root.matrixWorld).invert();for(let i=0,a=0;i<e.length;i++){const t=e[i];t.parent&&t.parent.isBone&&(kg.multiplyMatrices(Gg,t.matrixWorld),Hg.setFromMatrixPosition(kg),r.setXYZ(a,Hg.x,Hg.y,Hg.z),kg.multiplyMatrices(Gg,t.parent.matrixWorld),Hg.setFromMatrixPosition(kg),r.setXYZ(a+1,Hg.x,Hg.y,Hg.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}function Wg(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,Wg(t.children[n]));return e}class jg extends Ta{constructor(t,e,n){const r=new bf(e,4,2),i=new Hi({wireframe:!0,fog:!1,toneMapped:!1});super(r,i),this.light=t,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const qg=new vr,Xg=new Ui,Yg=new Ui;class Jg extends xi{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const r=new gf(e);r.rotateY(.5*Math.PI),this.material=new Hi({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const i=r.getAttribute("position"),a=new Float32Array(3*i.count);r.setAttribute("color",new Vi(a,3)),this.add(new Ta(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");Xg.copy(this.light.color),Yg.copy(this.light.groundColor);for(let t=0,n=e.count;t<n;t++){const r=t<n/2?Xg:Yg;e.setXYZ(t,r.r,r.g,r.b)}e.needsUpdate=!0}t.lookAt(qg.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Zg extends Rd{constructor(t=10,e=10,n=4473924,r=8947848){n=new Ui(n),r=new Ui(r);const i=e/2,a=t/e,s=t/2,o=[],l=[];for(let h=0,d=0,p=-s;h<=e;h++,p+=a){o.push(-s,0,p,s,0,p),o.push(p,0,-s,p,0,s);const t=h===i?n:r;t.toArray(l,d),d+=3,t.toArray(l,d),d+=3,t.toArray(l,d),d+=3,t.toArray(l,d),d+=3}const c=new oa;c.setAttribute("position",new Qi(o,3)),c.setAttribute("color",new Qi(l,3));const u=new _d({vertexColors:!0,toneMapped:!1});super(c,u),this.type="GridHelper"}}class Kg extends Rd{constructor(t=10,e=16,n=8,r=64,i=4473924,a=8947848){i=new Ui(i),a=new Ui(a);const s=[],o=[];for(let u=0;u<=e;u++){const n=u/e*(2*Math.PI),r=Math.sin(n)*t,l=Math.cos(n)*t;s.push(0,0,0),s.push(r,0,l);const c=1&u?i:a;o.push(c.r,c.g,c.b),o.push(c.r,c.g,c.b)}for(let u=0;u<=n;u++){const e=1&u?i:a,l=t-t/n*u;for(let t=0;t<r;t++){let n=t/r*(2*Math.PI),i=Math.sin(n)*l,a=Math.cos(n)*l;s.push(i,0,a),o.push(e.r,e.g,e.b),n=(t+1)/r*(2*Math.PI),i=Math.sin(n)*l,a=Math.cos(n)*l,s.push(i,0,a),o.push(e.r,e.g,e.b)}}const l=new oa;l.setAttribute("position",new Qi(s,3)),l.setAttribute("color",new Qi(o,3));const c=new _d({vertexColors:!0,toneMapped:!1});super(l,c),this.type="PolarGridHelper"}}const Qg=new vr,$g=new vr,tv=new vr;class ev extends xi{constructor(t,e,n){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===e&&(e=1);let r=new oa;r.setAttribute("position",new Qi([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const i=new _d({fog:!1,toneMapped:!1});this.lightPlane=new Ad(r,i),this.add(this.lightPlane),r=new oa,r.setAttribute("position",new Qi([0,0,0,0,0,1],3)),this.targetLine=new Ad(r,i),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Qg.setFromMatrixPosition(this.light.matrixWorld),$g.setFromMatrixPosition(this.light.target.matrixWorld),tv.subVectors($g,Qg),this.lightPlane.lookAt($g),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt($g),this.targetLine.scale.z=tv.length()}}const nv=new vr,rv=new Na;class iv extends Rd{constructor(t){const e=new oa,n=new _d({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],i=[],a={},s=new Ui(16755200),o=new Ui(16711680),l=new Ui(43775),c=new Ui(16777215),u=new Ui(3355443);function h(t,e,n){d(t,n),d(e,n)}function d(t,e){r.push(0,0,0),i.push(e.r,e.g,e.b),void 0===a[t]&&(a[t]=[]),a[t].push(r.length/3-1)}h("n1","n2",s),h("n2","n4",s),h("n4","n3",s),h("n3","n1",s),h("f1","f2",s),h("f2","f4",s),h("f4","f3",s),h("f3","f1",s),h("n1","f1",s),h("n2","f2",s),h("n3","f3",s),h("n4","f4",s),h("p","n1",o),h("p","n2",o),h("p","n3",o),h("p","n4",o),h("u1","u2",l),h("u2","u3",l),h("u3","u1",l),h("c","t",c),h("p","c",u),h("cn1","cn2",u),h("cn3","cn4",u),h("cf1","cf2",u),h("cf3","cf4",u),e.setAttribute("position",new Qi(r,3)),e.setAttribute("color",new Qi(i,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){const t=this.geometry,e=this.pointMap,n=1,r=1;rv.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),av("c",e,t,rv,0,0,-1),av("t",e,t,rv,0,0,1),av("n1",e,t,rv,-n,-r,-1),av("n2",e,t,rv,n,-r,-1),av("n3",e,t,rv,-n,r,-1),av("n4",e,t,rv,n,r,-1),av("f1",e,t,rv,-n,-r,1),av("f2",e,t,rv,n,-r,1),av("f3",e,t,rv,-n,r,1),av("f4",e,t,rv,n,r,1),av("u1",e,t,rv,.7*n,1.1*r,-1),av("u2",e,t,rv,.7*-n,1.1*r,-1),av("u3",e,t,rv,0,2*r,-1),av("cf1",e,t,rv,-n,0,1),av("cf2",e,t,rv,n,0,1),av("cf3",e,t,rv,0,-r,1),av("cf4",e,t,rv,0,r,1),av("cn1",e,t,rv,-n,0,-1),av("cn2",e,t,rv,n,0,-1),av("cn3",e,t,rv,0,-r,-1),av("cn4",e,t,rv,0,r,-1),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function av(t,e,n,r,i,a,s){nv.set(i,a,s).unproject(r);const o=e[t];if(void 0!==o){const t=n.getAttribute("position");for(let e=0,n=o.length;e<n;e++)t.setXYZ(o[e],nv.x,nv.y,nv.z)}}const sv=new br;class ov extends Rd{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new oa;i.setIndex(new Vi(n,1)),i.setAttribute("position",new Vi(r,3)),super(i,new _d({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&sv.setFromObject(this.object),sv.isEmpty())return;const e=sv.min,n=sv.max,r=this.geometry.attributes.position,i=r.array;i[0]=n.x,i[1]=n.y,i[2]=n.z,i[3]=e.x,i[4]=n.y,i[5]=n.z,i[6]=e.x,i[7]=e.y,i[8]=n.z,i[9]=n.x,i[10]=e.y,i[11]=n.z,i[12]=n.x,i[13]=n.y,i[14]=e.z,i[15]=e.x,i[16]=n.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=n.x,i[22]=e.y,i[23]=e.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t){return Rd.prototype.copy.call(this,t),this.object=t.object,this}}class lv extends Rd{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],i=new oa;i.setIndex(new Vi(n,1)),i.setAttribute("position",new Qi(r,3)),super(i,new _d({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}}class cv extends Ad{constructor(t,e=1,n=16776960){const r=n,i=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],a=new oa;a.setAttribute("position",new Qi(i,3)),a.computeBoundingSphere(),super(a,new _d({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const s=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],o=new oa;o.setAttribute("position",new Qi(s,3)),o.computeBoundingSphere(),this.add(new Ta(o,new Hi({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){let e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?m:f,this.lookAt(this.plane.normal),super.updateMatrixWorld(t)}}const uv=new vr;let hv,dv;class pv extends xi{constructor(t=new vr(0,0,1),e=new vr(0,0,0),n=1,r=16776960,i=.2*n,a=.2*i){super(),this.type="ArrowHelper",void 0===hv&&(hv=new oa,hv.setAttribute("position",new Qi([0,0,0,0,1,0],3)),dv=new Wd(0,.5,1,5,1),dv.translate(0,-.5,0)),this.position.copy(e),this.line=new Ad(hv,new _d({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Ta(dv,new Hi({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,i,a)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{uv.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(uv,e)}}setLength(t,e=.2*t,n=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}}class fv extends Rd{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new oa;r.setAttribute("position",new Qi(e,3)),r.setAttribute("color",new Qi(n,3));const i=new _d({vertexColors:!0,toneMapped:!1});super(r,i),this.type="AxesHelper"}setColors(t,e,n){const r=new Ui,i=this.geometry.attributes.color.array;return r.set(t),r.toArray(i,0),r.toArray(i,3),r.set(e),r.toArray(i,6),r.toArray(i,9),r.set(n),r.toArray(i,12),r.toArray(i,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class mv{constructor(){this.type="ShapePath",this.color=new Ui,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Ap,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,r){return this.currentPath.quadraticCurveTo(t,e,n,r),this}bezierCurveTo(t,e,n,r,i,a){return this.currentPath.bezierCurveTo(t,e,n,r,i,a),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t,e){function n(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n],i=new Cp;i.curves=r.curves,e.push(i)}return e}function r(t,e){const n=e.length;let r=!1;for(let i=n-1,a=0;a<n;i=a++){let n=e[i],s=e[a],o=s.x-n.x,l=s.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=e[a],o=-o,s=e[i],l=-l),t.y<n.y||t.y>s.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=l*(t.x-n.x)-o*(t.y-n.y);if(0===e)return!0;if(e<0)continue;r=!r}}else{if(t.y!==n.y)continue;if(s.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=s.x)return!0}}return r}const i=lf.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===e)return n(a);let s,o,l;const c=[];if(1===a.length)return o=a[0],l=new Cp,l.curves=o.curves,c.push(l),c;let u=!i(a[0].getPoints());u=t?!u:u;const h=[],d=[];let p,f,m=[],g=0;d[g]=void 0,m[g]=[];for(let v=0,y=a.length;v<y;v++)o=a[v],p=o.getPoints(),s=i(p),s=t?!s:s,s?(!u&&d[g]&&g++,d[g]={s:new Cp,p:p},d[g].s.curves=o.curves,u&&g++,m[g]=[]):m[g].push({h:o,p:p[0]});if(!d[0])return n(a);if(d.length>1){let t=!1;const e=[];for(let n=0,r=d.length;n<r;n++)h[n]=[];for(let n=0,i=d.length;n<i;n++){const i=m[n];for(let a=0;a<i.length;a++){const s=i[a];let o=!0;for(let i=0;i<d.length;i++)r(s.p,d[i].p)&&(n!==i&&e.push({froms:n,tos:i,hole:a}),o?(o=!1,h[i].push(s)):t=!0);o&&h[n].push(s)}}e.length>0&&(t||(m=h))}for(let v=0,y=d.length;v<y;v++){l=d[v].s,c.push(l),f=m[v];for(let t=0,e=f.length;t<e;t++)l.holes.push(f[t].h)}return c}}const gv=new Float32Array(1),vv=new Int32Array(gv.buffer);class yv{static toHalfFloat(t){t>65504&&(console.warn("THREE.DataUtils.toHalfFloat(): value exceeds 65504."),t=65504),gv[0]=t;const e=vv[0];let n=e>>16&32768,r=e>>12&2047;const i=e>>23&255;return i<103?n:i>142?(n|=31744,n|=(255==i?0:1)&&8388607&e,n):i<113?(r|=2048,n|=(r>>114-i)+(r>>113-i&1),n):(n|=i-112<<10|r>>1,n+=1&r,n)}}const xv=0,bv=1,_v=0,wv=1,Mv=2;function Sv(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t}function Tv(t=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t}function Ev(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Bd(t,e)}function Av(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new $h(t)}function Cv(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Bd(t,e)}function Lv(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new Dd(t)}function Rv(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Dd(t)}function Pv(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new Dd(t)}function Dv(t,e,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new vr(t,e,n)}function Iv(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Vi(t,e).setUsage(xn)}function Ov(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Wi(t,e)}function Nv(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new ji(t,e)}function zv(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new qi(t,e)}function Bv(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Xi(t,e)}function Fv(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Yi(t,e)}function Uv(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Ji(t,e)}function Hv(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Zi(t,e)}function kv(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Qi(t,e)}function Gv(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new $i(t,e)}function Vv(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new fv(t)}function Wv(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new ov(t,e)}function jv(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new Rd(new Qd(t.geometry),new _d({color:void 0!==e?e:16777215}))}function qv(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new Rd(new Tf(t.geometry),new _d({color:void 0!==e?e:16777215}))}function Xv(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new am(t)}function Yv(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new um(t)}function Jv(t,e,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new ka(t,n)}function Zv(){console.error("THREE.CanvasRenderer has been removed")}function Kv(){console.error("THREE.JSONLoader has been removed.")}$d.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create($d.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Ap.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},Zg.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Vg.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},rm.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Dm.extractUrlBase(t)},rm.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Og.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},Og.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Og.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Og.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},br.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},br.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},br.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},br.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},br.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},Ur.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Ya.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},Bg.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},nr.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},nr.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},nr.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},nr.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},nr.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},nr.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Yr.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},Yr.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},Yr.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new vr).setFromMatrixColumn(this,3)},Yr.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},Yr.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Yr.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Yr.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Yr.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Yr.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},Yr.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Yr.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Yr.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Yr.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Yr.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Yr.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Yr.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Yr.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Yr.prototype.makeFrustum=function(t,e,n,r,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,r,n,i,a)},Yr.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},ja.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},gr.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},gr.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Xr.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Xr.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},Xr.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},Ri.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Ri.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},Ri.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},Ri.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},Ri.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},Ri.barycoordFromPoint=function(t,e,n,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Ri.getBarycoord(t,e,n,r,i)},Ri.normal=function(t,e,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Ri.getNormal(t,e,n,r)},Cp.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},Cp.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new hf(this,t)},Cp.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new yf(this,t)},er.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},er.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},er.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},vr.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},vr.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},vr.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},vr.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},vr.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},vr.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},vr.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},vr.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},vr.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},dr.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},dr.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},xi.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},xi.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},xi.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},xi.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},xi.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(xi.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Ta.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(Ta.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),qe},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),cd.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},za.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(dm.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(Vi.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===xn},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(xn)}}}),Vi.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?xn:yn),this},Vi.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Vi.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},oa.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},oa.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new Vi(arguments[1],arguments[2])))},oa.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},oa.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},oa.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},oa.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},oa.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(oa.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),zh.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?xn:yn),this},zh.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},hf.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},hf.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},hf.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},Nh.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Tg.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(Di.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Ui}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===v}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(Oa.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Ph.prototype.clearTarget=function(t,e,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,r)},Ph.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},Ph.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Ph.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Ph.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Ph.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Ph.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Ph.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Ph.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Ph.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Ph.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Ph.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Ph.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Ph.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Ph.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},Ph.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Ph.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Ph.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Ph.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Ph.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Ph.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Ph.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Ph.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Ph.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Ph.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Ph.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?Ze:Je}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(xh.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(pr.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),ng.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this,n=new Gm;return n.load(t,(function(t){e.setBuffer(t)})),this},lg.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Ua.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},Ua.prototype.clear=function(t,e,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,r)},lr.crossOrigin=void 0,lr.loadTexture=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new hm;i.setCrossOrigin(this.crossOrigin);const a=i.load(t,n,void 0,r);return e&&(a.mapping=e),a},lr.loadTextureCube=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new cm;i.setCrossOrigin(this.crossOrigin);const a=i.load(t,n,void 0,r);return e&&(a.mapping=e),a},lr.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},lr.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const Qv={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function $v(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}function ty(){return console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),new oa}function ey(){return console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),new oa}function ny(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function ry(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function iy(){console.error("THREE.ImmediateRenderObject has been removed.")}"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:r}})),"undefined"!==typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=r)},Y5c8:function(t,e,n){var r=n("Womt");r.OrbitControls=function(t,e){void 0===e&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),e===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=t,this.domElement=e,this.enabled=!0,this.target=new r.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!1,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:r.MOUSE.ROTATE,MIDDLE:r.MOUSE.DOLLY,RIGHT:r.MOUSE.PAN},this.touches={ONE:r.TOUCH.ROTATE,TWO:r.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return u.phi},this.getAzimuthalAngle=function(){return u.theta},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),l=o.NONE},this.update=function(){var e=new r.Vector3,a=(new r.Quaternion).setFromUnitVectors(t.up,new r.Vector3(0,1,0)),s=a.clone().inverse(),m=new r.Vector3,g=new r.Quaternion;return function(){var t=n.object.position;return e.copy(t).sub(n.target),e.applyQuaternion(a),u.setFromVector3(e),n.autoRotate&&l===o.NONE&&E(S()),n.enableDamping?(u.theta+=h.theta*n.dampingFactor,u.phi+=h.phi*n.dampingFactor):(u.theta+=h.theta,u.phi+=h.phi),u.theta=Math.max(n.minAzimuthAngle,Math.min(n.maxAzimuthAngle,u.theta)),u.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,u.phi)),u.makeSafe(),u.radius*=d,u.radius=Math.max(n.minDistance,Math.min(n.maxDistance,u.radius)),!0===n.enableDamping?n.target.addScaledVector(p,n.dampingFactor):n.target.add(p),e.setFromSpherical(u),e.applyQuaternion(s),t.copy(n.target).add(e),n.object.lookAt(n.target),!0===n.enableDamping?(h.theta*=1-n.dampingFactor,h.phi*=1-n.dampingFactor,p.multiplyScalar(1-n.dampingFactor)):(h.set(0,0,0),p.set(0,0,0)),d=1,!!(f||m.distanceToSquared(n.object.position)>c||8*(1-g.dot(n.object.quaternion))>c)&&(n.dispatchEvent(i),m.copy(n.object.position),g.copy(n.object.quaternion),f=!1,!0)}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",ot,!1),n.domElement.removeEventListener("mousedown",$,!1),n.domElement.removeEventListener("wheel",nt,!1),n.domElement.removeEventListener("touchstart",it,!1),n.domElement.removeEventListener("touchend",st,!1),n.domElement.removeEventListener("touchmove",at,!1),document.removeEventListener("mousemove",tt,!1),document.removeEventListener("mouseup",et,!1),n.domElement.removeEventListener("keydown",rt,!1)};var n=this,i={type:"change"},a={type:"start"},s={type:"end"},o={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},l=o.NONE,c=1e-6,u=new r.Spherical,h=new r.Spherical,d=1,p=new r.Vector3,f=!1,m=new r.Vector2,g=new r.Vector2,v=new r.Vector2,y=new r.Vector2,x=new r.Vector2,b=new r.Vector2,_=new r.Vector2,w=new r.Vector2,M=new r.Vector2;function S(){return 2*Math.PI/60/60*n.autoRotateSpeed}function T(){return Math.pow(.95,n.zoomSpeed)}function E(t){h.theta-=t}function A(t){h.phi-=t}var C=function(){var t=new r.Vector3;return function(e,n){t.setFromMatrixColumn(n,0),t.multiplyScalar(-e),p.add(t)}}(),L=function(){var t=new r.Vector3;return function(e,r){!0===n.screenSpacePanning?t.setFromMatrixColumn(r,1):(t.setFromMatrixColumn(r,0),t.crossVectors(n.object.up,t)),t.multiplyScalar(e),p.add(t)}}(),R=function(){var t=new r.Vector3;return function(e,r){var i=n.domElement;if(n.object.isPerspectiveCamera){var a=n.object.position;t.copy(a).sub(n.target);var s=t.length();s*=Math.tan(n.object.fov/2*Math.PI/180),C(2*e*s/i.clientHeight,n.object.matrix),L(2*r*s/i.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(C(e*(n.object.right-n.object.left)/n.object.zoom/i.clientWidth,n.object.matrix),L(r*(n.object.top-n.object.bottom)/n.object.zoom/i.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function P(t){n.object.isPerspectiveCamera?d/=t:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*t)),n.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function D(t){n.object.isPerspectiveCamera?d*=t:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/t)),n.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function I(t){m.set(t.clientX,t.clientY)}function O(t){_.set(t.clientX,t.clientY)}function N(t){y.set(t.clientX,t.clientY)}function z(t){g.set(t.clientX,t.clientY),v.subVectors(g,m).multiplyScalar(n.rotateSpeed);var e=n.domElement;E(2*Math.PI*v.x/e.clientHeight),A(2*Math.PI*v.y/e.clientHeight),m.copy(g),n.update()}function B(t){w.set(t.clientX,t.clientY),M.subVectors(w,_),M.y>0?P(T()):M.y<0&&D(T()),_.copy(w),n.update()}function F(t){x.set(t.clientX,t.clientY),b.subVectors(x,y).multiplyScalar(n.panSpeed),R(b.x,b.y),y.copy(x),n.update()}function U(){}function H(t){t.deltaY<0?D(T()):t.deltaY>0&&P(T()),n.update()}function k(t){var e=!1;switch(t.keyCode){case n.keys.UP:R(0,n.keyPanSpeed),e=!0;break;case n.keys.BOTTOM:R(0,-n.keyPanSpeed),e=!0;break;case n.keys.LEFT:R(n.keyPanSpeed,0),e=!0;break;case n.keys.RIGHT:R(-n.keyPanSpeed,0),e=!0;break}e&&(t.preventDefault(),n.update())}function G(t){if(1==t.touches.length)m.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),n=.5*(t.touches[0].pageY+t.touches[1].pageY);m.set(e,n)}}function V(t){if(1==t.touches.length)y.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),n=.5*(t.touches[0].pageY+t.touches[1].pageY);y.set(e,n)}}function W(t){var e=t.touches[0].pageX-t.touches[1].pageX,n=t.touches[0].pageY-t.touches[1].pageY,r=Math.sqrt(e*e+n*n);_.set(0,r)}function j(t){n.enableZoom&&W(t),n.enablePan&&V(t)}function q(t){n.enableZoom&&W(t),n.enableRotate&&G(t)}function X(t){if(1==t.touches.length)g.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),r=.5*(t.touches[0].pageY+t.touches[1].pageY);g.set(e,r)}v.subVectors(g,m).multiplyScalar(n.rotateSpeed);var i=n.domElement;E(2*Math.PI*v.x/i.clientHeight),A(2*Math.PI*v.y/i.clientHeight),m.copy(g)}function Y(t){if(1==t.touches.length)x.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),r=.5*(t.touches[0].pageY+t.touches[1].pageY);x.set(e,r)}b.subVectors(x,y).multiplyScalar(n.panSpeed),R(b.x,b.y),y.copy(x)}function J(t){var e=t.touches[0].pageX-t.touches[1].pageX,r=t.touches[0].pageY-t.touches[1].pageY,i=Math.sqrt(e*e+r*r);w.set(0,i),M.set(0,Math.pow(w.y/_.y,n.zoomSpeed)),P(M.y),_.copy(w)}function Z(t){n.enableZoom&&J(t),n.enablePan&&Y(t)}function K(t){n.enableZoom&&J(t),n.enableRotate&&X(t)}function Q(){}function $(t){if(!1!==n.enabled){switch(t.preventDefault(),n.domElement.focus?n.domElement.focus():window.focus(),t.button){case 0:switch(n.mouseButtons.LEFT){case r.MOUSE.ROTATE:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===n.enablePan)return;N(t),l=o.PAN}else{if(!1===n.enableRotate)return;I(t),l=o.ROTATE}break;case r.MOUSE.PAN:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===n.enableRotate)return;I(t),l=o.ROTATE}else{if(!1===n.enablePan)return;N(t),l=o.PAN}break;default:l=o.NONE}break;case 1:switch(n.mouseButtons.MIDDLE){case r.MOUSE.DOLLY:if(!1===n.enableZoom)return;O(t),l=o.DOLLY;break;default:l=o.NONE}break;case 2:switch(n.mouseButtons.RIGHT){case r.MOUSE.ROTATE:if(!1===n.enableRotate)return;I(t),l=o.ROTATE;break;case r.MOUSE.PAN:if(!1===n.enablePan)return;N(t),l=o.PAN;break;default:l=o.NONE}break}l!==o.NONE&&(document.addEventListener("mousemove",tt,!1),document.addEventListener("mouseup",et,!1),n.dispatchEvent(a))}}function tt(t){if(!1!==n.enabled)switch(t.preventDefault(),l){case o.ROTATE:if(!1===n.enableRotate)return;z(t);break;case o.DOLLY:if(!1===n.enableZoom)return;B(t);break;case o.PAN:if(!1===n.enablePan)return;F(t);break}}function et(t){!1!==n.enabled&&(U(t),document.removeEventListener("mousemove",tt,!1),document.removeEventListener("mouseup",et,!1),n.dispatchEvent(s),l=o.NONE)}function nt(t){!1===n.enabled||!1===n.enableZoom||l!==o.NONE&&l!==o.ROTATE||(t.preventDefault(),t.stopPropagation(),n.dispatchEvent(a),H(t),n.dispatchEvent(s))}function rt(t){!1!==n.enabled&&!1!==n.enableKeys&&!1!==n.enablePan&&k(t)}function it(t){if(!1!==n.enabled){switch(t.preventDefault(),t.touches.length){case 1:switch(n.touches.ONE){case r.TOUCH.ROTATE:if(!1===n.enableRotate)return;G(t),l=o.TOUCH_ROTATE;break;case r.TOUCH.PAN:if(!1===n.enablePan)return;V(t),l=o.TOUCH_PAN;break;default:l=o.NONE}break;case 2:switch(n.touches.TWO){case r.TOUCH.DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;j(t),l=o.TOUCH_DOLLY_PAN;break;case r.TOUCH.DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;q(t),l=o.TOUCH_DOLLY_ROTATE;break;default:l=o.NONE}break;default:l=o.NONE}l!==o.NONE&&n.dispatchEvent(a)}}function at(t){if(!1!==n.enabled)switch(t.preventDefault(),t.stopPropagation(),l){case o.TOUCH_ROTATE:if(!1===n.enableRotate)return;X(t),n.update();break;case o.TOUCH_PAN:if(!1===n.enablePan)return;Y(t),n.update();break;case o.TOUCH_DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;Z(t),n.update();break;case o.TOUCH_DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;K(t),n.update();break;default:l=o.NONE}}function st(t){!1!==n.enabled&&(Q(t),n.dispatchEvent(s),l=o.NONE)}function ot(t){!1!==n.enabled&&t.preventDefault()}n.domElement.addEventListener("contextmenu",ot,!1),n.domElement.addEventListener("mousedown",$,!1),n.domElement.addEventListener("wheel",nt,!1),n.domElement.addEventListener("touchstart",it,!1),n.domElement.addEventListener("touchend",st,!1),n.domElement.addEventListener("touchmove",at,!1),n.domElement.addEventListener("keydown",rt,!1),-1===n.domElement.tabIndex&&(n.domElement.tabIndex=0),this.update()},r.OrbitControls.prototype=Object.create(r.EventDispatcher.prototype),r.OrbitControls.prototype.constructor=r.OrbitControls,r.MapControls=function(t,e){r.OrbitControls.call(this,t,e),this.mouseButtons.LEFT=r.MOUSE.PAN,this.mouseButtons.RIGHT=r.MOUSE.ROTATE,this.touches.ONE=r.TOUCH.PAN,this.touches.TWO=r.TOUCH.DOLLY_ROTATE},r.MapControls.prototype=Object.create(r.EventDispatcher.prototype),r.MapControls.prototype.constructor=r.MapControls,t.exports=e.default=r.OrbitControls},diRs:function(t,e,n){"use strict";var r=n("wx14"),i=n("q1tI"),a=n("3S7+"),s=n("H84U"),o=function(t){if(!t)return null;var e="function"===typeof t;return e?t():t},l=n("EXcs"),c=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(t);i<r.length;i++)e.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(t,r[i])&&(n[r[i]]=t[r[i]])}return n},u=i["forwardRef"]((function(t,e){var n=t.prefixCls,u=t.title,h=t.content,d=c(t,["prefixCls","title","content"]),p=i["useContext"](s["b"]),f=p.getPrefixCls,m=function(t){return i["createElement"](i["Fragment"],null,u&&i["createElement"]("div",{className:"".concat(t,"-title")},o(u)),i["createElement"]("div",{className:"".concat(t,"-inner-content")},o(h)))},g=f("popover",n),v=f();return i["createElement"](a["a"],Object(r["a"])({},d,{prefixCls:g,ref:e,overlay:m(g),transitionName:Object(l["b"])(v,"zoom-big",d.transitionName)}))}));u.displayName="Popover",u.defaultProps={placement:"top",trigger:"hover",mouseEnterDelay:.1,mouseLeaveDelay:.1,overlayStyle:{}};e["a"]=u},kMsK:function(t,e,n){"use strict";var r=n("q1tI"),i=n("SDlg"),a=function(t){var e=Object(i["a"])(t);Object(r["useEffect"])((function(){return function(){e.current()}}),[])};e["a"]=a},kaz8:function(t,e,n){"use strict";var r=n("rePB"),i=n("wx14"),a=n("q1tI"),s=n.n(a),o=n("TSYQ"),l=n.n(o),c=n("Ff2n"),u=n("VTBJ"),h=n("1OyB"),d=n("vuIU"),p=n("Ji7U"),f=n("LK+K"),m=function(t){Object(p["a"])(n,t);var e=Object(f["a"])(n);function n(t){var r;Object(h["a"])(this,n),r=e.call(this,t),r.handleChange=function(t){var e=r.props,n=e.disabled,i=e.onChange;n||("checked"in r.props||r.setState({checked:t.target.checked}),i&&i({target:Object(u["a"])(Object(u["a"])({},r.props),{},{checked:t.target.checked}),stopPropagation:function(){t.stopPropagation()},preventDefault:function(){t.preventDefault()},nativeEvent:t.nativeEvent}))},r.saveInput=function(t){r.input=t};var i="checked"in t?t.checked:t.defaultChecked;return r.state={checked:i},r}return Object(d["a"])(n,[{key:"focus",value:function(){this.input.focus()}},{key:"blur",value:function(){this.input.blur()}},{key:"render",value:function(){var t,e=this.props,n=e.prefixCls,a=e.className,o=e.style,u=e.name,h=e.id,d=e.type,p=e.disabled,f=e.readOnly,m=e.tabIndex,g=e.onClick,v=e.onFocus,y=e.onBlur,x=e.onKeyDown,b=e.onKeyPress,_=e.onKeyUp,w=e.autoFocus,M=e.value,S=e.required,T=Object(c["a"])(e,["prefixCls","className","style","name","id","type","disabled","readOnly","tabIndex","onClick","onFocus","onBlur","onKeyDown","onKeyPress","onKeyUp","autoFocus","value","required"]),E=Object.keys(T).reduce((function(t,e){return"aria-"!==e.substr(0,5)&&"data-"!==e.substr(0,5)&&"role"!==e||(t[e]=T[e]),t}),{}),A=this.state.checked,C=l()(n,a,(t={},Object(r["a"])(t,"".concat(n,"-checked"),A),Object(r["a"])(t,"".concat(n,"-disabled"),p),t));return s.a.createElement("span",{className:C,style:o},s.a.createElement("input",Object(i["a"])({name:u,id:h,type:d,required:S,readOnly:f,disabled:p,tabIndex:m,className:"".concat(n,"-input"),checked:!!A,onClick:g,onFocus:v,onBlur:y,onKeyUp:_,onKeyDown:x,onKeyPress:b,onChange:this.handleChange,autoFocus:w,ref:this.saveInput,value:M},E)),s.a.createElement("span",{className:"".concat(n,"-inner")}))}}],[{key:"getDerivedStateFromProps",value:function(t,e){return"checked"in t?Object(u["a"])(Object(u["a"])({},e),{},{checked:t.checked}):null}}]),n}(a["Component"]);m.defaultProps={prefixCls:"rc-checkbox",className:"",style:{},type:"checkbox",defaultChecked:!1,onFocus:function(){},onBlur:function(){},onChange:function(){},onKeyDown:function(){},onKeyPress:function(){},onKeyUp:function(){}};var g=m,v=n("KQm4"),y=n("ODXe"),x=n("bT9E"),b=n("H84U"),_=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(t);i<r.length;i++)e.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(t,r[i])&&(n[r[i]]=t[r[i]])}return n},w=a["createContext"](null),M=function(t,e){var n=t.defaultValue,s=t.children,o=t.options,c=void 0===o?[]:o,u=t.prefixCls,h=t.className,d=t.style,p=t.onChange,f=_(t,["defaultValue","children","options","prefixCls","className","style","onChange"]),m=a["useContext"](b["b"]),g=m.getPrefixCls,M=m.direction,S=a["useState"](f.value||n||[]),T=Object(y["a"])(S,2),E=T[0],A=T[1],C=a["useState"]([]),L=Object(y["a"])(C,2),P=L[0],D=L[1];a["useEffect"]((function(){"value"in f&&A(f.value||[])}),[f.value]);var I=function(){return c.map((function(t){return"string"===typeof t?{label:t,value:t}:t}))},O=function(t){D((function(e){return e.filter((function(e){return e!==t}))}))},N=function(t){D((function(e){return[].concat(Object(v["a"])(e),[t])}))},z=function(t){var e=E.indexOf(t.value),n=Object(v["a"])(E);-1===e?n.push(t.value):n.splice(e,1),"value"in f||A(n);var r=I();null===p||void 0===p||p(n.filter((function(t){return-1!==P.indexOf(t)})).sort((function(t,e){var n=r.findIndex((function(e){return e.value===t})),i=r.findIndex((function(t){return t.value===e}));return n-i})))},B=g("checkbox",u),F="".concat(B,"-group"),U=Object(x["a"])(f,["value","disabled"]);c&&c.length>0&&(s=I().map((function(t){return a["createElement"](R,{prefixCls:B,key:t.value.toString(),disabled:"disabled"in t?t.disabled:f.disabled,value:t.value,checked:-1!==E.indexOf(t.value),onChange:t.onChange,className:"".concat(F,"-item"),style:t.style},t.label)})));var H={toggleOption:z,value:E,disabled:f.disabled,name:f.name,registerValue:N,cancelValue:O},k=l()(F,Object(r["a"])({},"".concat(F,"-rtl"),"rtl"===M),h);return a["createElement"]("div",Object(i["a"])({className:k,style:d},U,{ref:e}),a["createElement"](w.Provider,{value:H},s))},S=a["forwardRef"](M),T=a["memo"](S),E=n("uaoM"),A=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(t);i<r.length;i++)e.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(t,r[i])&&(n[r[i]]=t[r[i]])}return n},C=function(t,e){var n,s=t.prefixCls,o=t.className,c=t.children,u=t.indeterminate,h=void 0!==u&&u,d=t.style,p=t.onMouseEnter,f=t.onMouseLeave,m=t.skipGroup,v=void 0!==m&&m,y=A(t,["prefixCls","className","children","indeterminate","style","onMouseEnter","onMouseLeave","skipGroup"]),x=a["useContext"](b["b"]),_=x.getPrefixCls,M=x.direction,S=a["useContext"](w),T=a["useRef"](y.value);a["useEffect"]((function(){null===S||void 0===S||S.registerValue(y.value),Object(E["a"])("checked"in y||!!S||!("value"in y),"Checkbox","`value` is not a valid prop, do you mean `checked`?")}),[]),a["useEffect"]((function(){if(!v)return y.value!==T.current&&(null===S||void 0===S||S.cancelValue(T.current),null===S||void 0===S||S.registerValue(y.value)),function(){return null===S||void 0===S?void 0:S.cancelValue(y.value)}}),[y.value]);var C=_("checkbox",s),L=Object(i["a"])({},y);S&&!v&&(L.onChange=function(){y.onChange&&y.onChange.apply(y,arguments),S.toggleOption&&S.toggleOption({label:c,value:y.value})},L.name=S.name,L.checked=-1!==S.value.indexOf(y.value),L.disabled=y.disabled||S.disabled);var R=l()((n={},Object(r["a"])(n,"".concat(C,"-wrapper"),!0),Object(r["a"])(n,"".concat(C,"-rtl"),"rtl"===M),Object(r["a"])(n,"".concat(C,"-wrapper-checked"),L.checked),Object(r["a"])(n,"".concat(C,"-wrapper-disabled"),L.disabled),n),o),P=l()(Object(r["a"])({},"".concat(C,"-indeterminate"),h));return a["createElement"]("label",{className:R,style:d,onMouseEnter:p,onMouseLeave:f},a["createElement"](g,Object(i["a"])({},L,{prefixCls:C,className:P,ref:e})),void 0!==c&&a["createElement"]("span",null,c))},L=a["forwardRef"](C);L.displayName="Checkbox";var R=L,P=R;P.Group=T,P.__ANT_CHECKBOX=!0;e["a"]=P},rHrb:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.CopyToClipboard=void 0;var r=a(n("q1tI")),i=a(n("+QRC"));function a(t){return t&&t.__esModule?t:{default:t}}function s(t){return s="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},s(t)}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(n,!0).forEach((function(e){x(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(n).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,i=u(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}function u(t,e){if(null==t)return{};var n,r,i={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}function h(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function d(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function p(t,e,n){return e&&d(t.prototype,e),n&&d(t,n),t}function f(t,e){return!e||"object"!==s(e)&&"function"!==typeof e?g(t):e}function m(t){return m=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},m(t)}function g(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function v(t,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&y(t,e)}function y(t,e){return y=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},y(t,e)}function x(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var b=function(t){function e(){var t,n;h(this,e);for(var a=arguments.length,s=new Array(a),o=0;o<a;o++)s[o]=arguments[o];return n=f(this,(t=m(e)).call.apply(t,[this].concat(s))),x(g(n),"onClick",(function(t){var e=n.props,a=e.text,s=e.onCopy,o=e.children,l=e.options,c=r["default"].Children.only(o),u=(0,i["default"])(a,l);s&&s(a,u),c&&c.props&&"function"===typeof c.props.onClick&&c.props.onClick(t)})),n}return v(e,t),p(e,[{key:"render",value:function(){var t=this.props,e=(t.text,t.onCopy,t.options,t.children),n=c(t,["text","onCopy","options","children"]),i=r["default"].Children.only(e);return r["default"].cloneElement(i,l({},n,{onClick:this.onClick}))}}]),e}(r["default"].PureComponent);e.CopyToClipboard=b,x(b,"defaultProps",{onCopy:void 0,options:void 0})},rZqG:function(t,e,n){"use strict";var r=n("q1tI");function i(t){return"function"===typeof t}var a=function(){return a=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n],e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},a.apply(this,arguments)},s=function(t,e){var n="function"===typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,a=n.call(t),s=[];try{while((void 0===e||e-- >0)&&!(r=a.next()).done)s.push(r.value)}catch(o){i={error:o}}finally{try{r&&!r.done&&(n=a["return"])&&n.call(a)}finally{if(i)throw i.error}}return s},o=function(t){var e=s(Object(r["useState"])(t),2),n=e[0],o=e[1],l=Object(r["useCallback"])((function(t){o((function(e){var n=i(t)?t(e):t;return n?a(a({},e),n):e}))}),[]);return[n,l]};e["a"]=o},sRBo:function(t,e,n){"use strict";n("EFp3"),n("KCY9")}}]);